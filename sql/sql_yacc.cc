/* A Bison parser, made by GNU Bison 3.0.4.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.4"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 31 "sql_yacc.yy" /* yacc.c:339  */

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)
#define YYCLIENT_NO_SCHEMA (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_query_block()

#include <sys/types.h>  // TODO: replace with cstdint

#include <algorithm>
#include <cerrno>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <limits>
#include <memory>
#include <string>
#include <type_traits>
#include <utility>

#include "field_types.h"
#include "ft_global.h"
#include "lex_string.h"
#include "libbinlogevents/include/binlog_event.h"
#include "m_ctype.h"
#include "m_string.h"
#include "my_alloc.h"
#include "my_base.h"
#include "my_check_opt.h"
#include "my_dbug.h"
#include "my_inttypes.h"  // TODO: replace with cstdint
#include "my_sqlcommand.h"
#include "my_sys.h"
#include "my_thread_local.h"
#include "my_time.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/mysql_lex_string.h"
#include "mysql/plugin.h"
#include "mysql/udf_registration_types.h"
#include "mysql_com.h"
#include "mysql_time.h"
#include "mysqld_error.h"
#include "prealloced_array.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/create_field.h"
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/dd/types/column.h"
#include "sql/derror.h"
#include "sql/event_parse_data.h"
#include "sql/field.h"
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/handler.h"
#include "sql/item.h"
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_func.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/item_row.h"
#include "sql/item_strfunc.h"
#include "sql/item_subselect.h"
#include "sql/item_sum.h"
#include "sql/item_timefunc.h"
#include "sql/json_dom.h"
#include "sql/json_syntax_check.h"           // is_valid_json_syntax
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/lexer_yystype.h"
#include "sql/mdl.h"
#include "sql/mem_root_array.h"
#include "sql/mysqld.h"
#include "sql/options_mysqld.h"
#include "sql/parse_location.h"
#include "sql/parse_tree_helpers.h"
#include "sql/parse_tree_node_base.h"
#include "sql/parser_yystype.h"
#include "sql/partition_element.h"
#include "sql/partition_info.h"
#include "sql/protocol.h"
#include "sql/query_options.h"
#include "sql/resourcegroups/platform/thread_attrs_api.h"
#include "sql/resourcegroups/resource_group_basic_types.h"
#include "sql/rpl_filter.h"
#include "sql/rpl_replica.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/spatial.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_connect.h"
#include "sql/sql_component.h"
#include "sql/sql_error.h"
#include "sql/sql_exchange.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_lex.h"
#include "sql/sql_list.h"
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_profile.h"
#include "sql/sql_select.h"                      // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger
#include "sql/sql_udf.h"
#include "sql/system_variables.h"
#include "sql/table.h"
#include "sql/table_function.h"
#include "sql/thr_malloc.h"
#include "sql/trigger_def.h"
#include "sql/window_lex.h"
#include "sql/xa.h"
#include "sql_chars.h"
#include "sql_string.h"
#include "thr_lock.h"
#include "violite.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, NULL, (const char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT YYABORT

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)


#ifndef NDEBUG
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error or an out-of-memory
  condition occurs, then the parser function MYSQLparse()
  returns 1 to the caller.

  This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros..

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static
void MYSQLerror(YYLTYPE *location, THD *thd, Parse_tree_root **, const char *s)
{
  if (strcmp(s, "syntax error") == 0) {
    thd->syntax_error_at(*location);
  } else if (strcmp(s, "memory exhausted") == 0) {
    my_error(ER_DA_OOM, MYF(0));
  } else {
    // Find omitted error messages in the generated file (sql_yacc.cc) and fix:
    assert(false);
    my_error(ER_UNKNOWN_ERROR, MYF(0));
  }
}


#ifndef NDEBUG
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_CSTR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}

void warn_about_deprecated_binary(THD *thd)
{
  push_deprecated_warn(thd, "BINARY as attribute of a type",
  "a CHARACTER SET clause with _bin collation");
}


#line 531 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_MNT_JENKINS_WORKSPACE_PS8_0_AUTOBUILD_RELEASE_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_MNT_JENKINS_WORKSPACE_PS8_0_AUTOBUILD_RELEASE_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACCOUNT_SYM = 260,
    ACTION = 261,
    ADD = 262,
    ADDDATE_SYM = 263,
    AFTER_SYM = 264,
    AGAINST = 265,
    AGGREGATE_SYM = 266,
    ALGORITHM_SYM = 267,
    ALL = 268,
    ALTER = 269,
    ALWAYS_SYM = 270,
    OBSOLETE_TOKEN_271 = 271,
    ANALYZE_SYM = 272,
    AND_AND_SYM = 273,
    AND_SYM = 274,
    ANY_SYM = 275,
    AS = 276,
    ASC = 277,
    ASCII_SYM = 278,
    ASENSITIVE_SYM = 279,
    AT_SYM = 280,
    AUTOEXTEND_SIZE_SYM = 281,
    AUTO_INC = 282,
    AVG_ROW_LENGTH = 283,
    AVG_SYM = 284,
    BACKUP_SYM = 285,
    BEFORE_SYM = 286,
    BEGIN_SYM = 287,
    BETWEEN_SYM = 288,
    BIGINT_SYM = 289,
    BINARY_SYM = 290,
    BINLOG_SYM = 291,
    BIN_NUM = 292,
    BIT_AND_SYM = 293,
    BIT_OR_SYM = 294,
    BIT_SYM = 295,
    BIT_XOR_SYM = 296,
    BLOB_SYM = 297,
    BLOCK_SYM = 298,
    BOOLEAN_SYM = 299,
    BOOL_SYM = 300,
    BOTH = 301,
    BTREE_SYM = 302,
    BY = 303,
    BYTE_SYM = 304,
    CACHE_SYM = 305,
    CALL_SYM = 306,
    CASCADE = 307,
    CASCADED = 308,
    CASE_SYM = 309,
    CAST_SYM = 310,
    CATALOG_NAME_SYM = 311,
    CHAIN_SYM = 312,
    CHANGE = 313,
    CHANGED = 314,
    CHANNEL_SYM = 315,
    CHARSET = 316,
    CHAR_SYM = 317,
    CHECKSUM_SYM = 318,
    CHECK_SYM = 319,
    CIPHER_SYM = 320,
    CLASS_ORIGIN_SYM = 321,
    CLIENT_SYM = 322,
    CLOSE_SYM = 323,
    COALESCE = 324,
    CODE_SYM = 325,
    COLLATE_SYM = 326,
    COLLATION_SYM = 327,
    COLUMNS = 328,
    COLUMN_SYM = 329,
    COLUMN_FORMAT_SYM = 330,
    COLUMN_NAME_SYM = 331,
    COMMENT_SYM = 332,
    COMMITTED_SYM = 333,
    COMMIT_SYM = 334,
    COMPACT_SYM = 335,
    COMPLETION_SYM = 336,
    COMPRESSED_SYM = 337,
    COMPRESSION_SYM = 338,
    ENCRYPTION_SYM = 339,
    CONCURRENT = 340,
    CONDITION_SYM = 341,
    CONNECTION_SYM = 342,
    CONSISTENT_SYM = 343,
    CONSTRAINT = 344,
    CONSTRAINT_CATALOG_SYM = 345,
    CONSTRAINT_NAME_SYM = 346,
    CONSTRAINT_SCHEMA_SYM = 347,
    CONTAINS_SYM = 348,
    CONTEXT_SYM = 349,
    CONTINUE_SYM = 350,
    CONVERT_SYM = 351,
    COUNT_SYM = 352,
    CPU_SYM = 353,
    CREATE = 354,
    CROSS = 355,
    CUBE_SYM = 356,
    CURDATE = 357,
    CURRENT_SYM = 358,
    CURRENT_USER = 359,
    CURSOR_SYM = 360,
    CURSOR_NAME_SYM = 361,
    CURTIME = 362,
    DATABASE = 363,
    DATABASES = 364,
    DATAFILE_SYM = 365,
    DATA_SYM = 366,
    DATETIME_SYM = 367,
    DATE_ADD_INTERVAL = 368,
    DATE_SUB_INTERVAL = 369,
    DATE_SYM = 370,
    DAY_HOUR_SYM = 371,
    DAY_MICROSECOND_SYM = 372,
    DAY_MINUTE_SYM = 373,
    DAY_SECOND_SYM = 374,
    DAY_SYM = 375,
    DEALLOCATE_SYM = 376,
    DECIMAL_NUM = 377,
    DECIMAL_SYM = 378,
    DECLARE_SYM = 379,
    DEFAULT_SYM = 380,
    DEFAULT_AUTH_SYM = 381,
    DEFINER_SYM = 382,
    DELAYED_SYM = 383,
    DELAY_KEY_WRITE_SYM = 384,
    DELETE_SYM = 385,
    DESC = 386,
    DESCRIBE = 387,
    OBSOLETE_TOKEN_388 = 388,
    DETERMINISTIC_SYM = 389,
    DIAGNOSTICS_SYM = 390,
    DIRECTORY_SYM = 391,
    DISABLE_SYM = 392,
    DISCARD_SYM = 393,
    DISK_SYM = 394,
    DISTINCT = 395,
    DIV_SYM = 396,
    DOUBLE_SYM = 397,
    DO_SYM = 398,
    DROP = 399,
    DUAL_SYM = 400,
    DUMPFILE = 401,
    DUPLICATE_SYM = 402,
    DYNAMIC_SYM = 403,
    EACH_SYM = 404,
    ELSE = 405,
    ELSEIF_SYM = 406,
    ENABLE_SYM = 407,
    ENCLOSED = 408,
    END = 409,
    ENDS_SYM = 410,
    END_OF_INPUT = 411,
    ENGINES_SYM = 412,
    ENGINE_SYM = 413,
    ENUM_SYM = 414,
    EQ = 415,
    EQUAL_SYM = 416,
    ERROR_SYM = 417,
    ERRORS = 418,
    ESCAPED = 419,
    ESCAPE_SYM = 420,
    EVENTS_SYM = 421,
    EVENT_SYM = 422,
    EVERY_SYM = 423,
    EXCHANGE_SYM = 424,
    EXECUTE_SYM = 425,
    EXISTS = 426,
    EXIT_SYM = 427,
    EXPANSION_SYM = 428,
    EXPIRE_SYM = 429,
    EXPORT_SYM = 430,
    EXTENDED_SYM = 431,
    EXTENT_SIZE_SYM = 432,
    EXTRACT_SYM = 433,
    FALSE_SYM = 434,
    FAST_SYM = 435,
    FAULTS_SYM = 436,
    FETCH_SYM = 437,
    FILE_SYM = 438,
    FILE_BLOCK_SIZE_SYM = 439,
    FILTER_SYM = 440,
    FIRST_SYM = 441,
    FIXED_SYM = 442,
    FLOAT_NUM = 443,
    FLOAT_SYM = 444,
    FLUSH_SYM = 445,
    FOLLOWS_SYM = 446,
    FORCE_SYM = 447,
    FOREIGN = 448,
    FOR_SYM = 449,
    FORMAT_SYM = 450,
    FOUND_SYM = 451,
    FROM = 452,
    FULL = 453,
    FULLTEXT_SYM = 454,
    FUNCTION_SYM = 455,
    GE = 456,
    GENERAL = 457,
    GENERATED = 458,
    GROUP_REPLICATION = 459,
    GEOMETRYCOLLECTION_SYM = 460,
    GEOMETRY_SYM = 461,
    GET_FORMAT = 462,
    GET_SYM = 463,
    GLOBAL_SYM = 464,
    GRANT = 465,
    GRANTS = 466,
    GROUP_SYM = 467,
    GROUP_CONCAT_SYM = 468,
    GT_SYM = 469,
    HANDLER_SYM = 470,
    HASH_SYM = 471,
    HAVING = 472,
    HELP_SYM = 473,
    HEX_NUM = 474,
    HIGH_PRIORITY = 475,
    HOST_SYM = 476,
    HOSTS_SYM = 477,
    HOUR_MICROSECOND_SYM = 478,
    HOUR_MINUTE_SYM = 479,
    HOUR_SECOND_SYM = 480,
    HOUR_SYM = 481,
    IDENT = 482,
    IDENTIFIED_SYM = 483,
    IDENT_QUOTED = 484,
    IF = 485,
    IGNORE_SYM = 486,
    IGNORE_SERVER_IDS_SYM = 487,
    IMPORT = 488,
    INDEXES = 489,
    INDEX_SYM = 490,
    INFILE = 491,
    INITIAL_SIZE_SYM = 492,
    INNER_SYM = 493,
    INOUT_SYM = 494,
    INSENSITIVE_SYM = 495,
    INSERT_SYM = 496,
    INSERT_METHOD = 497,
    INSTANCE_SYM = 498,
    INSTALL_SYM = 499,
    INTERVAL_SYM = 500,
    INTO = 501,
    INT_SYM = 502,
    INVOKER_SYM = 503,
    IN_SYM = 504,
    IO_AFTER_GTIDS = 505,
    IO_BEFORE_GTIDS = 506,
    IO_SYM = 507,
    IPC_SYM = 508,
    IS = 509,
    ISOLATION = 510,
    ISSUER_SYM = 511,
    ITERATE_SYM = 512,
    JOIN_SYM = 513,
    JSON_SEPARATOR_SYM = 514,
    JSON_SYM = 515,
    KEYS = 516,
    KEY_BLOCK_SIZE = 517,
    KEY_SYM = 518,
    KILL_SYM = 519,
    LANGUAGE_SYM = 520,
    LAST_SYM = 521,
    LE = 522,
    LEADING = 523,
    LEAVES = 524,
    LEAVE_SYM = 525,
    LEFT = 526,
    LESS_SYM = 527,
    LEVEL_SYM = 528,
    LEX_HOSTNAME = 529,
    LIKE = 530,
    LIMIT = 531,
    LINEAR_SYM = 532,
    LINES = 533,
    LINESTRING_SYM = 534,
    LIST_SYM = 535,
    LOAD = 536,
    LOCAL_SYM = 537,
    OBSOLETE_TOKEN_538 = 538,
    LOCKS_SYM = 539,
    LOCK_SYM = 540,
    LOGFILE_SYM = 541,
    LOGS_SYM = 542,
    LONGBLOB_SYM = 543,
    LONGTEXT_SYM = 544,
    LONG_NUM = 545,
    LONG_SYM = 546,
    LOOP_SYM = 547,
    LOW_PRIORITY = 548,
    LT = 549,
    MASTER_AUTO_POSITION_SYM = 550,
    MASTER_BIND_SYM = 551,
    MASTER_CONNECT_RETRY_SYM = 552,
    MASTER_DELAY_SYM = 553,
    MASTER_HOST_SYM = 554,
    MASTER_LOG_FILE_SYM = 555,
    MASTER_LOG_POS_SYM = 556,
    MASTER_PASSWORD_SYM = 557,
    MASTER_PORT_SYM = 558,
    MASTER_RETRY_COUNT_SYM = 559,
    MASTER_SSL_CAPATH_SYM = 561,
    MASTER_TLS_VERSION_SYM = 562,
    MASTER_SSL_CA_SYM = 563,
    MASTER_SSL_CERT_SYM = 564,
    MASTER_SSL_CIPHER_SYM = 565,
    MASTER_SSL_CRL_SYM = 566,
    MASTER_SSL_CRLPATH_SYM = 567,
    MASTER_SSL_KEY_SYM = 568,
    MASTER_SSL_SYM = 569,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
    MASTER_SYM = 571,
    MASTER_USER_SYM = 572,
    MASTER_HEARTBEAT_PERIOD_SYM = 573,
    MATCH = 574,
    MAX_CONNECTIONS_PER_HOUR = 575,
    MAX_QUERIES_PER_HOUR = 576,
    MAX_ROWS = 577,
    MAX_SIZE_SYM = 578,
    MAX_SYM = 579,
    MAX_UPDATES_PER_HOUR = 580,
    MAX_USER_CONNECTIONS_SYM = 581,
    MAX_VALUE_SYM = 582,
    MEDIUMBLOB_SYM = 583,
    MEDIUMINT_SYM = 584,
    MEDIUMTEXT_SYM = 585,
    MEDIUM_SYM = 586,
    MEMORY_SYM = 587,
    MERGE_SYM = 588,
    MESSAGE_TEXT_SYM = 589,
    MICROSECOND_SYM = 590,
    MIGRATE_SYM = 591,
    MINUTE_MICROSECOND_SYM = 592,
    MINUTE_SECOND_SYM = 593,
    MINUTE_SYM = 594,
    MIN_ROWS = 595,
    MIN_SYM = 596,
    MODE_SYM = 597,
    MODIFIES_SYM = 598,
    MODIFY_SYM = 599,
    MOD_SYM = 600,
    MONTH_SYM = 601,
    MULTILINESTRING_SYM = 602,
    MULTIPOINT_SYM = 603,
    MULTIPOLYGON_SYM = 604,
    MUTEX_SYM = 605,
    MYSQL_ERRNO_SYM = 606,
    NAMES_SYM = 607,
    NAME_SYM = 608,
    NATIONAL_SYM = 609,
    NATURAL = 610,
    NCHAR_STRING = 611,
    NCHAR_SYM = 612,
    NDBCLUSTER_SYM = 613,
    NE = 614,
    NEG = 615,
    NEVER_SYM = 616,
    NEW_SYM = 617,
    NEXT_SYM = 618,
    NODEGROUP_SYM = 619,
    NONE_SYM = 620,
    NOT2_SYM = 621,
    NOT_SYM = 622,
    NOW_SYM = 623,
    NO_SYM = 624,
    NO_WAIT_SYM = 625,
    NO_WRITE_TO_BINLOG = 626,
    NULL_SYM = 627,
    NUM = 628,
    NUMBER_SYM = 629,
    NUMERIC_SYM = 630,
    NVARCHAR_SYM = 631,
    OFFSET_SYM = 632,
    ON_SYM = 633,
    ONE_SYM = 634,
    ONLY_SYM = 635,
    OPEN_SYM = 636,
    OPTIMIZE = 637,
    OPTIMIZER_COSTS_SYM = 638,
    OPTIONS_SYM = 639,
    OPTION = 640,
    OPTIONALLY = 641,
    OR2_SYM = 642,
    ORDER_SYM = 643,
    OR_OR_SYM = 644,
    OR_SYM = 645,
    OUTER_SYM = 646,
    OUTFILE = 647,
    OUT_SYM = 648,
    OWNER_SYM = 649,
    PACK_KEYS_SYM = 650,
    PAGE_SYM = 651,
    PARAM_MARKER = 652,
    PARSER_SYM = 653,
    OBSOLETE_TOKEN_654 = 654,
    PARTIAL = 655,
    PARTITION_SYM = 656,
    PARTITIONS_SYM = 657,
    PARTITIONING_SYM = 658,
    PASSWORD = 659,
    PHASE_SYM = 660,
    PLUGIN_DIR_SYM = 661,
    PLUGIN_SYM = 662,
    PLUGINS_SYM = 663,
    POINT_SYM = 664,
    POLYGON_SYM = 665,
    PORT_SYM = 666,
    POSITION_SYM = 667,
    PRECEDES_SYM = 668,
    PRECISION = 669,
    PREPARE_SYM = 670,
    PRESERVE_SYM = 671,
    PREV_SYM = 672,
    PRIMARY_SYM = 673,
    PRIVILEGES = 674,
    PROCEDURE_SYM = 675,
    PROCESS = 676,
    PROCESSLIST_SYM = 677,
    PROFILE_SYM = 678,
    PROFILES_SYM = 679,
    PROXY_SYM = 680,
    PURGE = 681,
    QUARTER_SYM = 682,
    QUERY_SYM = 683,
    QUICK = 684,
    RANGE_SYM = 685,
    READS_SYM = 686,
    READ_ONLY_SYM = 687,
    READ_SYM = 688,
    READ_WRITE_SYM = 689,
    REAL_SYM = 690,
    REBUILD_SYM = 691,
    RECOVER_SYM = 692,
    OBSOLETE_TOKEN_693 = 693,
    REDO_BUFFER_SIZE_SYM = 694,
    REDUNDANT_SYM = 695,
    REFERENCES = 696,
    REGEXP = 697,
    RELAY = 698,
    RELAYLOG_SYM = 699,
    RELAY_LOG_FILE_SYM = 700,
    RELAY_LOG_POS_SYM = 701,
    RELAY_THREAD = 702,
    RELEASE_SYM = 703,
    RELOAD = 704,
    REMOVE_SYM = 705,
    RENAME = 706,
    REORGANIZE_SYM = 707,
    REPAIR = 708,
    REPEATABLE_SYM = 709,
    REPEAT_SYM = 710,
    REPLACE_SYM = 711,
    REPLICATION = 712,
    REPLICATE_DO_DB = 713,
    REPLICATE_IGNORE_DB = 714,
    REPLICATE_DO_TABLE = 715,
    REPLICATE_IGNORE_TABLE = 716,
    REPLICATE_WILD_DO_TABLE = 717,
    REPLICATE_WILD_IGNORE_TABLE = 718,
    REPLICATE_REWRITE_DB = 719,
    REQUIRE_SYM = 720,
    RESET_SYM = 721,
    RESIGNAL_SYM = 722,
    RESOURCES = 723,
    RESTORE_SYM = 724,
    RESTRICT = 725,
    RESUME_SYM = 726,
    RETURNED_SQLSTATE_SYM = 727,
    RETURNS_SYM = 728,
    RETURN_SYM = 729,
    REVERSE_SYM = 730,
    REVOKE = 731,
    RIGHT = 732,
    ROLLBACK_SYM = 733,
    ROLLUP_SYM = 734,
    ROTATE_SYM = 735,
    ROUTINE_SYM = 736,
    ROWS_SYM = 737,
    ROW_FORMAT_SYM = 738,
    ROW_SYM = 739,
    ROW_COUNT_SYM = 740,
    RTREE_SYM = 741,
    SAVEPOINT_SYM = 742,
    SCHEDULE_SYM = 743,
    SCHEMA_NAME_SYM = 744,
    SECOND_MICROSECOND_SYM = 745,
    SECOND_SYM = 746,
    SECURITY_SYM = 747,
    SELECT_SYM = 748,
    SENSITIVE_SYM = 749,
    SEPARATOR_SYM = 750,
    SERIALIZABLE_SYM = 751,
    SERIAL_SYM = 752,
    SESSION_SYM = 753,
    SERVER_SYM = 754,
    OBSOLETE_TOKEN_755 = 755,
    SET_SYM = 756,
    SET_VAR = 757,
    SHARE_SYM = 758,
    SHIFT_LEFT = 759,
    SHIFT_RIGHT = 760,
    SHOW = 761,
    SHUTDOWN = 762,
    SIGNAL_SYM = 763,
    SIGNED_SYM = 764,
    SIMPLE_SYM = 765,
    SLAVE = 766,
    SLOW = 767,
    SMALLINT_SYM = 768,
    SNAPSHOT_SYM = 769,
    SOCKET_SYM = 770,
    SONAME_SYM = 771,
    SOUNDS_SYM = 772,
    SOURCE_SYM = 773,
    SPATIAL_SYM = 774,
    SPECIFIC_SYM = 775,
    SQLEXCEPTION_SYM = 776,
    SQLSTATE_SYM = 777,
    SQLWARNING_SYM = 778,
    SQL_AFTER_GTIDS = 779,
    SQL_AFTER_MTS_GAPS = 780,
    SQL_BEFORE_GTIDS = 781,
    SQL_BIG_RESULT = 782,
    SQL_BUFFER_RESULT = 783,
    OBSOLETE_TOKEN_784 = 784,
    SQL_CALC_FOUND_ROWS = 785,
    SQL_NO_CACHE_SYM = 786,
    SQL_SMALL_RESULT = 787,
    SQL_SYM = 788,
    SQL_THREAD = 789,
    SSL_SYM = 790,
    STACKED_SYM = 791,
    STARTING = 792,
    STARTS_SYM = 793,
    START_SYM = 794,
    STATS_AUTO_RECALC_SYM = 795,
    STATS_PERSISTENT_SYM = 796,
    STATS_SAMPLE_PAGES_SYM = 797,
    STATUS_SYM = 798,
    STDDEV_SAMP_SYM = 799,
    STD_SYM = 800,
    STOP_SYM = 801,
    STORAGE_SYM = 802,
    STORED_SYM = 803,
    STRAIGHT_JOIN = 804,
    STRING_SYM = 805,
    SUBCLASS_ORIGIN_SYM = 806,
    SUBDATE_SYM = 807,
    SUBJECT_SYM = 808,
    SUBPARTITIONS_SYM = 809,
    SUBPARTITION_SYM = 810,
    SUBSTRING = 811,
    SUM_SYM = 812,
    SUPER_SYM = 813,
    SUSPEND_SYM = 814,
    SWAPS_SYM = 815,
    SWITCHES_SYM = 816,
    SYSDATE = 817,
    TABLES = 818,
    TABLESPACE_SYM = 819,
    OBSOLETE_TOKEN_820 = 820,
    TABLE_SYM = 821,
    TABLE_CHECKSUM_SYM = 822,
    TABLE_NAME_SYM = 823,
    TEMPORARY = 824,
    TEMPTABLE_SYM = 825,
    TERMINATED = 826,
    TEXT_STRING = 827,
    TEXT_SYM = 828,
    THAN_SYM = 829,
    THEN_SYM = 830,
    TIMESTAMP_SYM = 831,
    TIMESTAMP_ADD = 832,
    TIMESTAMP_DIFF = 833,
    TIME_SYM = 834,
    TINYBLOB_SYM = 835,
    TINYINT_SYM = 836,
    TINYTEXT_SYN = 837,
    TO_SYM = 838,
    TRAILING = 839,
    TRANSACTION_SYM = 840,
    TRIGGERS_SYM = 841,
    TRIGGER_SYM = 842,
    TRIM = 843,
    TRUE_SYM = 844,
    TRUNCATE_SYM = 845,
    TYPES_SYM = 846,
    TYPE_SYM = 847,
    OBSOLETE_TOKEN_848 = 848,
    ULONGLONG_NUM = 849,
    UNCOMMITTED_SYM = 850,
    UNDEFINED_SYM = 851,
    UNDERSCORE_CHARSET = 852,
    UNDOFILE_SYM = 853,
    UNDO_BUFFER_SIZE_SYM = 854,
    UNDO_SYM = 855,
    UNICODE_SYM = 856,
    UNINSTALL_SYM = 857,
    UNION_SYM = 858,
    UNIQUE_SYM = 859,
    UNKNOWN_SYM = 860,
    UNLOCK_SYM = 861,
    UNSIGNED_SYM = 862,
    UNTIL_SYM = 863,
    UPDATE_SYM = 864,
    UPGRADE_SYM = 865,
    USAGE = 866,
    USER = 867,
    USE_FRM = 868,
    USE_SYM = 869,
    USING = 870,
    UTC_DATE_SYM = 871,
    UTC_TIMESTAMP_SYM = 872,
    UTC_TIME_SYM = 873,
    VALIDATION_SYM = 874,
    VALUES = 875,
    VALUE_SYM = 876,
    VARBINARY_SYM = 877,
    VARCHAR_SYM = 878,
    VARIABLES = 879,
    VARIANCE_SYM = 880,
    VARYING = 881,
    VAR_SAMP_SYM = 882,
    VIEW_SYM = 883,
    VIRTUAL_SYM = 884,
    WAIT_SYM = 885,
    WARNINGS = 886,
    WEEK_SYM = 887,
    WEIGHT_STRING_SYM = 888,
    WHEN_SYM = 889,
    WHERE = 890,
    WHILE_SYM = 891,
    WITH = 892,
    OBSOLETE_TOKEN_893 = 893,
    WITH_ROLLUP_SYM = 894,
    WITHOUT_SYM = 895,
    WORK_SYM = 896,
    WRAPPER_SYM = 897,
    WRITE_SYM = 898,
    X509_SYM = 899,
    XA_SYM = 900,
    XID_SYM = 901,
    XML_SYM = 902,
    XOR = 903,
    YEAR_MONTH_SYM = 904,
    YEAR_SYM = 905,
    ZEROFILL_SYM = 906,
    JSON_UNQUOTED_SEPARATOR_SYM = 907,
    PERSIST_SYM = 908,
    ROLE_SYM = 909,
    ADMIN_SYM = 910,
    INVISIBLE_SYM = 911,
    VISIBLE_SYM = 912,
    EXCEPT_SYM = 913,
    COMPONENT_SYM = 914,
    RECURSIVE_SYM = 915,
    GRAMMAR_SELECTOR_EXPR = 916,
    GRAMMAR_SELECTOR_GCOL = 917,
    GRAMMAR_SELECTOR_PART = 918,
    GRAMMAR_SELECTOR_CTE = 919,
    JSON_OBJECTAGG = 920,
    JSON_ARRAYAGG = 921,
    OF_SYM = 922,
    SKIP_SYM = 923,
    LOCKED_SYM = 924,
    NOWAIT_SYM = 925,
    GROUPING_SYM = 926,
    PERSIST_ONLY_SYM = 927,
    HISTOGRAM_SYM = 928,
    BUCKETS_SYM = 929,
    OBSOLETE_TOKEN_930 = 930,
    CLONE_SYM = 931,
    CUME_DIST_SYM = 932,
    DENSE_RANK_SYM = 933,
    EXCLUDE_SYM = 934,
    FIRST_VALUE_SYM = 935,
    FOLLOWING_SYM = 936,
    GROUPS_SYM = 937,
    LAG_SYM = 938,
    LAST_VALUE_SYM = 939,
    LEAD_SYM = 940,
    NTH_VALUE_SYM = 941,
    NTILE_SYM = 942,
    NULLS_SYM = 943,
    OTHERS_SYM = 944,
    OVER_SYM = 945,
    PERCENT_RANK_SYM = 946,
    PRECEDING_SYM = 947,
    RANK_SYM = 948,
    RESPECT_SYM = 949,
    ROW_NUMBER_SYM = 950,
    TIES_SYM = 951,
    UNBOUNDED_SYM = 952,
    WINDOW_SYM = 953,
    EMPTY_SYM = 954,
    JSON_TABLE_SYM = 955,
    NESTED_SYM = 956,
    ORDINALITY_SYM = 957,
    PATH_SYM = 958,
    HISTORY_SYM = 959,
    REUSE_SYM = 960,
    SRID_SYM = 961,
    THREAD_PRIORITY_SYM = 962,
    RESOURCE_SYM = 963,
    SYSTEM_SYM = 964,
    VCPU_SYM = 965,
    MASTER_PUBLIC_KEY_PATH_SYM = 966,
    GET_MASTER_PUBLIC_KEY_SYM = 967,
    RESTART_SYM = 968,
    DEFINITION_SYM = 969,
    DESCRIPTION_SYM = 970,
    ORGANIZATION_SYM = 971,
    REFERENCE_SYM = 972,
    ACTIVE_SYM = 973,
    INACTIVE_SYM = 974,
    LATERAL_SYM = 975,
    ARRAY_SYM = 976,
    MEMBER_SYM = 977,
    OPTIONAL_SYM = 978,
    SECONDARY_SYM = 979,
    SECONDARY_ENGINE_SYM = 980,
    SECONDARY_LOAD_SYM = 981,
    SECONDARY_UNLOAD_SYM = 982,
    RETAIN_SYM = 983,
    OLD_SYM = 984,
    ENFORCED_SYM = 985,
    OJ_SYM = 986,
    NETWORK_NAMESPACE_SYM = 987,
    RANDOM_SYM = 988,
    MASTER_COMPRESSION_ALGORITHM_SYM = 989,
    MASTER_ZSTD_COMPRESSION_LEVEL_SYM = 990,
    PRIVILEGE_CHECKS_USER_SYM = 991,
    MASTER_TLS_CIPHERSUITES_SYM = 992,
    REQUIRE_ROW_FORMAT_SYM = 993,
    PASSWORD_LOCK_TIME_SYM = 994,
    FAILED_LOGIN_ATTEMPTS_SYM = 995,
    REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM = 996,
    STREAM_SYM = 997,
    OFF_SYM = 998,
    RETURNING_SYM = 999,
    YYUNDEF = 1150,
    JSON_VALUE_SYM = 1151,
    TLS_SYM = 1152,
    ATTRIBUTE_SYM = 1153,
    ENGINE_ATTRIBUTE_SYM = 1154,
    SECONDARY_ENGINE_ATTRIBUTE_SYM = 1155,
    SOURCE_CONNECTION_AUTO_FAILOVER_SYM = 1156,
    ZONE_SYM = 1157,
    GRAMMAR_SELECTOR_DERIVED_EXPR = 1158,
    REPLICA_SYM = 1159,
    REPLICAS_SYM = 1160,
    ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM = 1161,
    GET_SOURCE_PUBLIC_KEY_SYM = 1162,
    SOURCE_AUTO_POSITION_SYM = 1163,
    SOURCE_BIND_SYM = 1164,
    SOURCE_COMPRESSION_ALGORITHM_SYM = 1165,
    SOURCE_CONNECT_RETRY_SYM = 1166,
    SOURCE_DELAY_SYM = 1167,
    SOURCE_HEARTBEAT_PERIOD_SYM = 1168,
    SOURCE_HOST_SYM = 1169,
    SOURCE_LOG_FILE_SYM = 1170,
    SOURCE_LOG_POS_SYM = 1171,
    SOURCE_PASSWORD_SYM = 1172,
    SOURCE_PORT_SYM = 1173,
    SOURCE_PUBLIC_KEY_PATH_SYM = 1174,
    SOURCE_RETRY_COUNT_SYM = 1175,
    SOURCE_SSL_SYM = 1176,
    SOURCE_SSL_CA_SYM = 1177,
    SOURCE_SSL_CAPATH_SYM = 1178,
    SOURCE_SSL_CERT_SYM = 1179,
    SOURCE_SSL_CIPHER_SYM = 1180,
    SOURCE_SSL_CRL_SYM = 1181,
    SOURCE_SSL_CRLPATH_SYM = 1182,
    SOURCE_SSL_KEY_SYM = 1183,
    SOURCE_SSL_VERIFY_SERVER_CERT_SYM = 1184,
    SOURCE_TLS_CIPHERSUITES_SYM = 1185,
    SOURCE_TLS_VERSION_SYM = 1186,
    SOURCE_USER_SYM = 1187,
    SOURCE_ZSTD_COMPRESSION_LEVEL_SYM = 1188,
    ST_COLLECT_SYM = 1189,
    KEYRING_SYM = 1190,
    AUTHENTICATION_SYM = 1191,
    FACTOR_SYM = 1192,
    FINISH_SYM = 1193,
    INITIATE_SYM = 1194,
    REGISTRATION_SYM = 1195,
    UNREGISTER_SYM = 1196,
    INITIAL_SYM = 1197,
    CHALLENGE_RESPONSE_SYM = 1198,
    GTID_ONLY_SYM = 1199,
    CHANGED_PAGE_BITMAPS_SYM = 1300,
    CLIENT_STATS_SYM = 1301,
    CLUSTERING_SYM = 1302,
    COMPRESSION_DICTIONARY_SYM = 1303,
    INDEX_STATS_SYM = 1304,
    TABLE_STATS_SYM = 1305,
    THREAD_STATS_SYM = 1306,
    USER_STATS_SYM = 1307,
    ENCRYPTION_KEY_ID_SYM = 1308,
    EFFECTIVE_SYM = 1350,
    SEQUENCE_TABLE_SYM = 1351,
    KEYWORD_USED_AS_IDENT = 1353,
    KEYWORD_USED_AS_KEYWORD = 1354,
    CONDITIONLESS_JOIN = 1355,
    SUBQUERY_AS_EXPR = 1356,
    EMPTY_FROM_CLAUSE = 1357
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND_SYM 293
#define BIT_OR_SYM 294
#define BIT_SYM 295
#define BIT_XOR_SYM 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define OBSOLETE_TOKEN_388 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD_SYM 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define OBSOLETE_TOKEN_538 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER_SYM 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define OBSOLETE_TOKEN_693 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define OBSOLETE_TOKEN_755 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define OBSOLETE_TOKEN_784 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define OBSOLETE_TOKEN_848 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define PERSIST_ONLY_SYM 927
#define HISTOGRAM_SYM 928
#define BUCKETS_SYM 929
#define OBSOLETE_TOKEN_930 930
#define CLONE_SYM 931
#define CUME_DIST_SYM 932
#define DENSE_RANK_SYM 933
#define EXCLUDE_SYM 934
#define FIRST_VALUE_SYM 935
#define FOLLOWING_SYM 936
#define GROUPS_SYM 937
#define LAG_SYM 938
#define LAST_VALUE_SYM 939
#define LEAD_SYM 940
#define NTH_VALUE_SYM 941
#define NTILE_SYM 942
#define NULLS_SYM 943
#define OTHERS_SYM 944
#define OVER_SYM 945
#define PERCENT_RANK_SYM 946
#define PRECEDING_SYM 947
#define RANK_SYM 948
#define RESPECT_SYM 949
#define ROW_NUMBER_SYM 950
#define TIES_SYM 951
#define UNBOUNDED_SYM 952
#define WINDOW_SYM 953
#define EMPTY_SYM 954
#define JSON_TABLE_SYM 955
#define NESTED_SYM 956
#define ORDINALITY_SYM 957
#define PATH_SYM 958
#define HISTORY_SYM 959
#define REUSE_SYM 960
#define SRID_SYM 961
#define THREAD_PRIORITY_SYM 962
#define RESOURCE_SYM 963
#define SYSTEM_SYM 964
#define VCPU_SYM 965
#define MASTER_PUBLIC_KEY_PATH_SYM 966
#define GET_MASTER_PUBLIC_KEY_SYM 967
#define RESTART_SYM 968
#define DEFINITION_SYM 969
#define DESCRIPTION_SYM 970
#define ORGANIZATION_SYM 971
#define REFERENCE_SYM 972
#define ACTIVE_SYM 973
#define INACTIVE_SYM 974
#define LATERAL_SYM 975
#define ARRAY_SYM 976
#define MEMBER_SYM 977
#define OPTIONAL_SYM 978
#define SECONDARY_SYM 979
#define SECONDARY_ENGINE_SYM 980
#define SECONDARY_LOAD_SYM 981
#define SECONDARY_UNLOAD_SYM 982
#define RETAIN_SYM 983
#define OLD_SYM 984
#define ENFORCED_SYM 985
#define OJ_SYM 986
#define NETWORK_NAMESPACE_SYM 987
#define RANDOM_SYM 988
#define MASTER_COMPRESSION_ALGORITHM_SYM 989
#define MASTER_ZSTD_COMPRESSION_LEVEL_SYM 990
#define PRIVILEGE_CHECKS_USER_SYM 991
#define MASTER_TLS_CIPHERSUITES_SYM 992
#define REQUIRE_ROW_FORMAT_SYM 993
#define PASSWORD_LOCK_TIME_SYM 994
#define FAILED_LOGIN_ATTEMPTS_SYM 995
#define REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM 996
#define STREAM_SYM 997
#define OFF_SYM 998
#define RETURNING_SYM 999
#define YYUNDEF 1150
#define JSON_VALUE_SYM 1151
#define TLS_SYM 1152
#define ATTRIBUTE_SYM 1153
#define ENGINE_ATTRIBUTE_SYM 1154
#define SECONDARY_ENGINE_ATTRIBUTE_SYM 1155
#define SOURCE_CONNECTION_AUTO_FAILOVER_SYM 1156
#define ZONE_SYM 1157
#define GRAMMAR_SELECTOR_DERIVED_EXPR 1158
#define REPLICA_SYM 1159
#define REPLICAS_SYM 1160
#define ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM 1161
#define GET_SOURCE_PUBLIC_KEY_SYM 1162
#define SOURCE_AUTO_POSITION_SYM 1163
#define SOURCE_BIND_SYM 1164
#define SOURCE_COMPRESSION_ALGORITHM_SYM 1165
#define SOURCE_CONNECT_RETRY_SYM 1166
#define SOURCE_DELAY_SYM 1167
#define SOURCE_HEARTBEAT_PERIOD_SYM 1168
#define SOURCE_HOST_SYM 1169
#define SOURCE_LOG_FILE_SYM 1170
#define SOURCE_LOG_POS_SYM 1171
#define SOURCE_PASSWORD_SYM 1172
#define SOURCE_PORT_SYM 1173
#define SOURCE_PUBLIC_KEY_PATH_SYM 1174
#define SOURCE_RETRY_COUNT_SYM 1175
#define SOURCE_SSL_SYM 1176
#define SOURCE_SSL_CA_SYM 1177
#define SOURCE_SSL_CAPATH_SYM 1178
#define SOURCE_SSL_CERT_SYM 1179
#define SOURCE_SSL_CIPHER_SYM 1180
#define SOURCE_SSL_CRL_SYM 1181
#define SOURCE_SSL_CRLPATH_SYM 1182
#define SOURCE_SSL_KEY_SYM 1183
#define SOURCE_SSL_VERIFY_SERVER_CERT_SYM 1184
#define SOURCE_TLS_CIPHERSUITES_SYM 1185
#define SOURCE_TLS_VERSION_SYM 1186
#define SOURCE_USER_SYM 1187
#define SOURCE_ZSTD_COMPRESSION_LEVEL_SYM 1188
#define ST_COLLECT_SYM 1189
#define KEYRING_SYM 1190
#define AUTHENTICATION_SYM 1191
#define FACTOR_SYM 1192
#define FINISH_SYM 1193
#define INITIATE_SYM 1194
#define REGISTRATION_SYM 1195
#define UNREGISTER_SYM 1196
#define INITIAL_SYM 1197
#define CHALLENGE_RESPONSE_SYM 1198
#define GTID_ONLY_SYM 1199
#define CHANGED_PAGE_BITMAPS_SYM 1300
#define CLIENT_STATS_SYM 1301
#define CLUSTERING_SYM 1302
#define COMPRESSION_DICTIONARY_SYM 1303
#define INDEX_STATS_SYM 1304
#define TABLE_STATS_SYM 1305
#define THREAD_STATS_SYM 1306
#define USER_STATS_SYM 1307
#define ENCRYPTION_KEY_ID_SYM 1308
#define EFFECTIVE_SYM 1350
#define SEQUENCE_TABLE_SYM 1351
#define KEYWORD_USED_AS_IDENT 1353
#define KEYWORD_USED_AS_KEYWORD 1354
#define CONDITIONLESS_JOIN 1355
#define SUBQUERY_AS_EXPR 1356
#define EMPTY_FROM_CLAUSE 1357

/* Value type.  */

/* Location type.  */
#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE YYLTYPE;
struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
};
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif



int MYSQLparse (class THD *YYTHD, class Parse_tree_root **parse_tree);

#endif /* !YY_MYSQL_MNT_JENKINS_WORKSPACE_PS8_0_AUTOBUILD_RELEASE_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

#line 2208 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
             && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  1160
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   90743

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  829
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1024
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3276
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5644

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1357

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   826,     2,     2,     2,   814,   809,     2,
     818,   819,   812,   811,   823,   810,   824,   813,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   825,   821,
       2,     2,     2,     2,   822,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   815,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   827,   808,   828,   816,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
       2,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     794,   795,   796,   797,   798,   799,   800,   801,   802,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     803,   804,     2,   805,   806,   807,   817,   820
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  2201,  2201,  2202,  2207,  2217,  2235,  2239,  2247,  2260,
    2259,  2284,  2291,  2293,  2297,  2298,  2303,  2304,  2305,  2306,
    2307,  2308,  2309,  2310,  2311,  2312,  2313,  2314,  2315,  2316,
    2317,  2318,  2319,  2320,  2321,  2322,  2323,  2324,  2325,  2326,
    2327,  2328,  2329,  2330,  2331,  2332,  2333,  2334,  2335,  2336,
    2337,  2338,  2339,  2340,  2341,  2342,  2343,  2344,  2345,  2346,
    2347,  2348,  2349,  2350,  2351,  2352,  2353,  2354,  2355,  2356,
    2357,  2358,  2359,  2360,  2361,  2362,  2363,  2364,  2365,  2366,
    2367,  2368,  2369,  2370,  2371,  2372,  2373,  2374,  2375,  2376,
    2377,  2378,  2379,  2380,  2381,  2382,  2383,  2384,  2385,  2386,
    2387,  2388,  2389,  2390,  2391,  2392,  2393,  2394,  2395,  2396,
    2397,  2398,  2399,  2400,  2401,  2402,  2403,  2404,  2405,  2406,
    2407,  2408,  2409,  2410,  2411,  2412,  2413,  2414,  2415,  2416,
    2417,  2418,  2419,  2420,  2421,  2422,  2423,  2424,  2425,  2426,
    2427,  2428,  2429,  2430,  2431,  2432,  2433,  2434,  2435,  2436,
    2437,  2438,  2442,  2452,  2453,  2457,  2477,  2484,  2495,  2494,
    2505,  2507,  2511,  2512,  2516,  2529,  2528,  2547,  2552,  2557,
    2556,  2573,  2572,  2590,  2591,  2594,  2601,  2608,  2615,  2622,
    2629,  2637,  2646,  2652,  2659,  2666,  2674,  2683,  2689,  2695,
    2703,  2711,  2717,  2724,  2731,  2739,  2751,  2757,  2764,  2771,
    2779,  2789,  2790,  2794,  2800,  2804,  2809,  2813,  2819,  2823,
    2828,  2832,  2837,  2841,  2846,  2850,  2855,  2859,  2864,  2868,
    2873,  2877,  2882,  2886,  2891,  2895,  2900,  2904,  2909,  2913,
    2918,  2922,  2927,  2931,  2936,  2940,  2945,  2949,  2954,  2958,
    2963,  2967,  2972,  2976,  2981,  2985,  2990,  2994,  2999,  3003,
    3008,  3012,  3017,  3021,  3025,  3029,  3033,  3037,  3047,  3051,
    3055,  3060,  3071,  3076,  3080,  3084,  3088,  3089,  3093,  3097,
    3101,  3106,  3110,  3114,  3118,  3124,  3158,  3162,  3166,  3170,
    3176,  3177,  3193,  3194,  3210,  3211,  3228,  3231,  3233,  3234,
    3238,  3244,  3250,  3259,  3263,  3267,  3274,  3278,  3282,  3296,
    3301,  3309,  3314,  3318,  3323,  3327,  3331,  3347,  3351,  3362,
    3363,  3368,  3378,  3388,  3393,  3401,  3408,  3421,  3420,  3435,
    3437,  3450,  3470,  3489,  3509,  3523,  3537,  3542,  3551,  3556,
    3568,  3580,  3594,  3610,  3614,  3621,  3630,  3638,  3652,  3654,
    3675,  3676,  3680,  3684,  3688,  3692,  3696,  3701,  3705,  3713,
    3712,  3744,  3743,  3752,  3761,  3762,  3768,  3774,  3784,  3790,
    3798,  3800,  3809,  3810,  3814,  3820,  3829,  3830,  3838,  3838,
    3896,  3897,  3898,  3899,  3900,  3901,  3902,  3903,  3904,  3905,
    3906,  3907,  3908,  3912,  3926,  3945,  3946,  3950,  3951,  3956,
    3958,  3960,  3962,  3964,  3966,  3968,  3974,  3975,  3976,  3980,
    3984,  3991,  3998,  3999,  4006,  4008,  4012,  4013,  4017,  4068,
    4070,  4074,  4075,  4079,  4129,  4130,  4131,  4132,  4136,  4137,
    4141,  4142,  4147,  4150,  4174,  4273,  4291,  4290,  4369,  4365,
    4442,  4443,  4448,  4450,  4455,  4478,  4489,  4493,  4515,  4516,
    4520,  4524,  4537,  4543,  4549,  4558,  4571,  4597,  4603,  4604,
    4610,  4611,  4616,  4622,  4635,  4637,  4657,  4663,  4665,  4667,
    4669,  4671,  4673,  4675,  4677,  4679,  4681,  4683,  4685,  4690,
    4704,  4721,  4722,  4724,  4729,  4735,  4744,  4750,  4759,  4767,
    4795,  4803,  4805,  4814,  4819,  4825,  4834,  4842,  4844,  4846,
    4848,  4850,  4852,  4854,  4856,  4858,  4860,  4862,  4864,  4866,
    4871,  4891,  4915,  4919,  4927,  4928,  4929,  4930,  4931,  4932,
    4933,  4934,  4935,  4936,  4937,  4938,  4939,  4944,  4943,  4954,
    4954,  5019,  5018,  5075,  5075,  5097,  5154,  5201,  5225,  5224,
    5249,  5271,  5273,  5274,  5278,  5296,  5317,  5325,  5363,  5317,
    5391,  5393,  5394,  5398,  5399,  5404,  5414,  5403,  5466,  5465,
    5479,  5480,  5484,  5485,  5490,  5498,  5489,  5548,  5556,  5547,
    5602,  5615,  5620,  5619,  5657,  5658,  5663,  5662,  5696,  5696,
    5715,  5714,  5762,  5777,  5785,  5776,  5843,  5851,  5840,  5893,
    5895,  5900,  5902,  5904,  5919,  5920,  5927,  5928,  5935,  5936,
    5940,  5946,  5955,  5956,  5957,  5958,  5959,  5960,  5961,  5962,
    5963,  5964,  5965,  5966,  5970,  5971,  5975,  5981,  5990,  5991,
    5992,  5993,  5994,  5995,  5996,  5997,  6001,  6002,  6006,  6012,
    6021,  6025,  6026,  6030,  6036,  6045,  6046,  6047,  6048,  6049,
    6050,  6051,  6055,  6056,  6060,  6066,  6075,  6076,  6077,  6081,
    6085,  6086,  6090,  6094,  6101,  6108,  6112,  6119,  6126,  6133,
    6140,  6147,  6154,  6161,  6168,  6172,  6179,  6186,  6200,  6207,
    6208,  6283,  6289,  6293,  6298,  6303,  6309,  6317,  6327,  6328,
    6342,  6350,  6354,  6358,  6362,  6366,  6370,  6377,  6378,  6383,
    6384,  6402,  6403,  6415,  6416,  6421,  6430,  6431,  6436,  6442,
    6452,  6453,  6465,  6466,  6470,  6476,  6485,  6494,  6497,  6502,
    6510,  6511,  6515,  6519,  6526,  6533,  6543,  6542,  6560,  6566,
    6575,  6576,  6581,  6582,  6586,  6592,  6601,  6608,  6609,  6613,
    6619,  6628,  6630,  6632,  6634,  6636,  6638,  6640,  6642,  6651,
    6652,  6656,  6657,  6678,  6679,  6683,  6684,  6688,  6693,  6698,
    6713,  6714,  6718,  6724,  6733,  6739,  6747,  6749,  6753,  6757,
    6761,  6765,  6769,  6773,  6786,  6790,  6794,  6798,  6802,  6813,
    6817,  6821,  6825,  6829,  6847,  6851,  6855,  6859,  6863,  6867,
    6871,  6875,  6879,  6883,  6887,  6891,  6895,  6899,  6903,  6907,
    6921,  6925,  6929,  6933,  6940,  6954,  6958,  6962,  6966,  6970,
    6971,  6972,  6973,  6974,  6975,  6979,  6980,  6981,  6985,  6986,
    6987,  6988,  6992,  6998,  7007,  7008,  7012,  7019,  7020,  7028,
    7034,  7040,  7045,  7062,  7070,  7078,  7082,  7083,  7087,  7088,
    7092,  7093,  7097,  7101,  7105,  7126,  7128,  7132,  7133,  7134,
    7138,  7142,  7146,  7150,  7154,  7158,  7162,  7166,  7171,  7176,
    7185,  7194,  7198,  7202,  7207,  7216,  7220,  7243,  7247,  7251,
    7255,  7259,  7263,  7267,  7268,  7272,  7276,  7280,  7285,  7290,
    7295,  7300,  7305,  7309,  7313,  7318,  7322,  7329,  7331,  7333,
    7335,  7337,  7339,  7341,  7343,  7348,  7349,  7353,  7354,  7358,
    7359,  7360,  7361,  7362,  7366,  7367,  7368,  7369,  7370,  7374,
    7379,  7383,  7385,  7389,  7390,  7391,  7392,  7397,  7401,  7410,
    7414,  7419,  7423,  7432,  7433,  7437,  7438,  7439,  7447,  7448,
    7452,  7456,  7460,  7461,  7462,  7471,  7472,  7473,  7474,  7477,
    7478,  7483,  7487,  7491,  7492,  7496,  7515,  7534,  7538,  7542,
    7546,  7550,  7554,  7558,  7562,  7566,  7570,  7574,  7578,  7582,
    7586,  7590,  7594,  7598,  7602,  7606,  7615,  7620,  7633,  7637,
    7641,  7648,  7649,  7656,  7657,  7658,  7662,  7663,  7664,  7668,
    7674,  7678,  7682,  7683,  7687,  7696,  7700,  7701,  7705,  7714,
    7718,  7719,  7723,  7729,  7733,  7734,  7738,  7739,  7744,  7745,
    7749,  7756,  7764,  7770,  7780,  7784,  7789,  7794,  7799,  7806,
    7812,  7823,  7824,  7832,  7831,  7843,  7845,  7849,  7864,  7865,
    7869,  7876,  7886,  7887,  7888,  7889,  7894,  7898,  7903,  7908,
    7914,  7923,  7924,  7925,  7926,  7927,  7931,  7932,  7937,  7938,
    7942,  7943,  7947,  7948,  7949,  7953,  7954,  7958,  7962,  7966,
    7970,  7974,  7978,  7982,  7986,  7992,  7993,  7997,  8003,  8012,
    8013,  8027,  8028,  8032,  8038,  8047,  8051,  8052,  8056,  8062,
    8071,  8072,  8077,  8078,  8082,  8086,  8090,  8114,  8115,  8116,
    8120,  8121,  8125,  8126,  8130,  8131,  8135,  8136,  8137,  8141,
    8147,  8157,  8163,  8178,  8184,  8194,  8195,  8204,  8205,  8209,
    8210,  8214,  8220,  8232,  8243,  8258,  8257,  8278,  8277,  8299,
    8298,  8320,  8319,  8338,  8332,  8355,  8354,  8390,  8412,  8431,
    8451,  8459,  8481,  8505,  8516,  8519,  8531,  8543,  8548,  8560,
    8572,  8583,  8590,  8598,  8599,  8603,  8613,  8623,  8628,  8635,
    8644,  8645,  8649,  8650,  8654,  8660,  8666,  8674,  8689,  8697,
    8705,  8712,  8719,  8726,  8733,  8739,  8745,  8751,  8763,  8775,
    8784,  8785,  8789,  8790,  8794,  8800,  8806,  8812,  8821,  8834,
    8835,  8836,  8837,  8841,  8842,  8854,  8855,  8859,  8860,  8864,
    8865,  8880,  8885,  8893,  8897,  8905,  8909,  8914,  8915,  8924,
    8928,  8939,  8943,  8947,  8951,  8955,  8960,  8965,  8970,  8975,
    8982,  8986,  8990,  8994,  8999,  9004,  9009,  9014,  9018,  9025,
    9026,  9030,  9034,  9041,  9042,  9050,  9057,  9062,  9066,  9071,
    9082,  9083,  9091,  9095,  9099,  9103,  9107,  9111,  9116,  9120,
    9124,  9128,  9132,  9136,  9140,  9144,  9148,  9152,  9157,  9161,
    9165,  9169,  9173,  9177,  9181,  9185,  9189,  9195,  9199,  9206,
    9211,  9216,  9224,  9225,  9230,  9235,  9241,  9250,  9254,  9258,
    9275,  9279,  9283,  9299,  9301,  9305,  9306,  9310,  9311,  9312,
    9316,  9317,  9318,  9322,  9323,  9324,  9325,  9329,  9330,  9338,
    9346,  9348,  9352,  9353,  9357,  9358,  9359,  9363,  9375,  9388,
    9395,  9396,  9400,  9415,  9430,  9414,  9454,  9471,  9474,  9481,
    9485,  9492,  9496,  9503,  9507,  9514,  9517,  9524,  9527,  9534,
    9537,  9544,  9547,  9555,  9558,  9565,  9569,  9576,  9580,  9588,
    9592,  9617,  9618,  9619,  9624,  9629,  9636,  9650,  9651,  9652,
    9656,  9665,  9666,  9670,  9671,  9679,  9680,  9681,  9685,  9695,
    9696,  9715,  9720,  9727,  9737,  9745,  9753,  9754,  9758,  9759,
    9767,  9769,  9771,  9773,  9775,  9777,  9782,  9789,  9790,  9791,
    9796,  9795,  9801,  9808,  9813,  9821,  9822,  9826,  9839,  9843,
    9852,  9858,  9867,  9874,  9875,  9879,  9884,  9891,  9897,  9906,
    9913,  9920,  9921,  9931,  9932,  9936,  9940,  9945,  9949,  9985,
    9989,  9993,  9997, 10001, 10040, 10046, 10053, 10059, 10066, 10071,
   10077, 10085, 10089, 10093, 10097, 10101, 10109, 10110, 10111, 10118,
   10123, 10127, 10139, 10161, 10185, 10186, 10190, 10194, 10195, 10199,
   10205, 10214, 10221, 10233, 10236, 10240, 10245, 10249, 10253, 10262,
   10268, 10277, 10281, 10285, 10292, 10293, 10297, 10301, 10302, 10306,
   10307, 10311, 10317, 10323, 10333, 10334, 10342, 10343, 10344, 10345,
   10346, 10350, 10351, 10356, 10362, 10367, 10373, 10377, 10381, 10385,
   10389, 10393, 10397, 10401, 10405, 10409, 10413, 10417, 10430, 10434,
   10438, 10443, 10447, 10454, 10458, 10467, 10471, 10475, 10479, 10487,
   10491, 10495, 10500, 10505, 10513, 10521, 10525, 10526, 10530, 10534,
   10538, 10542, 10546, 10550, 10554, 10558, 10562, 10566, 10570, 10574,
   10578, 10582, 10586, 10590, 10591, 10595, 10596, 10603, 10604, 10608,
   10609, 10613, 10614, 10615, 10616, 10617, 10618, 10619, 10623, 10624,
   10628, 10629, 10630, 10631, 10632, 10633, 10637, 10638, 10639, 10640,
   10641, 10642, 10646, 10650, 10654, 10658, 10662, 10666, 10667, 10671,
   10675, 10679, 10683, 10687, 10692, 10696, 10700, 10708, 10712, 10716,
   10720, 10724, 10728, 10733, 10740, 10751, 10752, 10762, 10766, 10770,
   10774, 10778, 10782, 10786, 10790, 10794, 10798, 10805, 10809, 10813,
   10817, 10821, 10825, 10829, 10833, 10837, 10842, 10847, 10852, 10856,
   10860, 10864, 10868, 10873, 10877, 10896, 10900, 10904, 10908, 10912,
   10917, 10922, 10926, 10930, 10935, 10939, 10943, 10947, 10951, 10955,
   10959, 10963, 10968, 10972, 10976, 10980, 10984, 10995, 10998, 11009,
   11013, 11017, 11021, 11025, 11029, 11033, 11037, 11041, 11045, 11049,
   11053, 11057, 11061, 11065, 11069, 11073, 11077, 11081, 11085, 11089,
   11093, 11097, 11101, 11107, 11113, 11119, 11125, 11131, 11135, 11153,
   11157, 11164, 11166, 11179, 11180, 11184, 11185, 11189, 11190, 11194,
   11200, 11209, 11216, 11217, 11221, 11225, 11229, 11233, 11237, 11247,
   11257, 11261, 11265, 11269, 11273, 11277, 11281, 11290, 11294, 11298,
   11302, 11306, 11310, 11314, 11318, 11322, 11326, 11336, 11340, 11344,
   11348, 11352, 11356, 11360, 11371, 11382, 11386, 11390, 11403, 11407,
   11419, 11420, 11424, 11425, 11426, 11431, 11434, 11442, 11445, 11449,
   11458, 11461, 11465, 11473, 11476, 11483, 11490, 11494, 11501, 11508,
   11515, 11536, 11539, 11547, 11550, 11558, 11561, 11569, 11572, 11581,
   11586, 11593, 11597, 11601, 11605, 11609, 11616, 11623, 11627, 11631,
   11635, 11639, 11647, 11650, 11654, 11658, 11662, 11668, 11669, 11670,
   11674, 11681, 11685, 11692, 11696, 11703, 11704, 11709, 11714, 11718,
   11719, 11723, 11728, 11738, 11745, 11752, 11771, 11779, 11786, 11793,
   11800, 11807, 11814, 11821, 11828, 11835, 11842, 11849, 11857, 11864,
   11871, 11878, 11885, 11892, 11899, 11906, 11916, 11917, 11921, 11927,
   11936, 11937, 11941, 11947, 11956, 11957, 11961, 11962, 11966, 11974,
   11983, 11984, 11985, 11998, 11999, 12080, 12084, 12089, 12093, 12097,
   12107, 12114, 12115, 12116, 12120, 12121, 12122, 12123, 12126, 12127,
   12130, 12132, 12135, 12137, 12145, 12146, 12150, 12179, 12180, 12181,
   12182, 12184, 12186, 12190, 12191, 12200, 12201, 12205, 12212, 12213,
   12217, 12230, 12241, 12254, 12268, 12275, 12281, 12290, 12294, 12304,
   12311, 12314, 12325, 12329, 12334, 12339, 12348, 12349, 12360, 12363,
   12366, 12370, 12374, 12382, 12385, 12386, 12387, 12391, 12392, 12396,
   12402, 12411, 12412, 12420, 12421, 12425, 12430, 12436, 12440, 12446,
   12455, 12461, 12469, 12473, 12482, 12494, 12495, 12496, 12497, 12498,
   12499, 12500, 12501, 12502, 12503, 12504, 12505, 12509, 12510, 12511,
   12512, 12513, 12514, 12515, 12516, 12517, 12521, 12522, 12523, 12524,
   12527, 12529, 12533, 12534, 12537, 12539, 12543, 12544, 12548, 12552,
   12553, 12560, 12564, 12571, 12576, 12585, 12602, 12610, 12617, 12623,
   12633, 12636, 12643, 12649, 12658, 12672, 12673, 12680, 12685, 12696,
   12697, 12712, 12717, 12727, 12734, 12735, 12739, 12746, 12751, 12761,
   12762, 12766, 12767, 12771, 12772, 12776, 12783, 12789, 12795, 12804,
   12808, 12812, 12816, 12820, 12827, 12828, 12832, 12833, 12834, 12835,
   12836, 12837, 12841, 12842, 12843, 12844, 12845, 12849, 12850, 12851,
   12852, 12853, 12857, 12858, 12859, 12860, 12861, 12865, 12870, 12871,
   12875, 12881, 12890, 12894, 12901, 12908, 12914, 12918, 12926, 12939,
   12955, 12964, 12974, 12997, 13032, 13039, 13054, 13064, 13079, 13088,
   13099, 13119, 13141, 13164, 13169, 13178, 13185, 13192, 13198, 13207,
   13213, 13222, 13223, 13227, 13228, 13232, 13233, 13237, 13243, 13252,
   13253, 13260, 13280, 13300, 13318, 13331, 13348, 13364, 13365, 13366,
   13375, 13379, 13380, 13391, 13393, 13397, 13402, 13407, 13415, 13420,
   13425, 13433, 13439, 13448, 13455, 13456, 13460, 13464, 13465, 13469,
   13474, 13484, 13489, 13498, 13499, 13502, 13504, 13508, 13512, 13517,
   13522, 13526, 13532, 13541, 13542, 13550, 13554, 13568, 13572, 13581,
   13598, 13599, 13603, 13610, 13622, 13630, 13631, 13637, 13650, 13660,
   13673, 13675, 13679, 13680, 13684, 13685, 13686, 13690, 13696, 13698,
   13702, 13703, 13707, 13708, 13712, 13713, 13714, 13715, 13716, 13717,
   13718, 13719, 13720, 13724, 13725, 13737, 13743, 13750, 13757, 13764,
   13771, 13778, 13785, 13792, 13799, 13806, 13823, 13830, 13837, 13844,
   13851, 13859, 13876, 13883, 13890, 13897, 13904, 13911, 13922, 13929,
   13936, 13943, 13950, 13957, 13964, 13971, 13975, 13979, 13983, 13987,
   13991, 13998, 14005, 14012, 14019, 14026, 14034, 14038, 14042, 14046,
   14050, 14057, 14064, 14071, 14078, 14085, 14092, 14099, 14106, 14113,
   14120, 14121, 14125, 14126, 14129, 14131, 14135, 14136, 14140, 14141,
   14145, 14146, 14150, 14151, 14152, 14153, 14157, 14158, 14162, 14163,
   14167, 14168, 14172, 14173, 14174, 14179, 14186, 14193, 14194, 14195,
   14196, 14197, 14198, 14205, 14206, 14211, 14214, 14230, 14248, 14258,
   14259, 14264, 14272, 14271, 14284, 14283, 14297, 14301, 14302, 14315,
   14314, 14337, 14338, 14343, 14345, 14347, 14349, 14351, 14353, 14359,
   14361, 14363, 14365, 14367, 14369, 14371, 14373, 14375, 14377, 14379,
   14381, 14383, 14388, 14389, 14394, 14393, 14400, 14410, 14411, 14416,
   14421, 14431, 14430, 14442, 14441, 14449, 14448, 14465, 14470, 14471,
   14475, 14476, 14491, 14490, 14501, 14502, 14512, 14516, 14530, 14542,
   14543, 14544, 14550, 14561, 14600, 14601, 14605, 14606, 14610, 14611,
   14612, 14616, 14617, 14621, 14622, 14626, 14627, 14631, 14636, 14640,
   14645, 14651, 14656, 14664, 14665, 14669, 14674, 14678, 14683, 14691,
   14692, 14696, 14697, 14701, 14702, 14706, 14707, 14708, 14712, 14718,
   14727, 14728, 14735, 14736, 14740, 14748, 14768, 14789, 14794, 14800,
   14805, 14813, 14820, 14827, 14837, 14856, 14857, 14858, 14868, 14869,
   14873, 14888, 14889, 14890, 14891, 14895, 14899, 14903, 14907, 14911,
   14918, 14919, 14923, 14924, 14928, 14939, 14940, 14941, 14946, 14950,
   14954, 14961, 14962, 14971, 14972, 14976, 14980, 14990, 14997, 15004,
   15008, 15012, 15016, 15020, 15024, 15033, 15039, 15050, 15056, 15067,
   15068, 15098, 15111, 15124, 15140, 15156, 15173, 15177, 15178, 15185,
   15201, 15202, 15213, 15214, 15224, 15225, 15236, 15237, 15247, 15248,
   15249, 15253, 15254, 15255, 15259, 15264, 15272, 15276, 15289, 15294,
   15302, 15326, 15327, 15328, 15329, 15330, 15337, 15338, 15339, 15346,
   15347, 15348, 15349, 15350, 15351, 15352, 15353, 15354, 15355, 15356,
   15357, 15358, 15359, 15360, 15361, 15362, 15363, 15364, 15365, 15366,
   15367, 15368, 15369, 15370, 15371, 15372, 15373, 15374, 15375, 15376,
   15377, 15378, 15379, 15380, 15381, 15396, 15397, 15398, 15405, 15406,
   15407, 15408, 15409, 15410, 15411, 15412, 15413, 15421, 15422, 15423,
   15424, 15425, 15426, 15427, 15428, 15429, 15430, 15431, 15432, 15433,
   15434, 15435, 15436, 15437, 15438, 15439, 15440, 15441, 15442, 15443,
   15444, 15445, 15446, 15447, 15448, 15449, 15450, 15451, 15452, 15453,
   15454, 15455, 15456, 15457, 15458, 15459, 15460, 15461, 15462, 15463,
   15464, 15465, 15466, 15467, 15468, 15469, 15470, 15471, 15472, 15473,
   15474, 15475, 15476, 15477, 15478, 15479, 15480, 15481, 15482, 15483,
   15484, 15485, 15486, 15487, 15488, 15489, 15490, 15491, 15492, 15493,
   15494, 15495, 15496, 15497, 15498, 15499, 15500, 15501, 15502, 15503,
   15504, 15505, 15506, 15507, 15508, 15509, 15510, 15511, 15512, 15513,
   15514, 15515, 15516, 15517, 15518, 15519, 15520, 15521, 15522, 15523,
   15524, 15525, 15526, 15527, 15528, 15529, 15530, 15531, 15532, 15533,
   15534, 15535, 15536, 15537, 15538, 15539, 15540, 15541, 15542, 15543,
   15544, 15545, 15546, 15547, 15548, 15549, 15550, 15551, 15552, 15553,
   15554, 15555, 15556, 15557, 15558, 15559, 15560, 15561, 15562, 15563,
   15564, 15565, 15566, 15567, 15568, 15569, 15570, 15571, 15572, 15573,
   15574, 15575, 15576, 15577, 15578, 15579, 15580, 15581, 15582, 15583,
   15584, 15585, 15586, 15587, 15588, 15589, 15590, 15591, 15592, 15593,
   15594, 15595, 15596, 15597, 15598, 15599, 15600, 15601, 15602, 15603,
   15604, 15605, 15606, 15607, 15608, 15609, 15610, 15611, 15612, 15613,
   15614, 15615, 15616, 15617, 15618, 15619, 15620, 15621, 15622, 15623,
   15624, 15625, 15626, 15627, 15628, 15629, 15630, 15631, 15632, 15633,
   15634, 15635, 15636, 15637, 15638, 15639, 15640, 15641, 15642, 15643,
   15644, 15645, 15646, 15647, 15648, 15649, 15650, 15651, 15652, 15653,
   15654, 15655, 15656, 15657, 15658, 15659, 15660, 15661, 15662, 15663,
   15664, 15665, 15666, 15667, 15668, 15669, 15670, 15671, 15672, 15673,
   15674, 15675, 15676, 15677, 15678, 15679, 15680, 15681, 15682, 15683,
   15684, 15685, 15686, 15687, 15688, 15689, 15690, 15691, 15692, 15693,
   15694, 15695, 15696, 15697, 15698, 15699, 15700, 15701, 15702, 15703,
   15704, 15705, 15706, 15707, 15708, 15709, 15710, 15711, 15712, 15713,
   15714, 15715, 15716, 15717, 15718, 15719, 15720, 15721, 15722, 15723,
   15724, 15725, 15726, 15727, 15728, 15729, 15730, 15731, 15732, 15733,
   15734, 15735, 15736, 15737, 15738, 15739, 15740, 15741, 15742, 15743,
   15744, 15745, 15746, 15747, 15748, 15749, 15750, 15751, 15752, 15753,
   15754, 15755, 15756, 15757, 15758, 15759, 15760, 15761, 15762, 15763,
   15764, 15765, 15766, 15767, 15768, 15769, 15770, 15771, 15772, 15773,
   15774, 15775, 15776, 15777, 15778, 15779, 15780, 15781, 15782, 15783,
   15784, 15785, 15786, 15787, 15788, 15789, 15790, 15791, 15792, 15793,
   15794, 15795, 15796, 15797, 15798, 15799, 15800, 15801, 15802, 15803,
   15804, 15805, 15806, 15807, 15808, 15809, 15810, 15811, 15812, 15813,
   15814, 15815, 15816, 15817, 15818, 15819, 15820, 15821, 15822, 15823,
   15824, 15825, 15826, 15827, 15828, 15829, 15830, 15831, 15832, 15833,
   15834, 15835, 15836, 15837, 15838, 15839, 15840, 15841, 15842, 15843,
   15844, 15845, 15846, 15847, 15848, 15849, 15850, 15851, 15852, 15864,
   15865, 15866, 15878, 15879, 15880, 15881, 15890, 15891, 15892, 15893,
   15894, 15905, 15914, 15918, 15922, 15926, 15933, 15941, 15949, 15961,
   15965, 15970, 15975, 15980, 15985, 15990, 15998, 15999, 16003, 16007,
   16014, 16020, 16029, 16034, 16041, 16051, 16052, 16057, 16061, 16069,
   16073, 16077, 16078, 16079, 16080, 16081, 16085, 16086, 16087, 16088,
   16092, 16093, 16094, 16095, 16099, 16100, 16101, 16102, 16103, 16104,
   16109, 16117, 16123, 16127, 16132, 16136, 16143, 16147, 16154, 16158,
   16162, 16169, 16173, 16180, 16187, 16188, 16192, 16199, 16200, 16204,
   16205, 16209, 16210, 16211, 16212, 16216, 16217, 16218, 16222, 16226,
   16230, 16234, 16238, 16247, 16258, 16263, 16262, 16268, 16278, 16279,
   16283, 16284, 16288, 16316, 16317, 16318, 16323, 16327, 16338, 16345,
   16353, 16361, 16368, 16375, 16391, 16408, 16420, 16424, 16428, 16431,
   16434, 16449, 16464, 16474, 16478, 16482, 16491, 16502, 16518, 16519,
   16523, 16524, 16525, 16526, 16530, 16531, 16532, 16533, 16534, 16540,
   16545, 16561, 16560, 16579, 16584, 16595, 16600, 16617, 16616, 16633,
   16646, 16647, 16648, 16649, 16652, 16654, 16658, 16664, 16673, 16680,
   16682, 16684, 16686, 16688, 16690, 16692, 16694, 16696, 16698, 16700,
   16702, 16704, 16706, 16708, 16710, 16712, 16717, 16719, 16733, 16735,
   16737, 16739, 16741, 16743, 16745, 16747, 16749, 16751, 16753, 16755,
   16757, 16759, 16764, 16765, 16768, 16770, 16774, 16775, 16779, 16789,
   16799, 16812, 16826, 16838, 16850, 16862, 16879, 16885, 16894, 16900,
   16909, 16910, 16914, 16915, 16919, 16929, 16938, 16952, 16959, 16973,
   16982, 16983, 16988, 16997, 16998, 16999, 17000, 17001, 17002, 17006,
   17019, 17033, 17047, 17061, 17076, 17091, 17097, 17103, 17112, 17123,
   17134, 17141, 17148, 17159, 17166, 17173, 17180, 17188, 17194, 17202,
   17219, 17227, 17241, 17252, 17275, 17289, 17294, 17302, 17307, 17315,
   17316, 17320, 17326, 17334, 17336, 17340, 17344, 17348, 17355, 17356,
   17361, 17362, 17366, 17367, 17371, 17376, 17378, 17383, 17384, 17392,
   17391, 17401, 17402, 17407, 17408, 17409, 17414, 17415, 17416, 17420,
   17421, 17425, 17437, 17446, 17456, 17465, 17479, 17480, 17481, 17485,
   17489, 17493, 17500, 17501, 17502, 17503, 17504, 17505, 17506, 17512,
   17523, 17532, 17534, 17536, 17541, 17542, 17543, 17544, 17545, 17549,
   17550, 17551, 17552, 17553, 17554, 17564, 17565, 17570, 17583, 17596,
   17598, 17600, 17605, 17610, 17612, 17614, 17620, 17621, 17623, 17629,
   17628, 17668, 17719, 17720, 17721, 17722, 17732, 17734, 17740, 17745,
   17763, 17753, 17830, 17848, 17872, 17896, 17902, 17943, 17869, 18010,
   18030, 18035, 18043, 18008, 18064, 18069, 18074, 18079, 18084, 18089,
   18097, 18098, 18101, 18110, 18120, 18138, 18139, 18143, 18144, 18145,
   18149, 18150, 18155, 18156, 18158, 18163, 18169, 18178, 18184, 18193,
   18199, 18208, 18225, 18234, 18256, 18260, 18268, 18271, 18275, 18282,
   18283, 18288, 18294, 18298, 18305, 18315, 18322, 18335, 18336, 18340,
   18341, 18349, 18350, 18355, 18363, 18364, 18369
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND_SYM", "BIT_OR_SYM",
  "BIT_SYM", "BIT_XOR_SYM", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME_SYM", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD_SYM",
  "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP",
  "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "OBSOLETE_TOKEN_538", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SSL_CAPATH_SYM", "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM",
  "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM",
  "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER_SYM", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "OBSOLETE_TOKEN_755", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "OBSOLETE_TOKEN_848", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "OBSOLETE_TOKEN_930", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "MASTER_PUBLIC_KEY_PATH_SYM", "GET_MASTER_PUBLIC_KEY_SYM",
  "RESTART_SYM", "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM",
  "REFERENCE_SYM", "ACTIVE_SYM", "INACTIVE_SYM", "LATERAL_SYM",
  "ARRAY_SYM", "MEMBER_SYM", "OPTIONAL_SYM", "SECONDARY_SYM",
  "SECONDARY_ENGINE_SYM", "SECONDARY_LOAD_SYM", "SECONDARY_UNLOAD_SYM",
  "RETAIN_SYM", "OLD_SYM", "ENFORCED_SYM", "OJ_SYM",
  "NETWORK_NAMESPACE_SYM", "RANDOM_SYM",
  "MASTER_COMPRESSION_ALGORITHM_SYM", "MASTER_ZSTD_COMPRESSION_LEVEL_SYM",
  "PRIVILEGE_CHECKS_USER_SYM", "MASTER_TLS_CIPHERSUITES_SYM",
  "REQUIRE_ROW_FORMAT_SYM", "PASSWORD_LOCK_TIME_SYM",
  "FAILED_LOGIN_ATTEMPTS_SYM", "REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM",
  "STREAM_SYM", "OFF_SYM", "RETURNING_SYM", "YYUNDEF", "JSON_VALUE_SYM",
  "TLS_SYM", "ATTRIBUTE_SYM", "ENGINE_ATTRIBUTE_SYM",
  "SECONDARY_ENGINE_ATTRIBUTE_SYM", "SOURCE_CONNECTION_AUTO_FAILOVER_SYM",
  "ZONE_SYM", "GRAMMAR_SELECTOR_DERIVED_EXPR", "REPLICA_SYM",
  "REPLICAS_SYM", "ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM",
  "GET_SOURCE_PUBLIC_KEY_SYM", "SOURCE_AUTO_POSITION_SYM",
  "SOURCE_BIND_SYM", "SOURCE_COMPRESSION_ALGORITHM_SYM",
  "SOURCE_CONNECT_RETRY_SYM", "SOURCE_DELAY_SYM",
  "SOURCE_HEARTBEAT_PERIOD_SYM", "SOURCE_HOST_SYM", "SOURCE_LOG_FILE_SYM",
  "SOURCE_LOG_POS_SYM", "SOURCE_PASSWORD_SYM", "SOURCE_PORT_SYM",
  "SOURCE_PUBLIC_KEY_PATH_SYM", "SOURCE_RETRY_COUNT_SYM", "SOURCE_SSL_SYM",
  "SOURCE_SSL_CA_SYM", "SOURCE_SSL_CAPATH_SYM", "SOURCE_SSL_CERT_SYM",
  "SOURCE_SSL_CIPHER_SYM", "SOURCE_SSL_CRL_SYM", "SOURCE_SSL_CRLPATH_SYM",
  "SOURCE_SSL_KEY_SYM", "SOURCE_SSL_VERIFY_SERVER_CERT_SYM",
  "SOURCE_TLS_CIPHERSUITES_SYM", "SOURCE_TLS_VERSION_SYM",
  "SOURCE_USER_SYM", "SOURCE_ZSTD_COMPRESSION_LEVEL_SYM", "ST_COLLECT_SYM",
  "KEYRING_SYM", "AUTHENTICATION_SYM", "FACTOR_SYM", "FINISH_SYM",
  "INITIATE_SYM", "REGISTRATION_SYM", "UNREGISTER_SYM", "INITIAL_SYM",
  "CHALLENGE_RESPONSE_SYM", "GTID_ONLY_SYM", "CHANGED_PAGE_BITMAPS_SYM",
  "CLIENT_STATS_SYM", "CLUSTERING_SYM", "COMPRESSION_DICTIONARY_SYM",
  "INDEX_STATS_SYM", "TABLE_STATS_SYM", "THREAD_STATS_SYM",
  "USER_STATS_SYM", "ENCRYPTION_KEY_ID_SYM", "EFFECTIVE_SYM",
  "SEQUENCE_TABLE_SYM", "KEYWORD_USED_AS_IDENT", "KEYWORD_USED_AS_KEYWORD",
  "CONDITIONLESS_JOIN", "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'",
  "'^'", "'~'", "SUBQUERY_AS_EXPR", "'('", "')'", "EMPTY_FROM_CLAUSE",
  "';'", "'@'", "','", "'.'", "':'", "'!'", "'{'", "'}'", "$accept",
  "start_entry", "sql_statement", "$@1", "opt_end_of_input",
  "simple_statement_or_begin", "simple_statement", "deallocate",
  "deallocate_or_drop", "prepare", "prepare_src", "execute", "$@2",
  "execute_using", "execute_var_list", "execute_var_ident", "help", "$@3",
  "change_replication_source", "change", "$@4", "$@5", "filter_defs",
  "filter_def", "opt_filter_db_list", "filter_db_list", "filter_db_ident",
  "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "source_defs", "change_replication_source_auto_position",
  "change_replication_source_host", "change_replication_source_bind",
  "change_replication_source_user", "change_replication_source_password",
  "change_replication_source_port",
  "change_replication_source_connect_retry",
  "change_replication_source_retry_count",
  "change_replication_source_delay", "change_replication_source_ssl",
  "change_replication_source_ssl_ca",
  "change_replication_source_ssl_capath",
  "change_replication_source_ssl_cipher",
  "change_replication_source_ssl_crl",
  "change_replication_source_ssl_crlpath",
  "change_replication_source_ssl_key",
  "change_replication_source_ssl_verify_server_cert",
  "change_replication_source_tls_version",
  "change_replication_source_tls_ciphersuites",
  "change_replication_source_ssl_cert",
  "change_replication_source_public_key",
  "change_replication_source_get_source_public_key",
  "change_replication_source_heartbeat_period",
  "change_replication_source_compression_algorithm",
  "change_replication_source_zstd_compression_level", "source_def",
  "ignore_server_id_list", "ignore_server_id", "privilege_check_def",
  "table_primary_key_check_def",
  "assign_gtids_to_anonymous_transactions_def",
  "source_tls_ciphersuites_def", "source_log_file", "source_log_pos",
  "source_file_def", "opt_channel", "create_table_stmt",
  "create_role_stmt", "create_resource_group_stmt", "create", "$@6",
  "create_srs_stmt", "srs_attributes", "default_role_clause",
  "create_index_stmt", "create_compression_dictionary_allowed_expr",
  "server_options_list", "server_option", "event_tail", "$@7",
  "ev_schedule_time", "$@8", "opt_ev_status", "ev_starts", "ev_ends",
  "opt_ev_on_completion", "ev_on_completion", "opt_ev_comment",
  "ev_sql_stmt", "$@9", "ev_sql_stmt_inner", "sp_name", "sp_a_chistics",
  "sp_c_chistics", "sp_chistic", "sp_c_chistic", "sp_suid", "call_stmt",
  "opt_paren_expr_list", "sp_fdparam_list", "sp_fdparams", "sp_fdparam",
  "sp_pdparam_list", "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_proc_stmts", "sp_proc_stmts1", "sp_decls", "sp_decl", "$@10", "$@11",
  "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "sp_proc_stmt", "sp_proc_stmt_if",
  "$@12", "sp_proc_stmt_statement", "$@13", "sp_proc_stmt_return", "$@14",
  "sp_proc_stmt_unlabeled", "$@15", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_open", "sp_proc_stmt_fetch",
  "$@16", "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list",
  "sp_if", "$@17", "$@18", "$@19", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "$@20", "$@21", "searched_case_stmt", "$@22",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@23", "$@24", "searched_when_clause", "$@25",
  "$@26", "else_clause_opt", "sp_labeled_control", "$@27", "sp_opt_label",
  "sp_labeled_block", "$@28", "sp_unlabeled_block", "$@29",
  "sp_block_content", "$@30", "sp_unlabeled_control", "$@31", "$@32",
  "$@33", "$@34", "trg_action_time", "trg_event", "opt_ts_datafile_name",
  "opt_logfile_group_name", "opt_tablespace_options",
  "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_undo_tablespace_options",
  "undo_tablespace_option_list", "undo_tablespace_option",
  "opt_logfile_group_options", "logfile_group_option_list",
  "logfile_group_option", "opt_alter_logfile_group_options",
  "alter_logfile_group_option_list", "alter_logfile_group_option",
  "ts_datafile", "undo_tablespace_state", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "option_autoextend_size", "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "ts_option_encryption",
  "ts_option_encryption_key_id", "ts_option_engine_attribute",
  "size_number", "opt_create_table_options_etc",
  "opt_create_partitioning_etc", "opt_duplicate_as_qe",
  "as_create_query_expression", "partition_clause", "part_type_def",
  "opt_linear", "opt_key_algo", "opt_num_parts", "opt_sub_part",
  "opt_name_list", "name_list", "opt_num_subparts", "opt_part_defs",
  "part_def_list", "part_definition", "opt_part_values", "part_func_max",
  "part_values_in", "part_value_list", "part_value_item_list_paren",
  "$@35", "part_value_item_list", "part_value_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "opt_part_options",
  "part_option_list", "part_option", "alter_database_options",
  "alter_database_option", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "default_encryption", "row_types",
  "merge_insert_types", "udf_type", "table_element_list", "table_element",
  "column_def", "opt_references", "table_constraint_def",
  "check_constraint", "opt_constraint_name", "opt_not",
  "opt_constraint_enforcement", "constraint_enforcement", "field_def",
  "opt_generated_always", "opt_stored_attribute", "type", "spatial_type",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "opt_PRECISION",
  "numeric_type", "standard_float_options", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_column_attribute_list", "column_attribute_list",
  "column_attribute", "opt_with_compression_dictionary", "column_format",
  "storage_media", "now", "now_or_signed_literal", "character_set",
  "charset_name", "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_default", "ascii", "unicode", "opt_charset_with_opt_binary",
  "opt_bin_mod", "ws_num_codepoints", "$@36", "opt_primary", "references",
  "opt_ref_list", "reference_list", "opt_match_clause",
  "opt_on_update_delete", "delete_option", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index",
  "opt_unique_combo_clustering", "unique_combo_clustering",
  "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "opt_index_type_clause", "index_type_clause",
  "visibility", "index_type", "key_list", "key_part",
  "key_list_with_expression", "key_part_with_expression", "opt_ident",
  "opt_component", "string_list", "alter_table_stmt",
  "alter_database_stmt", "$@37", "alter_procedure_stmt", "$@38",
  "alter_function_stmt", "$@39", "alter_view_stmt", "$@40", "$@41",
  "alter_event_stmt", "$@42", "alter_logfile_stmt",
  "alter_tablespace_stmt", "alter_undo_tablespace_stmt",
  "alter_server_stmt", "alter_user_stmt", "opt_replace_password",
  "alter_resource_group_stmt", "alter_user_command", "opt_user_attribute",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "group_replication_start", "opt_group_replication_start_options",
  "group_replication_start_options", "group_replication_start_option",
  "group_replication_user", "group_replication_password",
  "group_replication_plugin_auth", "replica", "stop_replica_stmt",
  "start_replica_stmt", "$@43", "$@44", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "opt_user_option", "opt_password_option",
  "opt_default_auth_option", "opt_plugin_dir_option",
  "opt_replica_thread_option_list", "replica_thread_option_list",
  "replica_thread_option", "opt_replica_until", "replica_until",
  "checksum", "opt_checksum_type", "repair_table_stmt",
  "opt_mi_repair_types", "mi_repair_types", "mi_repair_type",
  "analyze_table_stmt", "opt_num_buckets", "opt_histogram",
  "binlog_base64_event", "check_table_stmt", "opt_mi_check_types",
  "mi_check_types", "mi_check_type", "optimize_table_stmt",
  "opt_no_write_to_binlog", "rename", "$@45", "rename_list",
  "table_to_table_list", "table_to_table", "keycache_stmt",
  "keycache_list", "assign_to_keycache", "key_cache_name", "preload_stmt",
  "preload_list", "preload_keys", "adm_partition", "opt_cache_key_list",
  "opt_ignore_leaves", "select_stmt", "select_stmt_with_into",
  "query_expression", "query_expression_body", "query_expression_parens",
  "query_primary", "query_specification", "opt_from_clause", "from_clause",
  "from_tables", "table_reference_list", "table_value_constructor",
  "explicit_table", "select_options", "select_option_list",
  "select_option", "locking_clause_list", "locking_clause",
  "lock_strength", "table_locking_list", "opt_locked_row_action",
  "locked_row_action", "select_item_list", "select_item", "select_alias",
  "optional_braces", "expr", "bool_pri", "predicate", "opt_of", "bit_expr",
  "or", "and", "not", "not2", "comp_op", "all_or_any", "simple_expr",
  "opt_array_cast", "function_call_keyword", "function_call_nonkeyword",
  "opt_returning_type", "function_call_conflict", "geometry_function",
  "function_call_generic", "fulltext_options", "opt_natural_language_mode",
  "opt_query_expansion", "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "set_function_specification", "sum_expr", "window_func_call",
  "opt_lead_lag_info", "stable_integer", "param_or_var", "opt_ll_default",
  "opt_null_treatment", "opt_from_first_last", "opt_windowing_clause",
  "windowing_clause", "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "variable", "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list", "opt_expr",
  "opt_else", "when_list", "table_reference", "esc_table_reference",
  "joined_table", "natural_join_type", "inner_join_type",
  "outer_join_type", "opt_inner", "opt_outer", "opt_use_partition",
  "use_partition", "table_factor", "table_reference_list_parens",
  "single_table_parens", "single_table", "joined_table_parens",
  "derived_table", "table_function", "columns_clause", "columns_list",
  "jt_column", "jt_column_type", "opt_on_empty_or_error",
  "opt_on_empty_or_error_json_table", "on_empty", "on_error",
  "json_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as", "opt_table_alias",
  "opt_all", "opt_where_clause", "where_clause", "opt_having_clause",
  "with_clause", "with_list", "common_table_expr",
  "opt_derived_column_list", "simple_ident_list", "opt_window_clause",
  "window_definition_list", "window_definition", "opt_group_clause",
  "group_list", "olap_opt", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list",
  "opt_ordering_direction", "ordering_direction", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "select_var_list", "select_var_ident",
  "into_clause", "into_destination", "do_stmt", "drop_table_stmt",
  "drop_index_stmt", "drop_database_stmt", "drop_function_stmt",
  "drop_resource_group_stmt", "drop_procedure_stmt", "drop_user_stmt",
  "drop_view_stmt", "drop_event_stmt", "drop_trigger_stmt",
  "drop_tablespace_stmt", "drop_undo_tablespace_stmt", "drop_logfile_stmt",
  "drop_server_stmt", "drop_srs_stmt", "drop_role_stmt", "table_list",
  "table_alias_ref_list", "if_exists", "opt_temporary",
  "opt_drop_ts_options", "drop_ts_option_list", "drop_ts_option",
  "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "fields", "insert_values",
  "query_expression_or_parens", "value_or_values", "values_list",
  "values_row_list", "equal", "opt_equal", "row_value",
  "row_value_explicit", "opt_values", "values", "expr_or_default",
  "opt_values_reference", "opt_insert_update_list", "update_stmt",
  "opt_with_clause", "update_list", "update_elem", "opt_low_priority",
  "delete_stmt", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate_stmt", "opt_table", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_for_query", "show_databases_stmt",
  "show_tables_stmt", "show_triggers_stmt", "show_events_stmt",
  "show_table_status_stmt", "show_open_tables_stmt", "show_plugins_stmt",
  "show_engine_logs_stmt", "show_engine_mutex_stmt",
  "show_engine_status_stmt", "show_columns_stmt", "show_binary_logs_stmt",
  "show_replicas_stmt", "show_binlog_events_stmt",
  "show_relaylog_events_stmt", "show_keys_stmt", "show_engines_stmt",
  "show_count_warnings_stmt", "show_count_errors_stmt",
  "show_warnings_stmt", "show_errors_stmt", "show_profiles_stmt",
  "show_profile_stmt", "show_status_stmt", "show_processlist_stmt",
  "show_variables_stmt", "show_character_set_stmt", "show_collation_stmt",
  "show_privileges_stmt", "show_grants_stmt", "show_create_database_stmt",
  "show_create_table_stmt", "show_create_view_stmt",
  "show_master_status_stmt", "show_replica_status_stmt", "show_stats_stmt",
  "show_create_procedure_stmt", "show_create_function_stmt",
  "show_create_trigger_stmt", "show_procedure_status_stmt",
  "show_function_status_stmt", "show_procedure_code_stmt",
  "show_function_code_stmt", "show_create_event_stmt",
  "show_create_user_stmt", "engine_or_all", "master_or_binary",
  "opt_storage", "opt_db", "opt_full", "opt_extended", "opt_show_cmd_type",
  "from_or_in", "opt_binlog_in", "binlog_from", "opt_wild_or_where",
  "describe_stmt", "explain_stmt", "explainable_stmt", "describe_command",
  "opt_explain_format_type", "opt_explain_analyze_type",
  "opt_describe_column", "flush", "$@46", "flush_options", "$@47",
  "opt_flush_lock", "$@48", "flush_options_list", "flush_option",
  "opt_table_list", "reset", "$@49", "reset_options",
  "opt_if_exists_ident", "reset_option", "$@50", "$@51", "$@52",
  "opt_replica_reset_options", "source_reset_options", "purge", "$@53",
  "purge_options", "purge_option", "kill", "kill_option", "use",
  "load_stmt", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "signed_literal_or_null", "null_as_literal", "literal",
  "literal_or_null", "NUM_literal", "int64_literal", "temporal_literal",
  "opt_interval", "insert_ident", "table_wild", "order_expr",
  "grouping_expr", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "table_ident", "table_ident_opt_wild", "IDENT_sys",
  "TEXT_STRING_sys_nonewline", "filter_wild_db_table_string",
  "TEXT_STRING_sys", "TEXT_STRING_literal", "TEXT_STRING_filesystem",
  "TEXT_STRING_password", "TEXT_STRING_hash", "TEXT_STRING_validated",
  "ident", "role_ident", "label_ident", "lvalue_ident", "ident_or_text",
  "role_ident_or_text", "user_ident_or_text", "user", "role", "schema",
  "ident_keyword", "ident_keywords_ambiguous_1_roles_and_labels",
  "ident_keywords_ambiguous_2_labels", "label_keyword",
  "ident_keywords_ambiguous_3_roles", "ident_keywords_unambiguous",
  "role_keyword", "lvalue_keyword",
  "ident_keywords_ambiguous_4_system_variables", "set",
  "start_option_value_list", "set_role_stmt", "opt_except_role_list",
  "set_resource_group_stmt", "thread_id_list", "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "opt_transaction_access_mode", "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types",
  "set_expr_or_default", "lock", "lock_variant", "$@54", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock",
  "unlock_variant", "shutdown_stmt", "restart_server_stmt",
  "alter_instance_stmt", "alter_instance_action", "handler_stmt",
  "handler_scan_function", "handler_rkey_function", "handler_rkey_mode",
  "revoke", "$@55", "grant", "$@56", "opt_acl_type", "opt_privileges",
  "role_or_privilege_list", "role_or_privilege", "opt_with_admin_option",
  "opt_and", "require_list", "require_list_element", "grant_ident",
  "user_list", "role_list", "opt_retain_current_password",
  "opt_discard_old_password", "opt_user_registration", "create_user",
  "opt_create_user_with_mfa", "identification", "identified_by_password",
  "identified_by_random_password", "identified_with_plugin",
  "identified_with_plugin_as_auth", "identified_with_plugin_by_password",
  "identified_with_plugin_by_random_password", "opt_initial_auth",
  "alter_user", "factor", "create_user_list", "alter_user_list",
  "opt_column_list", "column_list", "require_clause", "grant_options",
  "opt_grant_option", "opt_with_roles", "opt_grant_as", "begin_stmt",
  "$@57", "opt_work", "opt_chain", "opt_release", "opt_savepoint",
  "commit", "rollback", "savepoint", "release", "union_option",
  "row_subquery", "table_subquery", "subquery", "query_spec_option",
  "init_lex_create_info", "view_or_trigger_or_sp_or_event", "definer_tail",
  "no_definer_tail", "definer_opt", "no_definer", "definer",
  "view_replace_or_algorithm", "view_replace", "view_algorithm",
  "view_suid", "view_tail", "$@58", "view_query_block",
  "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@59", "udf_tail",
  "sf_tail", "$@60", "$@61", "$@62", "$@63", "sp_tail", "$@64", "$@65",
  "$@66", "$@67", "xa", "opt_convert_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "install",
  "uninstall", "TEXT_STRING_sys_list", "import_stmt", "clone_stmt",
  "opt_datadir_ssl", "opt_ssl", "resource_group_types",
  "opt_resource_group_vcpu_list", "vcpu_range_spec_list",
  "vcpu_num_or_range", "signed_num", "opt_resource_group_priority",
  "opt_resource_group_enable_disable", "opt_force", "json_attribute", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,  1352,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   795,
     796,   797,   798,   799,   800,   801,   802,   803,   804,   805,
     806,   807,   808,   809,   810,   811,   812,   813,   814,   815,
     816,   817,   818,   819,   820,   821,   822,   823,   824,   825,
     826,   827,   828,   829,   830,   831,   832,   833,   834,   835,
     836,   837,   838,   839,   840,   841,   842,   843,   844,   845,
     846,   847,   848,   849,   850,   851,   852,   853,   854,   855,
     856,   857,   858,   859,   860,   861,   862,   863,   864,   865,
     866,   867,   868,   869,   870,   871,   872,   873,   874,   875,
     876,   877,   878,   879,   880,   881,   882,   883,   884,   885,
     886,   887,   888,   889,   890,   891,   892,   893,   894,   895,
     896,   897,   898,   899,   900,   901,   902,   903,   904,   905,
     906,   907,   908,   909,   910,   911,   912,   913,   914,   915,
     916,   917,   918,   919,   920,   921,   922,   923,   924,   925,
     926,   927,   928,   929,   930,   931,   932,   933,   934,   935,
     936,   937,   938,   939,   940,   941,   942,   943,   944,   945,
     946,   947,   948,   949,   950,   951,   952,   953,   954,   955,
     956,   957,   958,   959,   960,   961,   962,   963,   964,   965,
     966,   967,   968,   969,   970,   971,   972,   973,   974,   975,
     976,   977,   978,   979,   980,   981,   982,   983,   984,   985,
     986,   987,   988,   989,   990,   991,   992,   993,   994,   995,
     996,   997,   998,   999,  1150,  1151,  1152,  1153,  1154,  1155,
    1156,  1157,  1158,  1159,  1160,  1161,  1162,  1163,  1164,  1165,
    1166,  1167,  1168,  1169,  1170,  1171,  1172,  1173,  1174,  1175,
    1176,  1177,  1178,  1179,  1180,  1181,  1182,  1183,  1184,  1185,
    1186,  1187,  1188,  1189,  1190,  1191,  1192,  1193,  1194,  1195,
    1196,  1197,  1198,  1199,  1300,  1301,  1302,  1303,  1304,  1305,
    1306,  1307,  1308,  1350,  1351,  1353,  1354,  1355,   124,    38,
      45,    43,    42,    47,    37,    94,   126,  1356,    40,    41,
    1357,    59,    64,    44,    46,    58,    33,   123,   125
};
# endif

#define YYPACT_NINF -4770

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4770)))

#define YYTABLE_NINF -3055

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    7006,  3131,  1843, -4770,   -34,   376, 73458,   241,  1588,  1588,
     641,  3283, -4770, -4770, -4770, 13134,  4370, -4770, 73458,  1843,
     304, 49488, 73458, -4770,   745,  2086,   139,   415,   378,  1178,
    1843, 73458, -4770,   845,   730,  1843,   399,   693, 65468, 50287,
     641, 73458,  1904, 31092,  9341, -4770, 65468,   547,   136, 73458,
     786,  1321,  1570, 73458,  1318, 66267,  2600, 23010,  2125,  1449,
    1164,   351, -4770, 17249,  2587,  1865, -4770,  1931, -4770, -4770,
    1680, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, 57478, -4770,   258,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770,  1996,   817,   906, -4770, -4770, -4770,
   -4770,  1469, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770,   500, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, 67066, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
    1959, 73458,  1976, 73458,  1908,  2019, 73458, 63870, 73458, 73458,
    1741,  2079,  2188,  2298, -4770, -4770,  2351, -4770, -4770,  1588,
     641, -4770, -4770, 73458, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770,  1701, -4770,  1729, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770,   268,  1984, -4770, -4770, 73458, 73458, -4770,  2552,  2346,
    2362,  2411,  2158, 63870,   176, 73458, -4770,  2078,    70,  2346,
    2346,  2437,   923,  2346,  2434, -4770,  2120, -4770, -4770, -4770,
    2351,  2663, -4770,  1871,  1887,  1924, 23010, -4770,  1932,  1967,
    1973, 17249,  1978,  1985,  2000,  2005,  2020,  2022,  2041,  2043,
    2043,  2048,  2051,  2062,  2075,   -76,  2080, -4770,  2085,  1164,
    2097, -4770, -4770,  2104,  2113,  2129,  2132, -4770,  2154,  2160,
    2167, 18072,  2173,  2193, -4770, 42291,  2195,  2202,  2210,  2222,
    2227,  2236,  2244,  2253,  2266, -4770, -4770, 17249,  2048, -4770,
   -4770, -4770,  2274,  2296,  2301,  2303,  2329,  2330,  2338,  2339,
    2354,  2373,  2375,  2382,  2396,  2410,  2417,  2424,  2048, -4770,
     -35,  2426,  2435,   855,  2445, -4770,  2453, -4770,   464,  2460,
    2043,  2048,  2048,  2462,  2469,  2470,  2476,  2487,  2502,  2504,
    2510,  2517,  2523,  2532,  2533,  2543,  2553,  2560,  2563,  2572,
    2581,  2582,  2590,  2591,  2603, 23010, 23010, -4770, 23010, 11488,
   31892, -4770, 73458, -4770, -4770,  1909, -4770, 52684,  2632, -4770,
    3313, 23010,  1427, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770,  2189, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770,   489, -4770,  2610,  2117, -4770, -4770,  2079,  2079,
    2079, 73458,  2576,  2079,  2079,  2161, 73458,  2079,  2400,  2079,
    2079,  2079,  2835,  2079,  1588, -4770, -4770, -4770, -4770,  2947,
    2698,  2615,  2673, -4770,  2475, -4770, -4770, -4770,  2755, -4770,
    2623, -4770,  2583, -4770,  2787,  2623, -4770,   611,  2623,   222,
   -4770, -4770, -4770,  2623, -4770, -4770, -4770, -4770,  1714, -4770,
   -4770, -4770, -4770,  1068, -4770,  2790,   196, 63870,  2983, -4770,
   -4770, -4770,  2959, 73458,   -34, -4770, -4770, 17249, -4770,  2966,
   -4770,  1105,  3032,  3061, -4770, -4770,  1588,  3072,   224, 73458,
   58277, -4770,  1588, -4770, -4770,  3124, -4770,   194,  1017,  2669,
   -4770, -4770,  2872, -4770,  2698,  3041,   110,   294, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, 13134,  1904,
   -4770, -4770,   158,  2942,  -135, -4770, -4770, 53483,  1234, -4770,
     961, -4770, 77453, -4770,  3231, 32692, 55081, -4770,  2620, -4770,
   -4770, -4770, -4770, -4770, -4770, 75855,  2627,  1009, -4770,  3285,
   -4770,   543,  2637,  2102,   543, 59076,  3180,  1099,   511,   295,
     290, -4770,  3263, -4770,  2921,  2913, -4770, -4770,   302,  3454,
   -4770,  3310, -4770,  3261, -4770,  2950,  3180, -4770, -4770,   543,
     543,   543,   543,   543,  3284,   543,  2962,  3216,  3354,    88,
    2277,   539,     8,  2872, -4770, -4770,  1324,  1475, -4770,  1475,
   -4770,  2690, -4770, 73458, 73458,   -34, -4770, -4770, -4770, -4770,
    2701,  2700, -4770, 73458,  2702, -4770,  2709, -4770,   510,   510,
     510,  3432,   510, -4770,   510,  3134,  2706,  2714,  3485,  3379,
    2915,  3380, -4770,  3340,  3429,  1378,  2722,   244,   339,  1469,
   -4770, -4770,  2723, 73458,  2043, -4770,  2724,  1777, -4770, -4770,
    2727, -4770,  4052, -4770,   312,  3383,  3385,  3395, -4770,  2733,
   -4770, -4770, -4770, -4770,    68, 30292,  3311,  1996, -4770,   344,
    3516,  1210,  3180, -4770, 55880,  1210,  3180, -4770, -4770,   817,
     962,  1891,  3268,  3372,  3408, -4770,  2468, 59875,  1461, -4770,
   -4770, 58277, -4770, 73458, 73458,  1129, 63870, -4770, 73458, -4770,
    3187,  2751,  8166, 73458,  3400, -4770, 73458, 73458,  3042, -4770,
   73458, -4770,    60, -4770,  2011, 17249, -4770, 73458, -4770, -4770,
   -4770,   146, -4770,   182,  1247,  1480,  2265, 73458, 73458, 73458,
    3065,  3386, 73458,  2876,  3578, 73458, -4770,  3323, 58277, 80649,
   73458, -4770,  3324, 73458, 73458,  2346,  1507,  1977, -4770, -4770,
   17249, 17249,  2042,  3518,  3577,  3577,  3577,  2765,  2963, 17249,
   17249, 17249, 17249, 17249, 17249,  2172,  2775, -4770, -4770,    37,
   -4770,  2780, 17249, 17249, -4770, 17249, 17249, 73458, -4770,  5520,
   17249, 17249,  1225,  3460, 17249, 17249, 17249, 11488,  5342, 17249,
   17249, 73458,  3591,  2781, -4770,  2788,  2255, 17249, 17249,  2318,
   17249, 17249, 17249, 17249, 17249, -4770, -4770, 17249, 17249, 23010,
   17249, 17249, 17249, 17249, 17249, 17249,  2792, 17249,  3577,  3577,
   17249, 17249,  2331, -4770, -4770, 17249,  2923,  2923, -4770, 17249,
   12311, 17249, -4770, -4770, -4770,  2794, -4770, -4770, -4770, 73458,
    3577,  3577, 17249, 17249, 17249,  3577,  3577, 17249,  2800,  2804,
   17249, 17249, 17249, 17249, 17249, 29492,  2805,  2807,  2813, 23010,
    2335,  3518,  3518,  3518,   800,   144,   203,   309,  1515, -4770,
    3132, 17249, 17249, -4770, -4770, 67865, -4770, -4770, -4770, 17249,
   -4770, 17249, 17249, -4770, -4770, -4770, -4770, -4770, -4770,  2404,
   -4770, -4770, -4770, 18895, 23010, 23010,  2823, 23010, 23010, -4770,
   -4770, 23010, 23010, 23010,  3369,  2979, 23010, 23010, 23833, 24656,
   23010, 23010, 23010, 23010,   421,  3518, 63870, 23010, -4770, -4770,
    2189,  2189, 17249, 45487, 73458, 73458, 73458,  3269, 73458, 73458,
   63870,  2943,  1456, 73458, 73458, 58277, 73458, 80649, 73458, 73458,
    2079,  3039,  3893, 35092, -4770, -4770, -4770, -4770, -4770,  3093,
   -4770, -4770, -4770, -4770, -4770, 73458, -4770, -4770, 58277, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, 63870, -4770,   219, 58277,
   51086,   213, -4770, 74257, 73458, -4770,   -34, -4770,  3124,  3144,
   -4770,  2840,  2765,  3614, -4770, -4770,  3387,  3635,  3641, 73458,
   73458,  -107, -4770,  3643,  3389, -4770, -4770,  2854,  3099, 73458,
   73458, -4770, 73458, 73458, -4770, -4770, -4770, -4770, -4770,  2859,
   -4770, -4770,  2189,  4613, -4770,  2862, 58277, 58277,   219,  3200,
    1480,   109, -4770, -4770, 79051, 73458, -4770, -4770, -4770, -4770,
    3616, 17249, -4770, 58277,  2958,  3120,  3424,   118, -4770,  2875,
    2878, -4770,  3055, -4770, -4770,  2893, -4770,  2896, 73458,  1078,
    1009, -4770, -4770, -4770, -4770, -4770, 73458,  2904,   961, -4770,
    2627,  1009, 33492, -4770, 10665,  3450,  2189, 17249, -4770, -4770,
    2917,  2346, 73458, 73458, 73458, 73458, 73458, 58277, 73458, -4770,
   -4770,  1519, -4770, -4770, -4770, -4770, -4770,   543, 73458, -4770,
   73458,   543, 58277, -4770,  1099, 73458,   543, -4770,  3480,  3174,
   -4770, -4770, -4770,  3555, -4770, -4770,  3544,  2916, -4770,  3450,
   -4770,  1099, -4770, -4770, -4770, -4770, -4770, -4770,  3551, -4770,
    3554, -4770, -4770, -4770,  1099, -4770, -4770, -4770,  1099,  1099,
    1099,   543,   543, -4770,   124,  3661, -4770,  2929, -4770, -4770,
   -4770, -4770,  2933, -4770,  3554, -4770, -4770,  2840, 19718,  1318,
    2702, 73458, 73458,  3736, -4770, -4770,  2935, -4770,  3382,  3205,
   -4770,  3125, -4770, -4770,  1516, -4770, 73458, 17249,  1697, -4770,
     203, -4770, 58277,  3637, -4770, -4770, -4770,   269, -4770,  3620,
   -4770, -4770,  2972,  3067,  3745,  3010, -4770,  3345,  3345,  1798,
   63870,  3425,  3151,  3077,  3425,   291,  3425, -4770, -4770,    44,
      62, -4770,  3081,   834,  3081,  1513, 58277,  3173,   -34,   -34,
     -34,   258, -4770, -4770,  2216,  3240,  3240, 63870,  2989, -4770,
   -4770, -4770,  3317, -4770, -4770,   344, 17249, -4770, -4770,  1469,
   -4770, -4770, -4770, -4770, -4770,   293, -4770, -4770,  1469, -4770,
    3180,  3180, -4770, -4770, -4770, -4770, 68664,  1891,  2959,  3408,
   -4770, 63870,  3726, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770,  1208, -4770, -4770, 73458, 73458,
     319, -4770,    99,  3814, -4770,  3004,  3714,  1009,  1009,  3714,
    1009,  1009, -4770,  3244, -4770,  1009,  1009,   122, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,  3672,  3203,
    1009,  2365,  3435,  1009,  1009,  3765,  1009,  3441,  3442,  1009,
    1009,  1009,  1009,  3270,  3708, -4770,  1009,  3584,   796,  3940,
    3589,  1009,  3458, -4770,   878,  3727,  1009,  1009,  1009,  1009,
    1009,  3765,  3462,  3821,  1009,  1009,  3478,   577,  3479,  3481,
    1009,  3296,  1009,  1009,  1009,  1695,  1009,  1009,  3483,  1009,
    3267,  3271,  1009, -4770, -4770,  1009,  1009,  1009, -4770,  8074,
   -4770, -4770, -4770,  2519, -4770, -4770,   172, -4770, -4770,  3068,
    3069, -4770, -4770, -4770, -4770,  3388, -4770,  3181, -4770,  3402,
    3277, -4770,  3042,   137, 69463, 73458, -4770, -4770,  3090,  3096,
     341, -4770,  2765,  3076,  3092, -4770,  3969, 89950, -4770, -4770,
   73458, -4770, -4770, -4770, -4770,  3309, -4770, -4770, -4770, -4770,
    3149, -4770,  3862,  3473, -4770, -4770,  3750, -4770,  3546,  3920,
    3208,  3819,  3560,  2346,  3714,  3319,  3931, -4770,  1776, -4770,
     138,  2896,  3350, -4770,  3133,  1853, 73458,  3759,  2346, 73458,
   73458, 73458, -4770, -4770, -4770, -4770, -4770, -4770, -4770, 73458,
   -4770, -4770, -4770, -4770, -4770, -4770,  3042,   274,   449, -4770,
    3577,  3141, 17249,  3143,  3150,  3154, 17249,   431,  2140,  1289,
    1383,  1783,  1304,   266, 17249,  3155, 13957, -4770,  3162, -4770,
   -4770,   372,   383,  1416,  1578,  3169, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770,  3766, -4770,   412,  3170,
   -4770, -4770, -4770, -4770,  3145, -4770, 17249,  1580,   457,   459,
     318,  3159,   465,  1824,  1832,  3177, 73458, 73458,  3577,  3178,
    1582,  1649,  3577,  3182,   475,  1673,  1840,  1864,  1925,   504,
    1955,  3606,  1687,   515,   540,  1718,   600,   606, -4770,  1759,
    3184,  3186,   929,   276,  3577,  3188,   325,  3183,  3189,  1789,
   14780, 15603, 16426,   264,  1024, -4770,  3190, -4770,  2788,  3192,
    3201,   327,   228,  1803,  3196,  3202,  2077,  3307,  3307,  1809,
    1047,  1814,  1047,  1111, 63870,  3206, -4770, -4770, -4770, -4770,
    3307,  3307,  3307,   173,  3577,  3212,   160, -4770, 17249,  3198,
    3211,  3213, 63870, 17249,   220, -4770, -4770, -4770,  2734,   311,
   -4770, -4770, -4770, -4770, -4770,  1272, -4770,  3209, -4770,  1164,
    2322,  3221, 11488, -4770,  1631,  3221,  3962,  1911,  1911, 23010,
   -4770,  3223,  3062,  2372, 18072,   451, 18072,   451,  3221,  3221,
    3221, -4770, 23010,  3224, 23010, 23010, -4770,  3518, -4770, -4770,
   52684,  3220,  3225, -4770, -4770,  -217, -4770, -4770,  3229, 73458,
    1456, -4770, -4770,  2079, -4770, -4770, -4770,   152, -4770, -4770,
     621, -4770,  3233,   188,  2896,  3832, -4770, 73458,  3222, -4770,
    3767,  3770,  3775,  3776, -4770, -4770,  3644, -4770, -4770,  3778,
   -4770,  3781, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
    3259, -4770, 73458, 28692, 63870, -4770,  3260, -4770,  3924, -4770,
    3709, -4770, -4770,  2111,  3503, -4770, -4770, -4770, -4770, 46286,
    -132, -4770, -4770, 73458, -4770,   265,   286,  4676,  3457, -4770,
    2840, 73458,   -34,   -34, 73458, -4770,  3856, -4770, -4770,   532,
    3274, -4770,  3275, 63870, -4770, -4770,  2877,   283, 58277, 58277,
    3276, -4770,  3519,   316,  3711, -4770,  3526,  4100,  4100,  1017,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770,  3291,  3957,  3908,  3742,  3932,  3233, 46286,
   -4770, 73458, -4770, 26284,  3457, -4770,  3935,  3553,  3559,   583,
   -4770, 60674, -4770,  2765,  1194,  3345, -4770,  3345,  1910, -4770,
   -4770,  3879, -4770,  3705, -4770, 80649, -4770, 63870, 80649,  3944,
    3320,  3321,  3333,  3335,  3336, 76654, 17249, -4770, -4770, -4770,
   10665,  3339, -4770, 76654, -4770, -4770, 23010,  2085, -4770, -4770,
    2354, -4770,  2765, -4770,   -34,  3946, -4770,  2765,  3328, 73458,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770,  3547,   543, -4770, -4770, -4770, -4770,
   -4770,  3740,  3180,  3454,  3946,   543, 58277,  4103, -4770,   543,
   73458, 73458,   543, -4770, -4770, -4770, -4770,  3656,  1324,  3564,
    1475, -4770,  2085,  2765,  3353,  3358, -4770, -4770, -4770,  2133,
   -4770,  1164,   510,  3780, -4770,  3999, -4770, -4770, -4770, -4770,
   -4770,  -152,  1837, -4770,   180,   183,  3794,  1653,  3373,  1009,
   -4770, -4770, -4770, -4770,  3798,  1586, -4770,  3120,  3081,  3081,
    3413,  3415, -4770, -4770,  3977, 79850,  3803,  4063, 63870,  3977,
    3120,  4108, -4770,  3120, -4770, -4770,  3120, -4770, -4770,  3645,
    3646, -4770, -4770,  3647, -4770, -4770,   501,  1942, -4770,  2585,
     245, -4770, -4770, -4770, -4770, -4770, 73458,  3557, -4770,  1797,
   -4770, -4770, -4770, -4770,  2749, -4770, 34292,  3880,   623,  3403,
   -4770, -4770, -4770, 55880, 55880, -4770, -4770, -4770, -4770, 73458,
      91, -4770,  3404, -4770, 27089, -4770,  3057,  3848,   155, -4770,
   -4770, -4770, -4770, -4770,  2630,  3917, -4770, -4770,  4170,  3755,
    3970,  3971,  3642,  3917,  1065,   -34,  2614, -4770,  3157,   -34,
    2614,  3157,  3157, 73458,   -34,  3057, -4770,  2631,  1009, -4770,
   73458,   341,  1843,   341, -4770,   227, 73458, 43090, 70262, 73458,
   73458, 73458, 73458,  1843,  1723,  1723, 73458,  3615, 71061,  1843,
     -34,   -34,   -34,   -34,  2749,  1009,  3615, -4770, 71061, -4770,
   73458, 73458,  3975, 73458,  3979, 73458, 73458, -4770, 63870, 73458,
   71061, -4770,  1009,  2081,  1723, 71860,  1723,  1723, 73458,  1843,
   73458,  1491,   -34,  1843, -4770, 73458, -4770, -4770, 73458, 73458,
    1843,  1843,  1827, -4770,  1491,  1491,  3390, -4770, -4770, 73458,
    3615, 71061,  3427, -4770, -4770, 61473,   -34,   -34,  3057, -4770,
    1009,  1009,  3844, -4770, -4770,  4473,  8853,  2130,  1009,  3541,
    3876,   392, 73458, -4770,  3588,  3592, -4770, -4770, -4770, -4770,
   -4770,   341, 71061, 72659,  4017, -4770, 17249,  4110,  4111,  4112,
    4114,  4116,  4117,  4118,    96, -4770,  4119, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,  4121,
    4124, -4770, -4770,  4126, -4770, -4770,  4127, -4770,  4130,  4131,
    4132,  4136, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,  4150,
     171,  4154,  4155,  4156,  4157,  4158,  4160,  4171,  4173,  4174,
    4176,  4177,  4179,  4181,  4182,  4183,  4185,  4188,  4189,  4192,
    4195,  4199,  4202,  4203,  4204,  4206, -4770,  4209,  4210, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770,   164, 73458,  3642,  3664,
    3627, 73458,  2877, -4770,  4090,  2736,  3714,  3977, -4770,  4358,
   -4770, -4770,  3596, -4770, -4770, -4770,  3729, 58277,  3915,  1009,
    1101,   387,   387,  4006, -4770,  4267, 73458, 73458,  3570,   688,
   -4770,  1236, -4770, 20541, -4770,  3574,  3307,  2765,  3307,  3307,
    3307,  1536, 17249, 17249,  4235,  4639,   192, -4770, 62272, -4770,
   -4770, -4770, 62272,  4639,  2184,  3307,  3579, -4770,  4152,  4161,
   -4770, -4770, -4770, 17249, 17249, -4770, 17249,   331, -4770, 17249,
   17249, 17249, 17249, 17249, -4770, -4770, 23010, -4770,  3575,  3581,
    3307, -4770, -4770,  3582,  3307, 17249, -4770, -4770, -4770, -4770,
   17249, -4770, 17249, -4770, 17249, 17249, -4770, 17249, 17249, -4770,
    3307,  3307, 21364, 17249, 17249,  3583,  3307, -4770, 17249, 17249,
   17249, -4770, 17249,  1835, 17249,  2471, 17249,  2721, 17249, -4770,
   17249, -4770,  3307,  3307, -4770, 17249,   533, -4770,  3615, -4770,
    3577,  3307, -4770, 43889, -4770, -4770,   162, 29492,  3586,   162,
    3590, 23010, -4770,  3307, -4770, -4770, -4770,  1603,  3594,  3307,
    2206, -4770, -4770, -4770,  3587,  2765, -4770, -4770, -4770, -4770,
   -4770, -4770, 23010,   370, 23010,  3962, 23010,  5342,  5342,  2498,
   11488, -4770,  1702,  3962, -4770, -4770, 17249, 17249, 47085, 73458,
     479, -4770,  2877,  1312, -4770,   229, -4770, -4770, 58277, -4770,
   -4770, -4770, -4770, -4770,   188, 63870,  3610, -4770, -4770, -4770,
   -4770, -4770, -4770,  3554, -4770,  4107,  3275, -4770,  3836,  3839,
    3863, -4770, 36692, -4770, -4770, -4770, -4770, 36692,   827,   219,
   -4770, 73458, 58277,  3618,  3623,  3624,  3857,  3749, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,  3457,
    3626,  3180, -4770,  3711, -4770, -4770,  3628, -4770,  2011,  3240,
     992, 73458, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, 17249,   -34, -4770,  3868, -4770, 73458, 73458, -4770,
   -4770, -4770, -4770,  1145, -4770,  3639,  3748, -4770,  2877, -4770,
   -4770,  3554,  3554, -4770,  4613, 28692,  4076,   219, 58277,  4262,
   -4770, -4770,  3649,  1164,  3650, 25479,  3731, -4770,  3640,  2353,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,  3711,  2961,
    4250,  3457, 80649, 80649, 80649, -4770, -4770, -4770,  3732,  3120,
    3081,  3081,   350,  4037, -4770, -4770, -4770, -4770,  2896, -4770,
   -4770,  3057, -4770, -4770, -4770, -4770, -4770,  1009,  2765, -4770,
   33492, -4770, -4770,  1723,  3180,   410, -4770, 58277, -4770,  4098,
   -4770, -4770,  3180, -4770,  3858,   -34, -4770,  1099,  1099, -4770,
    4274, -4770,  3342,  3864, -4770, -4770, 19718, -4770, 73458, -4770,
    3653, -4770,  4144, 73458,  4325,  3665, 23010,  3666, 23010,  3057,
    3928,  3668,  4476,  3615,  3240, -4770,  4087, -4770, -4770, -4770,
   -4770,  3991, -4770,  4488, -4770, -4770, -4770,  2896, -4770,  3425,
     584,  4162,  3081,  4094,  3081,  3081, -4770, -4770, -4770, -4770,
     360,  3615,  3615,  3615,  3615,  2585, -4770,   175,  1095,  2884,
    3057,   191,   245, -4770,  3680, -4770, -4770, 62272,  4431, -4770,
   -4770, -4770, -4770, -4770, -4770, 17249, -4770, -4770,  1206,   332,
    1114, 27089, 73458, 47884, -4770,   -49, -4770, -4770, -4770, -4770,
   -4770, -4770,  1009, -4770,  1009,   -34,  3974,  3976,  3981,  3990,
    3992,  4016, -4770, -4770, 73458,  4134, -4770,  3615,   -34,  1382,
     -34,   -34,   -34,   -34,  3615,   -34,   -34,  2207, -4770, -4770,
   -4770,   170, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, 63870, -4770, -4770, -4770, 73458,   104,
   73458,  3710,  4260,  4269,    84, 73458,   341,  3712,  3919,  3943,
   54282,  9993, -4770, -4770, -4770,  4169,  4169,  2363,   643, 71061,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, 73458, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770,  3149,  3717, -4770,  3057,
   -4770, -4770, -4770, -4770, 56679,   -34, -4770,  3978, -4770, -4770,
   73458,  3717, -4770, -4770,   545, -4770,  3907,  3984,   -34, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,  9993,
   71061,  3721, -4770,   527, -4770, -4770, -4770, -4770, 71061,  3966,
    3973, -4770, 73458, 71061, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, 73458, -4770,
   -4770, -4770, -4770, -4770, 60674, 62272, -4770,  3253,  3176,  8074,
   -4770, -4770, -4770,  3068, -4770, -4770, -4770,   621,  4180,  1009,
    2123,   323, -4770,  4101, -4770, -4770,  2709,  4184,  4186,  3734,
   -4770,  3743, -4770,  3744, -4770, 69463,  2765,  3741,  3741,  3758,
    3758,  3764,  3764,  3769,  3969, -4770,  3771,   -34,  3615,   -34,
   63071,  3615,  1161,  3057,   896,  3057, 89950, -4770,  3615,   -34,
     -34,   -34,   -34,  3615,  3615,  3615,  3615,  3615,   -34,   -34,
     -34,   -34,   -34,   -34,  3615,   -34,   135,   -34,   -34,  3615,
    2224,   -34,  3615,   -34,  1723, -4770,   210, -4770,  3773,  2687,
    2877, 63870,  3774, -4770,  4356,  1009,  1009,  1009,  1009, -4770,
     223, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770,   621,  4554, -4770,  3808, -4770, 80649,
   -4770,  3173,   628,  4012,  3777, -4770,  2189, -4770, -4770, -4770,
   -4770, -4770, 73458,  2915, -4770, 73458, -4770, 40692, -4770, -4770,
   -4770, -4770,  1858,  1679, -4770,   344,   962, -4770,   198,  4125,
   -4770, -4770,  1219,  3782, -4770, -4770,   342, 18072,  1875,  3307,
   -4770, -4770, -4770, -4770, -4770, 17249,  2765,  2692, -4770,  3783,
    3783,  3785, -4770,  3789,  4200,  3783, -4770, -4770, -4770, -4770,
   -4770, -4770,  4537, -4770, -4770, -4770, -4770,  4365,  3785,  4367,
   -4770,  3783, -4770,  3895,  4599,  3872,  3805,  3810,  3824,  3307,
   -4770,  3307, 17249, 17249,  1900,   379,  1914,  4579,  4146,  1162,
    1298,   414, -4770,  1928,  3706,  3307, -4770,  3307, -4770,  1954,
    1980,  1982,  1988,  1310,  1997,  2212, -4770, -4770, 18072,  2018,
     352,   425,  3307, -4770,  2024,  1337,  1343,  2030, 17249,  2035,
   17249,  2039, 17249,  2059,  2073, -4770, -4770,  2083,  3826,  3826,
    3823,  3828, -4770, 73458, -4770, -4770, -4770, -4770,  3961,  3963,
    3307,  3830,   162,  3307,   162,   181, -4770,  1213,  3307, -4770,
   -4770, 73458, -4770, -4770, -4770, 17249,  1427,   208, -4770, -4770,
   23010,   437, 23010, -4770,  3835, -4770, -4770, -4770, -4770,  4366,
    4643, -4770, -4770,  4113, -4770, -4770, -4770,  3222, -4770, -4770,
     490,  4498,  3837, -4770, -4770, -4770, -4770, -4770, 46286, -4770,
    -129,  3851, 48683, 58277,  4278,  3180, 19718, -4770,  3945, 73458,
     341,  4433,   238,  4024,  4389, -4770, -4770, -4770,  2765, -4770,
   58277, -4770, -4770, -4770, 73458, 73458,  1318, -4770, 38292, -4770,
   -4770, -4770, -4770,  3854, -4770, -4770, -4770,  4515, -4770,  4479,
   46286,  3233, 58277, 17249,  2961, 17249,  3859,  3861,  3865,  3877,
    3878,  3881, 27089, 27089,  4419,  4423, -4770,  4305,  1500,  4305,
   -4770, 41491, 27089, 27089,  3552,  2709,  4650,  4482,  4250,  2896,
    2896,  2896,  3345,  3345, -4770, -4770, -4770, -4770, -4770, -4770,
     247, -4770, 10665, -4770, -4770, -4770, -4770, -4770,  3233, -4770,
    3554, 58277, -4770,  3457,   543,  4205,  4546, -4770,  4547, -4770,
    3886,  4550,  4308, -4770, -4770,  3615, -4770, -4770, 73458,  3088,
   73458,  3262, -4770,  4664,  3896, 23010,  4553,  3899,  4490, -4770,
   -4770,  3934,  3425, -4770,   965,  1638,  3425, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,  1661,
    4617,  3850,  4478, -4770, -4770, -4770,  2189,  2189, -4770, -4770,
   -4770,  1602,  4446, -4770, 27089,  3711, 47884,  -120, -4770, -4770,
    3903, 73458,  1491,   -34, -4770, -4770, -4770,  4618, -4770,  4621,
     408,  4360,  4572, -4770, -4770, -4770,   256, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,  1065,
   -4770,  3918,  3057,  4337,  3921, 17249, 73458, -4770, -4770,  4009,
   -4770, -4770,  3922, -4770, 44688,   387,   387,  2215, -4770, -4770,
   -4770,  9993, -4770,  3783,  3783,  3783, -4770, -4770,   324,  3785,
   -4770, -4770,  3923, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770,  1471,  2801, -4770, -4770,  1471, -4770, -4770, -4770,   248,
    1756, -4770, -4770, -4770, -4770, -4770,  3925, -4770,  3783,  3785,
    3785, -4770, -4770,  1471,  3783, -4770,  3783,  4306,  3890, -4770,
     195,  3783,  3783,  3783,  3927,  3789, -4770, -4770, -4770, -4770,
   -4770,  4622,   373, -4770,  9993, -4770, 73458, -4770,  3616,  3616,
   -4770, -4770, -4770, -4770,  4187, -4770, -4770,  1896, -4770, 73458,
   -4770, -4770, 73458, 73458,    95,  1145,  3929, -4770, -4770, -4770,
    3947,   292, -4770,    69, -4770, -4770,  3832,   859,   499,  4168,
    2378, -4770, 73458, 73458, -4770, -4770, 72659, -4770, 39092, -4770,
   -4770, 39892, -4770, -4770,  -114, -4770, -4770,  2053, -4770, -4770,
    3615, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, 44688,
    1009,  1009, -4770,   259, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770,  4372, 44688,  1033, 73458,   -34,  3157,  3157,
    3057,  2737, -4770,  3977,  4525,  2896,   245, -4770, -4770,  3181,
   -4770,  3938, -4770, -4770, 73458,  2229, -4770, -4770,  6797,   344,
   -4770,  1219,  4383, 73458, -4770, -4770, -4770, -4770,  4246, -4770,
   -4770, -4770, -4770,  4387,  5342, -4770, -4770,  2765, 17249,  1576,
   -4770, -4770,  1471,  4393, -4770,  1611, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,  3948,
    4639,  4521, -4770, -4770, -4770, -4770, -4770,  5342,  5342, -4770,
   -4770, 17249, -4770, 17249,   510,  3949, 17249, 17249, -4770, 17249,
   -4770,  1585,  3950,  4142, -4770, -4770, -4770, -4770, -4770, -4770,
   17249, -4770, -4770,  5342, -4770, 17249, -4770, -4770, 17249, -4770,
   -4770, 17249, 17249, -4770,  2087, -4770,  2110, -4770,  2119, -4770,
   -4770, -4770,  3057,  3960,  3964,  3615,  3307, -4770,  3967,  4385,
   -4770, -4770, -4770, 17249, -4770,  3307, -4770,  3307,  4590,  4639,
    2145, -4770, -4770,  2234, -4770, -4770, -4770, 17249,  1427, -4770,
   -4770, -4770, -4770, -4770, -4770,  4359, -4770,  4123, 36692,  4208,
    4578, -4770, -4770, -4770, -4770,   578, -4770, -4770,  2270, 73458,
    4771,  4416, -4770,   341,  4433,  4526, -4770,  4551, -4770, -4770,
   -4770, -4770,  3980,  3717,  3986, -4770,  1009,  2829,  2292, -4770,
   -4770, -4770,  3972, 19718,  3987, -4770, 28692, 58277,  4601,  3233,
    1356,  2709,  2121, 27089, -4770, -4770, -4770, -4770, -4770,  2353,
    3983,  3989,  3994,  2353, -4770, -4770, -4770,  4542, -4770,  4305,
    4305,  4543,  4544, -4770,  3482,  3556,   536, -4770, 17249, 17249,
    4106,  4482,  3081,  3081,  3057, -4770, -4770,  3233, -4770, -4770,
   17249,   -34,   -34,  2259,   -34,  4654,  4689, -4770,  2327, -4770,
   -4770,  2340, -4770,  4549,  4337, -4770,  3489,  3057, 73458,  4779,
    4798,  3977, -4770, -4770, -4770,  4426, -4770,  3977, -4770,  3057,
   -4770,   285, -4770, -4770,  3901, -4770, -4770,  4783,  4786,  4684,
    4790,  1602, -4770,  1547, -4770,  -120,  3457,  1204, -4770,  4028,
   -4770,  1223, -4770, -4770, -4770, -4770, -4770, -4770,  4364, -4770,
    1445, -4770, 44688, -4770, 73458,  2343, -4770, 44688,  2162,  4025,
   -4770, 44688, 17249, -4770,  2352, -4770,   221, -4770, -4770, -4770,
   54282,  4306, -4770, -4770, -4770,  4807,   502, -4770,  4810, -4770,
    1471, 62272, -4770, -4770, -4770, -4770,   510, -4770,    43, -4770,
    1471, -4770, -4770,  4221, -4770, -4770, -4770,   510,  1471, -4770,
   -4770, -4770, -4770,  1949, 73458,  1896, -4770, -4770, 60674,  2613,
     -34,  3338,  4122, -4770,  4239, -4770,  4725,  1665,  4589,  2877,
    1009,  1009,  4592,  4789, -4770, -4770,  4075, -4770,  4653,  4595,
   -4770,   904, -4770,  4824, -4770,  1471,  4824,  1949,  4489, -4770,
    1949,  1949, -4770,  3043, -4770,  1896, -4770, -4770, -4770, 73458,
   73458, -4770, -4770, -4770, -4770, -4770,  4045, -4770, -4770,  4492,
    4180, -4770,  4493, -4770, -4770,  4451, -4770, 17249, 17249,  4495,
   73458,  4496, -4770,  4793,  4853,  3717,  1000, -4770, -4770,  2379,
   -4770, -4770, -4770,  2392, -4770, -4770,  4051, -4770,  2394, -4770,
   -4770, -4770, 73458, -4770,  2401,  2428, -4770, -4770,  2451,  3157,
    3157,  1703,  1033,  4060,  2480,   -34,   -34,   -34,   -34, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770,   374, -4770, -4770, -4770,
     191,  3541, 44688,  4061,  6889, -4770,  4368,  4392,  4062,  4059,
   -4770,  9993,   -34,   328, 73458,   483,  2765,  4066,  4068,  4070,
    4072, -4770,  4074,  2495, -4770,  3895, -4770,  2189,  4077,  4078,
    2168,  4069, -4770, -4770,  3307,  2232,  1373,  2500,  4557,  4629,
   -4770,  4468, -4770,  2264,  1093,  2272,  2304,  2310,  2342, -4770,
   -4770, -4770, -4770, -4770, -4770,  4086, -4770, -4770,  4862,  4527,
    2765, -4770, -4770,  2070,   162, -4770,  3580, -4770, -4770,  4093,
    2145, -4770,  4536, -4770,  2511,  4740,  4631, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, 58277,  4533,  4709,  4899,  3457,   215, 73458,  4416,
    4774, -4770, -4770, -4770,  4357, -4770, 73458, 19718, -4770, -4770,
    2829, 73458, 45487,  4105,  3854, -4770,  3233, 58277,  1603, -4770,
    3364,  1970, -4770, -4770,  4667,  4668, -4770, -4770, 17249,  4129,
   17249,  4133, -4770, -4770,   341,   341, -4770,   536, -4770, -4770,
    2765,  -142, -4770,  2765, 73458, -4770,  4106, -4770, -4770, -4770,
    2765, -4770, -4770, -4770, -4770,   -34,  4770,  4529, -4770, 73458,
   -4770,  2177,  2521, -4770, -4770,  4120,  4109,   -34,   965, -4770,
   -4770, -4770,  4811, -4770, -4770, -4770,  4815,   510,   510,  4888,
     510, -4770,  4889,  4892,  1547, -4770, -4770,  4558,  4558,  4564,
   -4770,  2534,  4329, -4770,  4337,  2541, -4770, 73458,  2544,  2357,
    1624, 44688,  4577, -4770, -4770, -4770, -4770, -4770, -4770, 62272,
   -4770, -4770,  4824,  2554, -4770, -4770, -4770,  2564, -4770, -4770,
   -4770, -4770, -4770,  1949, -4770,  4135, -4770,  1693,  4314, -4770,
   -4770, -4770, -4770, -4770,  3836,  3839,  3863,  2224,  2224, 17249,
   -4770, -4770, -4770, -4770, -4770, -4770,  4585,  4324, -4770, -4770,
   -4770, -4770, -4770, -4770,   -34,   -34, -4770, -4770, 60674, -4770,
    4942,  4939, -4770, -4770, -4770, -4770, -4770, -4770, -4770,  4141,
   -4770, -4770, 17249, -4770, -4770,  2061, -4770,  4337, -4770, -4770,
   -4770, -4770,  2765,  5342,  4884, -4770, -4770,  4456,   -34,  4825,
    2915,  4600, -4770, -4770, 73458, -4770, 73458, 73458, -4770,   -34,
    4148, -4770,  4149, -4770,  3615,  2261, -4770, -4770, -4770,  1065,
     669, -4770, -4770, -4770,  4745, 63870, -4770,  2123,  2569, -4770,
   -4770,   -34,   499, -4770, 73458,  3616, -4770, -4770, -4770, -4770,
    4159,  4153, -4770, 73458,  4781, -4770, -4770, -4770, -4770, -4770,
   -4770,  4605,  4163,  4958, -4770, -4770, -4770, 17249, -4770, -4770,
   17249, -4770, -4770,  4642,  4816, -4770, -4770, -4770, -4770, -4770,
   -4770,  4165,  3615, 17249,  4932,   774, -4770, -4770,  3307, -4770,
   -4770, -4770,  4611,   205, -4770, -4770, -4770,   578, -4770,  4609,
   58277, -4770,  3180,  4416,  2709, -4770,  4731, 73458, -4770, -4770,
   -4770, -4770, -4770,  4172, -4770, -4770,  3233,   307, -4770, -4770,
   -4770, -4770,  2765, 73458,  2765, 73458,  4804,  4804, -4770, -4770,
   17249, -4770,  4978,  4178, -4770, -4770, -4770,   -34,  4840, -4770,
   -4770,  4190,  4476, -4770, -4770,   335, -4770, -4770, -4770, -4770,
   -4770,   510, -4770,   510,   510, -4770,  4726,  4726,  4841,  2261,
    2211,  2321, -4770,   669,  2574, -4770,  1624,   527,   -34,  1009,
    1009,  1009, -4770,  1624, -4770, -4770, -4770, -4770, -4770,  4191,
   -4770, -4770,  1471,   510,  1471, -4770, 73458,  4686,  4220, -4770,
   -4770, -4770,  2370, -4770, -4770, -4770, -4770, -4770, -4770,  4207,
    2390, -4770, -4770,  2601, -4770, -4770, -4770, -4770, -4770,  4369,
   -4770,  4333, -4770, -4770, -4770, -4770, 73458, 73458, -4770,  4610,
     479,  2261, -4770, -4770,  2611,   479,   669, -4770, -4770,  4961,
    5001, -4770,  1624, -4770,  4495,  4552, -4770, -4770, -4770,  2143,
    9993,  4877,  4213, -4770,  4915, -4770,  2408, -4770, -4770, -4770,
    4215,  4214, 17249, -4770, -4770, -4770, -4770,  2492, -4770,  4866,
   -4770, -4770,  4899, -4770,  4395, -4770, -4770, -4770,  4421,  3711,
    4217,  4222,  4223,  4225,  1964,  4227,  4231, -4770,  4232, 73458,
   -4770,   -34,  3554, 23010,  4233,  4904,   148, -4770, -4770, -4770,
   -4770, -4770, 55880, -4770, -4770, -4770, -4770,  4234,  4480,  1009,
    4918,  4919,  1009,  1009,  1009,  1009,  4238,  2321, -4770,  4900,
   -4770,  4306, 73458, -4770, -4770, -4770,  3615,   -34,   -34, -4770,
     527, -4770, -4770, -4770,  2612, -4770,  1710,  4680, 73458, -4770,
   17249, -4770, -4770,  4522, -4770, 87840,  1906, -4770, -4770,  4241,
    4240,  2125, -4770, -4770, -4770, -4770, -4770,  2877,   479,  2378,
   -4770,  9993, -4770, -4770,  3616,  4581, -4770,  3785, -4770, -4770,
    3403,  3371,  4582, 17249,  4371,  4388, -4770, -4770,  4376,  4377,
   -4770,  4408, -4770, 73458,  2749, 75056,  3364, -4770, -4770,  5023,
   -4770,  5024, 72659, 72659, -4770, -4770, -4770, -4770,  3513, 73458,
    1009,  4545, -4770, -4770,  4258, -4770, -4770,    87,   -34,  1009,
    1009,  2877,  2877,  3057, 73458,  4524, -4770, -4770,  1009, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, 73458, -4770, -4770, -4770,
     506, -4770, -4770,  2419, 17249,  4925,  4448, 73458,  1647, -4770,
   89438, 89438, 73458, -4770, -4770, -4770, -4770,  6147, -4770, -4770,
     948, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770,  5050, -4770,  4259, -4770, -4770, -4770, -4770,  5022,
    4703,  5025, -4770, 73458, -4770, -4770, -4770,  4793,  3616,  4212,
   -4770,  1553,  4271, 17249,   -89, -4770,  5072,  1171,  1794, -4770,
    5342, -4770,   363, -4770, -4770, -4770, 78252,  3986,  4612,  4396,
    2617, -4770,  9667, -4770, -4770, -4770,  4275,  2639,  4555,  2649,
    3240, -4770, -4770,  2650, -4770, 22187, -4770, -4770, -4770, -4770,
     -34,   -34, -4770, -4770, -4770, -4770, 63870,  2671, -4770, 63870,
   -4770,  1292,  1292,   681,  2765, 17249, -4770, 17249,  4462, -4770,
   -4770,  4902, 73458, -4770, -4770, -4770, -4770, 17249, -4770, 87840,
   87840, -4770, -4770, -4770, -4770,  5065,  4716, -4770,  4718,  4284,
    4963, -4770, -4770, -4770, -4770,  4970, 87840, -4770, -4770, 63870,
   -4770, -4770,  5342, -4770,  3371, -4770, -4770,  4422,  4624, -4770,
    4429, -4770,  3055, -4770, -4770,  2896,  4882,  4431,  1603, -4770,
   75056,  4413,  3616, -4770, -4770,  3057, -4770,  4555,  4655, -4770,
    4258, -4770,  2677, -4770,  3962, -4770, -4770,  2321, -4770,  4524,
   -4770, -4770,  5112, -4770,  1564,  4744,  4746, -4770, -4770,  4075,
    2765,  2765, -4770,   470, -4770, -4770,  4876,  4972, 17249,  2765,
   83845,  4303, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, 88639, 17249, -4770,   948,  5050,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, 87840,  1848,
   -4770, -4770, -4770, -4770, -4770,  5079,  4446,   307, -4770, -4770,
    4957, -4770, -4770, -4770, -4770, -4770, 22187, -4770, -4770, -4770,
   -4770, -4770,  4523,  4999, -4770,  4497, 17249, 87840, -4770,  4979,
   -4770,  4905,  2765,  4842,  4315, -4770,  4312,  2765,  5015, 89438,
   89438, -4770,  4212, -4770, -4770,   510,  4909, -4770, -4770,  4439,
   -4770,  1292,  1292, -4770,   472, -4770,  2765, 84644,  5088, 73458,
   -4770,  4569, -4770, -4770, 17249,  5002, 64669, 85443,  4323, -4770,
   -4770, -4770, 87840, -4770,  4776,  4328,  1603, -4770, -4770, 17249,
   -4770,  4995,  4576, -4770,  4330, -4770, 87840,  2765, 87840, -4770,
   -4770,  4937,  8252,  2179, -4770,  4334, -4770, -4770,  1371, 35892,
    4657,  1560,  2765,  5104, 87840, 73458, 81448,  5005, 86242,  4966,
   73458,  3616,  4967,  4968, -4770, -4770, -4770, -4770, -4770, 63870,
    2682, -4770, -4770, 73458, -4770, -4770, -4770,  2145,  4591, -4770,
   82247, -4770,  2845,  4710,  4535, -4770, -4770,  5043,  3512, -4770,
   -4770, -4770, 37492,  4348, -4770,  1009, -4770,  4795, 87840, 87840,
   -4770, -4770, -4770, -4770, 51885, 17249, -4770, -4770, -4770, -4770,
    2587, -4770, 73458, 19718,  4475, 83046, 87041, -4770, -4770, -4770,
   27893, -4770, -4770, -4770,  4980, -4770,  2765, -4770, -4770, -4770,
   51885, -4770, -4770, -4770
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    2050,  3187,  1337,  3139,     0,     0,     0,     0,     0,     0,
    3141,  3187,   153,  2173,  2174,     0,  1993,     8,     0,  1337,
     471,     0,     0,   165,     0,  2007,     0,  2239,     0,     0,
    1337,     0,  2232,     0,     0,  1337,  2055,  2214,   448,     0,
    3141,     0,  1403,     0,  2150,  2970,     0,     0,     0,     0,
    2068,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2971,     0,     0,     0,     2,     9,    14,    43,
       0,    80,    63,    70,    32,    42,    40,    39,    37,    41,
      38,    31,   142,    87,    66,    26,    16,    21,    18,    28,
      17,    20,    24,    25,    23,    27,    22,     0,    67,  1260,
     145,   144,   143,    34,    84,    29,    30,    33,    77,    83,
      78,    79,    92,  1368,  1365,  1914,  1367,  1381,  1389,  1390,
    1391,  2051,    46,    59,    50,    47,    49,    53,    52,    61,
      62,    48,    60,    57,    58,    51,    55,    56,    54,    72,
      85,   149,     0,    44,   146,   111,   137,   138,   117,   136,
     123,   124,   112,   113,   114,   100,    96,   133,    97,   131,
     121,   115,   102,   101,   140,   116,   130,   129,   135,   128,
     139,    98,    99,   125,   120,   103,   107,   110,   122,   132,
     134,   106,   105,   108,   127,   119,   126,   118,   104,   109,
      45,    64,  2175,    65,    86,    81,    74,   150,    75,    93,
      95,    94,    76,   148,   141,    88,    19,    69,    89,    68,
      15,    36,    90,    91,    82,   151,    73,   147,    71,    35,
       0,  1157,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1991,     0,  1093,  3185,  3186,  3187,  1339,  1338,     0,
    3141,  2343,  1324,     0,  2428,  2427,  2430,  2432,  2433,  2434,
    2435,  2436,  2437,  2379,  2439,  2442,  2443,  2444,  2445,  2446,
    2380,  2447,  2448,  2449,  2450,  2451,  2452,  2381,  2382,  2454,
    2455,  2456,  2458,  2460,  2383,  2384,  2461,  2462,  2463,  2465,
    2466,  2467,  2468,  2469,  2470,  2471,  2386,  2472,  2387,  2473,
    2474,  2476,  2477,  2509,  2478,  2479,  2480,  2481,  2482,  2483,
    2389,  2484,  2485,  2486,  2487,  2488,  2489,  2490,  2491,  2492,
    2390,  2493,  2494,  2496,  2498,  2499,  2500,  2501,  2502,  2391,
    2503,  2504,  2505,  2507,  2392,  2510,  2512,  2513,  2515,  2517,
    2516,  2518,  2519,  2418,  2520,  2521,  2376,  2523,  2524,  2525,
    2526,  2527,  2530,  2531,  2419,  2532,  2533,  2535,  2536,  2393,
    2394,  2538,  2539,  2540,  2541,  2548,  2542,  2543,  2544,  2866,
    2547,  2395,  2550,  2396,  2554,  2553,  2555,  2339,  2556,  2340,
    2557,  2397,  2560,  2561,  2564,  2565,  2398,  2567,  2568,  2569,
    2570,  2571,  2572,  2574,  2399,  2576,  2577,  2578,  2579,  2580,
    2581,  2867,  2583,  2584,  2585,  2586,  2588,  2589,  2591,  2593,
    2594,  2595,  2596,  2598,  2599,  2609,  2600,  2601,  2602,  2604,
    2603,  2605,  2606,  2607,  2610,  2590,  2612,  2613,  2614,  2615,
    2616,  2617,  2618,  2620,  2621,  2622,  2623,  2624,  2625,  2626,
    2627,  2628,  2629,  2630,  2631,  2632,  2633,  2634,  2635,  2636,
    2637,  2638,  2639,  2641,  2642,  2643,  2644,  2420,  2400,  2646,
    2648,  2649,  2651,  2654,  2655,  2656,  2658,  2662,  2663,  2664,
    2665,  2666,  2668,  2667,  2669,  2672,  2674,  2675,  2673,  2676,
    2677,  2678,  2401,  2402,  2680,  2681,  2682,  2421,  2684,  2686,
    2685,  2422,  2687,  2688,  2689,  2691,  2692,  2693,  2694,  2695,
    2698,  2699,  2700,  2701,  2702,  2423,  2703,  2705,  2403,  2706,
    2424,  2708,  2710,  2709,  2711,  2713,  2714,  2712,  2404,  2718,
    2720,  2721,  2723,  2725,  2727,  2405,  2729,  2730,  2731,  2733,
    2732,  2734,  2406,  2735,  2736,  2742,  2743,  2744,  2745,  2870,
    2746,  2747,  2378,  2407,  2748,  2408,  2750,  2751,  2752,  2753,
    2754,  2778,  2783,  2784,  2785,  2786,  2787,  2788,  2790,  2791,
    2409,  2792,  2793,  2794,  2795,  2410,  2796,  2798,  2800,  2801,
    2802,  2803,  2804,  2426,  2805,  2806,  2807,  2808,  2809,  2810,
    2811,  2813,  2814,  2815,  2816,  2822,  2820,  2821,  2823,  2825,
    2826,  2411,  2827,  2828,  2830,  2831,  2832,  2833,  2412,  2413,
    2834,  2836,  2837,  2838,  2840,  2841,  2842,  2843,  2845,  2847,
    2848,  2849,  2850,  2851,  2852,  2853,  2854,  2414,  2855,  2856,
    2857,  2868,  2728,  2431,  2566,  2846,  2475,  2749,  2582,  2645,
    2869,  2551,  2453,  2385,  2522,  2537,  2647,  2661,  2679,  2719,
    2819,  2829,  2640,  2659,  2671,  2552,  2726,  2789,  2817,  2425,
    2844,  2597,  2545,  2377,  2495,  2497,  2660,  2696,  2429,  2558,
    2438,  2619,  2657,  2740,  2737,  2739,  2741,  2722,  2653,  2511,
    2652,  2592,  2690,  2587,  2611,  2683,  2608,  2716,  2670,  2529,
    2717,  2797,  2650,  2724,  2573,  2824,  2440,  2514,  2738,  2758,
    2858,  2715,  2707,  2704,  2546,  2755,  2756,  2757,  2759,  2760,
    2761,  2762,  2763,  2764,  2765,  2766,  2767,  2768,  2776,  2770,
    2769,  2771,  2772,  2774,  2773,  2775,  2777,  2779,  2780,  2781,
    2782,  2799,  2575,  2441,  2528,  2534,  2563,  2697,  2835,  2562,
    2457,  2549,  2459,  2464,  2388,  2559,  2812,  2818,  2839,  2508,
    2506,   402,  2350,   384,  2351,  2372,  2373,  2374,  2371,  2375,
     167,     0,     0,  2959,  2958,     0,     0,  3142,  3143,   740,
       0,     0,     0,     0,     0,     0,  1994,     0,  1027,   740,
     740,     0,  1029,   740,     0,  1026,     0,   319,  3170,  3170,
    3187,  3189,  3191,  2430,  2379,  2445,     0,  2307,     0,     0,
       0,  1764,     0,  2383,     0,  2466,  2468,     0,     0,  1431,
    1431,   905,     0,     0,     0,  2491,  2492,  2313,     0,     0,
       0,  2304,  2314,  2538,  2542,  2544,     0,  2306,  2555,     0,
       0,     0,     0,  2580,  2316,     0,     0,  2623,  2625,     0,
       0,  2629,  2630,  2631,  2632,  2288,  1490,     0,   905,  2300,
    2315,  2294,  2676,  2677,     0,  2687,     0,     0,  2727,     0,
       0,  2732,  2742,     0,     0,  2801,     0,     0,   905,  2287,
    2822,  2820,  2821,  2823,     0,  2305,  2411,  2317,     0,  2838,
    1431,   905,   905,     0,     0,     0,  2849,  2850,  2857,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2573,  2799,     0,     0,  1423,     0,     0,
       0,  1489,     0,  1573,  3161,  1968,  1422,  1426,  1443,  1448,
    1465,     0,  1482,  1501,  1502,  1504,  1611,  1503,  1509,  1632,
    1510,  1633,  1508,  2301,  1507,  2311,  2310,  1506,  2302,  2312,
    2303,  1424,  1500,  2330,  2350,  2329,  1516,  3159,  1991,  1991,
    1991,     0,     0,  1991,  1991,     0,     0,  1991,     0,  1991,
    1991,  1991,     0,  1991,     0,   158,  2182,   472,   473,     0,
    3014,  3027,  3028,  3024,  3029,  3047,  3030,  3034,     0,  3026,
    3119,  2363,     0,  3033,     0,  3119,  3031,     0,  3119,     0,
    3032,  3037,  3048,  3119,  3025,  2352,  2362,  2361,  3119,  2860,
    2859,  2353,  2861,     0,  3016,     0,  2335,     0,     0,  2009,
    2010,  2008,  1245,     0,     0,  2240,  2241,     0,  2244,     0,
    2245,  2248,     0,  2959,  2953,  2955,     0,     0,     0,     0,
       0,  1340,     0,  2012,  2056,  2013,  2011,  1991,     0,   438,
     447,   449,   450,   446,  3014,     0,     0,  3143,  3154,  3169,
    3164,  3163,  3166,  3167,  3168,  1408,  3165,  3162,     0,  1404,
    1406,  1407,   963,     0,     0,  2901,  2904,  2635,  2669,  2905,
    2825,  2902,  2728,  2903,  2425,     0,     0,  2356,  2928,  2863,
    2864,  2865,  2862,  2357,  2871,     0,  2895,     0,  2143,     0,
     963,  2162,     0,     0,  2162,     0,  1923,  2146,  2151,  2149,
       0,  2907,  2115,  2908,  2142,     0,  2091,  2114,     0,  2070,
    2107,     0,  2909,  1270,  2145,     0,  1923,  1271,  2098,  2162,
    2162,  2162,  2162,  2162,     0,  2162,     0,     0,     0,     0,
       0,     0,     0,   450,  1259,  1270,  1277,  1293,  1258,  1293,
    1402,  2335,  2069,     0,     0,     0,  2968,  2969,  2967,  2242,
       0,  1401,  2032,     0,  1891,  1894,  1896,  3235,     0,     0,
       0,  3230,     0,  3236,     0,     0,  2329,     0,     0,     0,
       0,     0,  3160,     0,     0,     0,     0,     0,     0,     0,
       1,    11,     0,     0,  1431,  2360,  2838,     0,  2359,  2358,
    2364,  2366,  3072,  3117,  3123,     0,     0,     0,  1257,  1261,
    1262,  1264,  1265,  1266,     0,     0,     0,  1366,  1410,  1370,
       0,  3156,  1923,  1915,     0,  3156,  1923,  1378,  1373,  1914,
    1380,  2062,  2055,  2175,  2538,  2178,  2050,  2179,     0,  1085,
    1158,     0,  1089,     0,     0,     0,     0,  2972,     0,  1087,
       0,  2144,  1165,     0,     0,  1116,     0,     0,  3196,  1091,
       0,  3140,     0,  1350,  1361,  1756,   401,     0,   171,   168,
     169,  1307,  1987,  1326,     0,  3146,     0,     0,     0,     0,
    3192,     0,     0,     0,   584,     0,  1028,  1031,     0,     0,
       0,  1030,  1033,     0,     0,   740,  3196,  3196,  3170,  3190,
       0,     0,  1884,  1523,  1884,  1884,  1884,  1765,     0,     0,
       0,     0,     0,     0,     0,  1884,     0,  1567,  1539,     0,
    1568,     0,     0,     0,  2318,     0,     0,     0,  1520,     0,
       0,  1756,     0,  1725,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1760,  1762,  2329,  1884,     0,     0,  1884,
       0,     0,     0,     0,     0,  1436,   959,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1884,  1884,
       0,     0,  1884,  1581,  2320,     0,     0,     0,  2319,     0,
       0,     0,  2309,  2308,  2289,     0,  1584,  1586,  1585,     0,
    1884,  1884,     0,     0,     0,  1884,  1884,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1884,  1513,  1512,  1514,     0,     0,  3161,     0,  2910,  1721,
    1723,     0,     0,  1486,  1485,     0,  1484,  1483,  2349,     0,
    1425,     0,     0,  1430,  1429,  1491,  1492,  1493,  1494,     0,
    1495,  1496,  1497,     0,     0,     0,     0,     0,     0,  1488,
    1487,     0,     0,     0,     0,  1467,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1515,     0,     0,  2344,  2290,
       0,     0,  1627,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1995,     0,     0,     0,     0,     0,     0,     0,
    1991,   160,     0,     0,  3015,  3007,  3045,  3044,  3049,     0,
    3046,  3042,  3050,  3051,  3035,     0,  3021,  3039,     0,  3023,
    3041,  3040,  3020,  3036,  3043,  3022,     0,  3018,  3010,     0,
       0,  1880,  2984,     0,     0,   166,     0,  1246,  2013,     0,
    3249,  3246,  2238,     0,  2249,  2250,  2246,     0,     0,     0,
       0,     0,  2142,     0,     0,  2233,  3155,  1342,     0,     0,
       0,  2014,     0,     0,  2216,  2225,  2221,  2223,  2227,  2215,
    2218,   439,     0,     0,   469,  3001,     0,     0,  3010,  3149,
    3146,  1394,  1405,   962,     0,     0,   965,  2927,  2033,  2034,
     974,     0,   964,     0,     0,     0,     0,     0,  2873,  2937,
    2934,  2933,  2886,  2881,  2880,  2368,  3068,  2879,     0,  2914,
       0,   969,   971,   970,  2924,   968,     0,     0,  2825,  2874,
    2895,     0,     0,  2872,     0,  2158,     0,     0,  2164,  2113,
       0,   740,     0,     0,     0,     0,     0,     0,     0,  2085,
    2141,     0,  2140,  2106,  1924,  2156,  2157,  2162,     0,  2155,
       0,  2162,     0,  2124,  2146,     0,  2162,  2082,     0,     0,
    2074,  2079,  2075,     0,  2081,  2080,  2083,  2071,  2072,  2158,
    2097,  2146,  2105,  2126,  2130,  2129,  2128,  2127,  2118,  2112,
     309,  2096,  2102,  2110,  2146,  1024,  1023,  1022,     0,     0,
    2146,  2162,  2162,   445,     0,     0,  1276,  1278,  1279,  1298,
    1297,  1273,  1294,  1295,   309,  2067,  3247,  3248,  2039,     0,
    1892,     0,     0,     0,  2293,  2292,  3232,  2291,  3240,  3242,
    3226,     0,  3229,  3228,  3237,     3,     0,     0,   677,     4,
       0,     6,     0,     0,     7,  1369,  1387,     0,  1386,    12,
     152,  2367,     0,     0,     0,     0,  1112,  1113,  1113,     0,
       0,     0,     0,     0,     0,     0,     0,  3107,  1111,  3070,
    3070,  3103,  3070,  3070,  3070,     0,     0,  1140,     0,     0,
       0,     0,  1415,  1414,  1417,  2503,     0,     0,  1967,  1961,
    1964,  1963,     0,  1409,  1372,  1371,     0,  3158,  3157,     0,
    1374,  1932,  1933,  1931,  1925,  1926,  1930,  1929,     0,  1376,
    1923,  1923,  1379,  2066,  2065,  2064,     0,  2062,  1245,     0,
    2177,     0,     0,  2167,  2168,  2169,  2170,  2171,  2166,  2165,
    2180,  2181,  3194,  3195,  3193,   976,  3188,   385,     0,     0,
    2976,  2982,     0,     0,   385,     0,     0,  2035,  2035,     0,
    2035,  2035,   655,     0,   654,  2035,  2035,   746,   606,   608,
     609,   644,   610,   611,   612,   613,   614,   615,     0,  1243,
    2035,  1243,     0,  2035,  2035,  1243,  2035,     0,     0,  2035,
    2035,  2035,  2035,     0,     0,   977,  2035,     0,     0,  1243,
       0,  2035,     0,  1227,     0,     0,  2035,  2035,  2035,  2035,
    2035,  1243,     0,     0,  2035,  2035,     0,  1253,     0,     0,
    2035,     0,  2035,  2035,  2035,     0,  2035,  2035,     0,  2035,
       0,     0,  2035,  1187,  1188,  2035,  2035,  2035,   783,  1198,
     742,   770,   771,     0,  1083,  1084,  1159,  1161,  1231,  1167,
    1166,  1195,  1200,  1229,  1230,     0,  1992,  3261,  1095,     0,
       0,  1094,  3196,  1321,     0,     0,  1019,  1018,     0,     0,
    1361,  1352,  1758,     0,  1757,   383,     0,     0,  1309,  1308,
       0,  1306,  1334,  1333,  1331,     0,  1332,  1330,  1325,  1327,
    1328,  3145,     0,     0,  3147,  3151,     0,   317,     0,     0,
       0,     0,     0,   740,     0,   586,     0,  1032,  3080,  3115,
     333,   315,     0,  1034,     0,  1060,     0,     0,   740,     0,
       0,     0,  3184,  3172,  3179,  3180,  3183,  3182,  3181,     0,
    3178,  3171,  3174,  3175,  3177,  3176,  3196,     0,     0,  1885,
    1884,     0,     0,     0,     0,     0,     0,  1766,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1432,     0,   906,
    1593,     0,     0,     0,     0,     0,  1856,  1857,  1858,  1859,
    1867,  1860,  1861,  1862,  1869,  1874,  1863,  1864,  1870,  1871,
    1872,  1865,  1873,  1868,  1866,  1875,     0,  1855,     0,     0,
    1879,  1876,  1878,  1877,     0,  1726,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1884,     0,
       0,     0,  1884,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1603,     0,
       0,     0,     0,     0,  1884,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1563,     0,  2332,  2331,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1668,     0,  1668,     0,     0,     0,  1671,  1672,  1670,  1673,
       0,     0,     0,     0,  1884,     0,     0,  1517,     0,     0,
       0,     0,     0,     0,     0,  1421,  1428,  1427,  1434,  1433,
    1435,  1439,  1444,  1437,  1441,     0,  1498,  2437,  1446,     0,
       0,  1479,     0,  1449,  1459,  1480,  1463,  1470,  1471,     0,
    1466,     0,  1468,  1469,     0,  1473,     0,  1472,  1476,  1477,
    1478,  1481,     0,     0,     0,     0,  1505,  1511,  1533,  1534,
    1426,     0,  1628,  1629,  2325,  2333,  1971,  1978,  1973,     0,
    1995,  1975,  1983,  1991,  1999,  2000,  1980,   746,  1997,  1979,
     616,  3066,  1976,  1247,  1986,  3274,  1984,     0,     0,   159,
       0,     0,     0,     0,  2199,  2201,     0,  2209,  2200,     0,
    2208,     0,  2202,  2210,  2203,  2207,  2206,  2205,  2204,  2183,
    2186,  2192,  2212,     0,     0,   470,   474,   476,     0,   479,
       0,  3038,  3121,     0,     0,  3019,  3012,  3013,  3011,     0,
    3052,  3017,  1881,     0,  2983,  2535,  2643,     0,  1886,  2336,
    3251,     0,     0,     0,     0,  2247,     0,  2957,  2954,  1880,
    2956,  2960,  1336,     0,   155,   156,     0,     0,     0,     0,
    1341,  1345,     0,  1311,  1794,  2220,  2230,  2228,  2228,     0,
     437,   462,   457,   465,   459,   461,   460,   466,   467,   468,
     463,   458,   464,   451,     0,     0,     0,     0,  2999,     0,
    3150,     0,  3152,     0,  1886,  1395,  1394,     0,     0,     0,
    2930,     0,  2926,  2925,     0,  1113,  2346,  1113,     0,  2939,
    2940,     0,  2931,     0,  2932,     0,  2885,     0,     0,  2888,
       0,     0,     0,     0,     0,     0,     0,  2929,  2894,  2893,
       0,  2896,  2897,     0,  2900,  2948,  2949,  2946,  2952,  2947,
    2950,  2951,  2945,  2921,     0,  2160,  2163,  1888,     0,     0,
    2138,  2132,  2131,  2122,  2133,  2139,  2123,  2092,  2093,  2094,
    2088,  2147,  2137,  2135,  2116,  2162,  2136,  2134,  2076,  2077,
    2078,     0,  1923,     0,  2160,  2162,     0,     0,  2125,  2162,
       0,     0,  2162,  2109,  2111,  1283,  1284,     0,     0,  1299,
       0,  1272,  2044,  2043,     0,  2040,  2042,  2031,  1893,     0,
    1898,     0,     0,     0,  3227,  3243,  3225,  3231,  3238,  3239,
    3224,  2333,     0,   678,     0,     0,   681,     0,     0,  2035,
    1388,    13,    10,  1148,     0,     0,  3114,     0,  3070,  3070,
       0,     0,  3075,  2365,     0,     0,     0,  3112,     0,     0,
       0,     0,  3100,     0,  3101,  3104,     0,  3105,  3106,     0,
       0,  3127,  3125,     0,  3126,  3124,  3057,  3072,  3118,     0,
    1120,  1269,  2341,  1268,  1267,  1263,     0,     0,  1420,  1417,
    1411,  1418,  2345,  1966,   966,  1962,     0,     0,  1919,  1916,
    1918,  1384,  1382,     0,     0,  1385,  1383,  1375,  1377,     0,
       0,  1989,  2060,  2063,     0,  2176,     0,     0,   976,   729,
     731,   738,   737,   739,     0,  1090,  2981,  2980,     0,     0,
       0,     0,     0,  1088,     0,     0,   604,  2036,     0,     0,
     604,     0,     0,     0,     0,     0,   747,  2144,  2035,  1244,
    1077,  1020,  1337,  1020,  1204,     0,  1077,     0,     0,     0,
       0,     0,     0,  1337,     0,     0,     0,     0,     0,  1337,
       0,     0,     0,     0,     0,  2035,     0,  1213,     0,  1169,
       0,     0,     0,     0,     0,     0,     0,  1214,     0,     0,
       0,  1170,  2035,     0,     0,     0,     0,     0,     0,  1337,
       0,     0,     0,  1337,  1256,     0,  1255,  1254,     0,     0,
    1337,  1337,     0,   780,     0,     0,     0,   776,   777,     0,
       0,     0,     0,  1191,  1192,     0,     0,     0,     0,   743,
    2035,  2035,     0,  1163,  1160,   976,   976,     0,  2035,  3269,
    1149,     0,     0,  1092,     0,     0,  1318,  1354,  1348,  1353,
    1351,  1361,     0,  1846,     0,   403,     0,     0,     0,     0,
       0,     0,     0,     0,   309,   173,     0,   203,   207,   215,
     219,   205,   301,   303,   211,   213,   217,   225,   237,   223,
     241,   227,   229,   231,   233,   221,   235,   209,   247,     0,
       0,   243,   245,     0,   249,   251,     0,   239,     0,     0,
       0,     0,   246,   204,   208,   250,   216,   220,   248,   206,
     302,   304,   212,   214,   244,   218,   222,   224,   226,   242,
     228,   230,   232,   234,   236,   240,   238,   210,   252,     0,
     309,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   201,     0,     0,   286,
    1988,  1335,  1329,  3144,  3148,   741,   976,     0,     0,     0,
       0,     0,     0,   585,     0,   588,     0,     0,  3079,  3080,
    3083,  3084,  3085,  3086,  3087,  3088,     0,     0,  3123,  2035,
       0,     0,     0,     0,  1061,   976,     0,     0,     0,   384,
    3219,     0,  3173,     0,  1589,     0,  1683,  1733,  1683,  1683,
    1683,     0,     0,     0,     0,     0,     0,  1590,     0,  1537,
    1591,  1592,     0,     0,     0,  1683,     0,   907,     0,     0,
    1540,  1541,  1530,     0,     0,  1612,     0,  1729,  1542,     0,
       0,     0,     0,     0,  1613,  1761,     0,  1763,  2333,     0,
    1683,  1597,  1548,     0,  1683,     0,  1549,  1614,  1615,  1616,
       0,  1618,     0,  1599,     0,     0,  1602,     0,     0,  1551,
    1683,  1683,     0,     0,     0,     0,  1683,  1553,     0,     0,
       0,  1552,     0,     0,     0,     0,     0,     0,     0,  1555,
       0,  1531,  1683,  1683,  1605,     0,     0,  1607,     0,  1564,
    1884,  1683,  1720,     0,  1660,  1659,  1677,     0,     0,  1677,
       0,     0,  1674,     0,  1661,  1658,  1657,     0,     0,  1683,
       0,  2911,  2912,  2913,  1079,  1722,  1521,  1440,  1445,  1438,
    1442,  1447,     0,     0,     0,  1458,     0,     0,     0,     0,
       0,  1450,  1461,  1464,  1631,  1619,     0,  1756,     0,     0,
    1232,  1982,     0,  2144,  1981,   617,   618,   620,     0,  1249,
    1248,  1977,  3275,  1974,  1247,     0,   161,   163,  2197,  2194,
    2193,  2195,  2211,   309,  2196,     0,  2213,  2184,  2491,  2822,
    2823,   483,     0,   455,   454,   456,   480,     0,     0,  3010,
    3120,     0,     0,  3061,  3064,     0,     0,     0,  3005,  1883,
    2994,  2990,  2995,  2997,  2993,  2996,  2998,  2991,  2992,  1886,
       0,  1923,  1887,  1794,  3245,  3250,  1356,  1357,  1361,     0,
       0,     0,   157,  1958,  1959,  1953,  1955,  1952,  1954,  2235,
    1956,  1957,     0,     0,  2234,     0,  1343,     0,     0,  1316,
    1315,  1317,  1310,  1312,  1313,     0,     0,  1795,     0,  2226,
    2229,   309,   309,  2217,     0,     0,     0,  3010,     0,     0,
    3153,  1397,     0,     0,     0,     0,     0,  1396,  1398,  1399,
    1771,  1770,  1801,  1798,  1797,  1800,  1799,  1802,  1794,  1880,
    1905,  1886,     0,     0,     0,   973,   975,   972,     0,     0,
    3070,  3070,     0,     0,  2944,  2936,  2938,  2935,  2887,  2369,
    3069,     0,  2917,  2918,  2919,  2915,  2916,     0,  2922,  2920,
       0,  2899,  2159,     0,  1923,     0,  2121,     0,  2090,     0,
    2108,  2073,  1923,  2089,  2119,     0,  2087,  2146,  2146,  2086,
    1281,  1280,     0,  1285,  1296,  2038,     0,  1897,     0,  1895,
    3233,  3241,     0,     0,     0,     0,     0,     0,     0,     0,
     683,     0,   679,     0,     0,  1107,     0,  3089,  1114,  1106,
    1105,     0,  3074,  3108,  3085,  1108,  1109,  1110,  3073,     0,
    3091,  3110,  3070,     0,  3070,  3070,  3060,  3059,  3058,  3055,
       0,     0,     0,     0,     0,  1141,  1143,     0,     0,     0,
       0,  1117,  1121,  1122,  1416,  1419,  1412,     0,  2255,  1960,
    1413,  1921,  1922,  2327,  1920,     0,  1928,  1927,     0,  1880,
    2335,     0,     0,     0,  2337,     0,  1943,  1944,  1942,  1945,
    2172,  1946,  2035,   730,  2035,     0,     0,     0,     0,     0,
       0,     0,   386,   395,     0,     0,  2973,  2975,     0,   632,
       0,     0,     0,     0,     0,     0,     0,     0,   340,   639,
    1098,   746,   645,   659,   660,   656,  1099,   643,   646,  1100,
    3276,   658,   657,   607,     0,   817,  1078,  1021,  1077,  1171,
    1077,     0,     0,     0,   820,  1077,  1020,     0,  1057,  1078,
     816,     0,  1238,  1237,  1239,   818,   818,     0,     0,     0,
    1950,  1951,  1949,  1947,  1948,   759,   753,     0,  1940,  1941,
    1937,  1938,  1936,  1939,   765,  1193,  1326,  1194,  1853,     0,
     755,   756,   757,   778,     0,     0,   767,     0,  1211,  1212,
       0,  1174,  1209,  1210,  1247,   748,     0,     0,     0,   796,
     797,   795,   772,   779,  1241,  1240,  1242,   751,   752,     0,
       0,  1228,  1912,  1919,   785,   760,   784,   754,     0,     0,
       0,  1222,  1182,     0,   794,   792,   789,   791,   790,   793,
     768,   761,   762,   764,   763,   775,   766,  1181,  2212,   749,
     750,   781,   782,   758,     0,     0,  1164,  1243,  1243,  1199,
    1196,  1197,  1162,  1168,  1201,   640,   641,   616,     0,  2035,
    3271,     0,  1151,  1153,  3197,  3198,  1896,     0,     0,     0,
    1849,     0,  1850,  1847,  1848,     0,  1759,     0,     0,     0,
       0,     0,     0,     0,     0,   172,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   170,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   318,   976,   735,     0,   621,
       0,     0,     0,   328,     0,  2035,  2035,  2035,  2035,   322,
     746,   590,   592,   593,   594,   595,   596,   599,   597,   600,
     598,   601,   602,   603,   616,  3081,  3077,     0,  3078,     0,
    3116,  1140,     0,     0,     0,   339,   338,  1066,  1068,  1067,
    1063,  1062,     0,     0,  2254,     0,  2253,   816,   312,   662,
     664,   667,   665,   746,   744,  2024,  2026,   669,     0,     0,
     349,  3214,     0,     0,   580,   579,     0,     0,     0,  1683,
    1634,  1684,  1636,  1637,  1642,     0,  1767,     0,  1527,   919,
     919,   903,  1741,   899,   891,   897,  1755,  1746,  1750,  1753,
    1752,  1754,     0,   875,  1749,  1751,   889,  1737,   903,  1739,
    1742,   919,  1747,  1535,     0,     0,     0,     0,     0,  1683,
    1644,  1683,     0,     0,     0,     0,     0,     0,  1727,     0,
       0,     0,  1532,     0,  1623,  1683,  1648,  1683,  1646,     0,
       0,     0,     0,     0,     0,     0,  1652,  1650,     0,     0,
       0,     0,  1683,  1654,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1651,  1653,     0,     0,     0,
       0,     0,  1638,  1691,  1685,  1686,  1687,  1688,     0,     0,
       0,  1675,  1677,     0,  1677,     0,  1662,  1587,  1683,  1640,
    1518,     0,  1724,  1456,  1451,     0,  1460,     0,  1475,  1474,
       0,     0,     0,  1630,     0,  2326,  2334,  1972,  1970,  1234,
    1233,  1985,  1998,  2144,  3067,  1969,   164,     0,  2198,  2191,
    2187,     0,   475,   484,   477,   481,   482,   478,     0,  3122,
    3130,     0,     0,     0,     0,  1923,     0,  2985,     0,     0,
    1361,  1363,  2251,     0,  2963,  2964,  2962,  2961,  2237,  2236,
       0,  1346,  1347,  1314,     0,     0,  2028,  2027,     0,  2004,
    2006,  2015,  2018,     0,  2231,  2222,  2224,     0,   452,     0,
       0,  3004,     0,     0,  1880,     0,     0,  1771,  1801,  1798,
    1797,  1800,     0,     0,     0,     0,  1784,  1792,  1790,  1792,
    1787,     0,     0,     0,  1880,  1896,     0,  1889,  1905,  2884,
    2883,  2882,  1113,  1113,  2876,  2875,  2942,  2941,  2943,  2890,
     746,  2889,     0,  2898,  2161,  2099,  2104,  2103,  2117,  2084,
     309,     0,   310,  1886,  2162,     0,     0,  1305,     0,  1301,
    1300,     0,  1287,  2041,  1899,     0,  3244,     5,     0,     0,
       0,     0,   682,     0,   692,     0,     0,     0,     0,  3252,
    3090,     0,     0,  3113,     0,     0,     0,  3098,  3071,  3102,
    3099,  3056,  1146,  1144,  1145,  1147,  1142,  1125,  1124,  1126,
       0,     0,     0,  1139,  1138,  1137,     0,     0,  1104,  1123,
     967,     0,  2263,  1917,     0,  1794,     0,  1886,  1990,  2061,
    2060,     0,     0,     0,   389,   392,   390,     0,   391,     0,
       0,  2978,     0,  2974,   642,  1097,   746,   634,   636,   637,
     638,   344,   343,   345,   346,   348,   347,   342,  1103,     0,
     652,     0,     0,     0,     0,     0,  1077,  1016,   819,     0,
     814,   821,     0,  1017,     0,     0,     0,     0,   802,   804,
     805,     0,   888,   842,   833,   919,   836,   835,   984,   903,
     847,   894,     0,   896,   893,   868,   867,   884,   866,   871,
     855,   984,   984,   854,   887,   984,   872,   870,   874,     0,
     875,   895,   880,   869,   873,   865,     0,   886,   919,   903,
     903,   851,   885,   984,     0,   878,   919,   807,   923,   853,
     991,     0,     0,   919,   921,   899,  1220,  1221,  1065,  1064,
    1219,     0,     0,  1177,     0,  1178,     0,  1180,   974,   974,
     773,  1185,  1208,  1207,     0,  1186,   774,  1250,  1176,     0,
    1913,  1175,     0,     0,     0,  1311,     0,   787,   786,  1102,
    3265,  3262,  3263,     0,  3273,  3272,  3274,     0,     0,     0,
     354,  3199,     0,     0,  1360,  1362,     0,  1349,     0,   175,
     176,     0,   177,   178,     0,   179,   180,     0,   181,   174,
     287,   307,   308,   254,   292,   280,   291,   281,   294,   293,
     295,   282,   283,   297,   298,   296,   284,   285,   202,   279,
     253,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   268,   271,   272,   269,   270,   265,   300,   266,   299,
     267,   273,   274,   275,   277,   278,   305,   306,   736,     0,
    2035,  2035,   321,   746,   623,   625,   626,   627,   628,   631,
     629,   630,   328,     0,     0,   327,     0,     0,     0,     0,
       0,  2144,   323,     0,     0,   334,  1120,  3259,  3260,  3261,
     325,     0,   668,   313,     0,     0,   663,   661,   976,  2025,
     666,     0,     0,   404,   800,   801,   799,   798,     0,  3220,
     583,   581,   582,     0,     0,  1565,  1635,  1768,     0,     0,
     920,  1734,   984,     0,  1744,     0,  1745,   901,   900,   892,
     890,  1748,   898,   876,  1738,  1743,  1740,  1736,  1536,     0,
       0,  2321,  1538,  1529,  1528,  1645,  1643,     0,     0,  1571,
    1595,     0,  1572,     0,     0,     0,     0,     0,  1544,     0,
    1547,     0,     0,  1625,  1649,  1647,  1598,  1617,  1574,  1600,
       0,  1550,  1519,     0,  1575,     0,  1580,  1578,     0,  1655,
    1554,     0,     0,  1561,     0,  1559,     0,  1560,     0,  1562,
    1604,  1606,     0,     0,     0,     0,  1683,  1692,     0,  1693,
    1679,  1678,  1665,     0,  1669,     0,  1666,     0,  1680,     0,
    1822,  1641,  1080,     0,  1455,  1457,  1453,     0,  1462,  1620,
    1236,  1235,   619,   162,  2189,     0,  2185,     0,     0,     0,
       0,  3009,  3063,  3062,  3065,  3128,  3053,  2986,     0,     0,
    2045,  2047,  1358,  1361,  1363,     0,  1359,     0,  2252,  2965,
    2966,  1344,     0,  1852,  2005,  2053,     0,     0,     0,  2022,
    2324,  2323,  2331,  2039,  2023,  2030,     0,     0,     0,  3000,
       0,  1896,     0,     0,  1809,  1803,  1805,  1806,  1808,     0,
       0,  1771,  1770,  1400,  1786,  1785,  1793,     0,  1791,  1792,
    1792,     0,     0,  1780,  1779,     0,  1843,  1810,     0,     0,
    1900,  1889,  3070,  3070,     0,  2923,  2100,  2120,  2101,  2095,
       0,     0,     0,     0,     0,     0,  1289,  3234,     0,   688,
     675,     0,   673,   677,     0,   670,     0,     0,   686,     0,
       0,     0,  2348,  2347,  3092,     0,  3093,     0,  1129,     0,
    1128,  1134,  1131,  1130,     0,  1119,  1118,     0,     0,     0,
       0,  2256,  2258,     0,  1965,  1886,  1886,  2336,  2058,     0,
    2338,  1886,   732,   788,   394,   393,   399,   400,     0,  2977,
    2144,   341,     0,  1173,     0,     0,   694,     0,     0,     0,
     822,     0,     0,  1075,     0,  1074,  1919,  1058,  1059,  1203,
     816,   807,   841,   834,   852,   978,   989,   987,   981,   877,
     984,     0,   985,   986,   838,   850,     0,   861,     0,   856,
     984,   864,   860,   876,   879,   881,   883,     0,   984,   849,
     848,   858,   845,   908,     0,  1250,   808,   933,     0,     0,
       0,     0,  1487,   927,     0,   996,     0,     0,   936,     0,
    2035,  2035,   938,     0,   947,   823,   924,   926,   825,     0,
     950,     0,   992,   991,   840,   984,   991,   908,     0,   922,
     908,   908,  1217,     0,  1218,  1250,  1854,  1226,  1225,     0,
       0,  1252,  1206,  1911,  1224,  1223,     0,  1179,   769,     0,
       0,  3267,     0,  3270,  1115,     0,   364,     0,     0,  1150,
       0,   357,   355,   366,     0,  1323,  1319,  1851,   182,     0,
     184,   186,   191,     0,   193,  2370,     0,   196,     0,   198,
    2342,   200,     0,   187,     0,     0,   288,   290,     0,     0,
       0,  2144,   326,     0,     0,     0,     0,     0,     0,   587,
     651,   647,   653,   650,   591,  3082,     0,  3097,  3095,  3096,
    1117,  3269,     0,     0,   976,   745,     0,     0,     0,   405,
     407,     0,     0,   414,     0,     0,  1769,     0,     0,     0,
       0,  1735,     0,     0,  1524,  1535,  2322,     0,     0,     0,
       0,  1730,  1732,  1728,  1683,     0,     0,     0,     0,     0,
    1522,     0,  1621,     0,     0,     0,     0,     0,     0,  1558,
    1556,  1557,   993,  1609,  1608,     0,  1639,  1689,     0,  1695,
    1676,  1664,  1663,     0,  1677,  1588,     0,  1830,  1831,     0,
    1823,  1824,     0,  1452,     0,     0,     0,   492,   487,   495,
     489,   491,   490,   496,   497,   498,   499,   493,   488,   494,
     486,   485,     0,     0,     0,  3137,  1886,  2045,     0,  2047,
       0,  2003,  1355,  1364,     0,  1796,     0,     0,  2016,  2019,
       0,     0,     0,     0,     0,   453,  3003,     0,     0,  1811,
    1880,  1400,  1772,  1788,     0,     0,  1781,  1789,     0,     0,
       0,     0,  1837,  1838,     0,     0,  1841,  1844,  1845,  1807,
    2328,  1909,  1908,  1890,     0,  1393,  1900,  2878,  2877,  2891,
    1282,  1304,  1303,  1302,  1286,     0,     0,  1291,   676,     0,
     674,     0,     0,   672,   680,     0,   687,     0,     0,  3109,
    3094,  3111,     0,  1135,  1136,  1133,     0,     0,     0,     0,
       0,  2257,     0,     0,  2264,  2266,  2059,  1914,  1914,     0,
     635,     0,   697,  1172,     0,     0,   815,     0,     0,     0,
    1046,     0,     0,  1071,   803,   806,   980,   979,   983,     0,
     982,   837,   991,     0,  1081,   857,   882,     0,   859,   912,
     913,   914,   846,   909,   911,   998,  1202,   941,   951,   953,
     955,   954,   942,   940,     0,     0,     0,     0,     0,     0,
     960,   930,  2298,   961,  2299,  2295,     0,     0,   956,   957,
     958,   944,   937,   945,     0,     0,   939,   946,     0,   925,
       0,     0,   935,   928,   929,   839,   843,   844,   830,     0,
     831,   832,     0,  1215,  1205,  1189,  1251,     0,  3266,  3264,
    3268,   365,   353,     0,     0,  1152,  1154,     0,     0,  1155,
       0,     0,  1322,   183,     0,   192,     0,     0,   197,     0,
       0,   188,     0,   276,     0,  1035,   649,   648,   624,     0,
    1041,   329,   330,   332,     0,     0,   320,  3271,     0,   314,
     311,     0,     0,  3215,     0,   974,  3213,   417,   415,   416,
       0,   410,   412,     0,     0,  1566,   917,   915,   918,   916,
     904,     0,     0,     0,  1569,  1570,  1596,     0,  1656,  1594,
       0,  1545,  1622,     0,     0,  1601,  1576,  1579,  1577,  1582,
    1583,     0,     0,     0,     0,  1697,  1681,  1682,     0,  1832,
    1546,  1825,     0,     0,  1454,  2190,  2188,  3128,  3131,     0,
       0,  3006,  1923,  2047,  1896,  2001,     0,     0,  2052,  2054,
    2017,  2020,  2021,  2333,  2037,  2029,  3002,     0,  1813,  1804,
    1783,  1782,  1775,     0,  1777,     0,  1833,  1833,  1842,  1910,
       0,  1906,     0,  1901,  1902,  1392,  1288,     0,     0,  1274,
     689,     0,   679,   693,   671,  3256,  3076,  1127,  1132,  2261,
    2262,     0,  2259,     0,     0,  2265,  1934,  1934,     0,  1035,
       0,   717,   695,  1041,     0,  1070,  1046,  1919,     0,  2035,
    2035,  2035,   809,  1047,  1048,  1050,  1051,  1054,  1073,     0,
     990,   988,   984,     0,   984,   910,     0,  1002,     0,   943,
    2297,  2296,     0,   932,   934,   948,   949,   941,   826,     0,
       0,  1184,  1190,     0,   351,   356,   367,   368,  1096,  3202,
    3200,     0,   185,   194,   195,   199,     0,     0,   289,     0,
    1232,  1036,  1037,  1039,     0,  1232,  1042,  1043,  1045,     0,
       0,   316,  1046,  3212,   362,     0,   406,   408,  3221,   414,
       0,     0,     0,  1525,     0,  1731,     0,  1624,  1626,   994,
       0,  1694,     0,  1718,  1717,  1719,  1690,     0,  1667,     0,
    1829,  1828,  3137,  3129,  3132,  2987,  2002,  2046,     0,  1794,
       0,     0,     0,     0,     0,     0,     0,  1907,     0,     0,
    1290,     0,   309,     0,     0,     0,     0,  3253,  3254,  2260,
    2268,  2267,     0,  2057,  2049,  2979,   810,     0,     0,  2035,
       0,     0,  2035,  2035,  2035,  2035,   712,   718,   720,     0,
     811,     0,     0,   812,  1076,  1053,     0,     0,     0,  1049,
    1919,   862,  1082,   863,     0,  1001,     0,  1006,     0,   931,
       0,  1216,  1183,   358,  1156,   519,     0,  3201,  1320,     0,
       0,     0,   336,  1038,   324,   337,  1044,     0,  1232,   354,
     363,     0,   387,   411,   974,     0,   902,   903,  1543,  1610,
    1696,     0,     0,     0,     0,  1712,  1699,  1700,     0,     0,
    3008,     0,  3138,     0,   966,     0,  1880,  1776,  1778,     0,
    1834,     0,  1846,     0,  1904,  1903,  1292,  1275,     0,     0,
    2035,     0,  3257,  1935,   706,   699,   702,     0,     0,  2035,
    2035,     0,     0,     0,     0,     0,   696,   719,  2035,   813,
    1069,  1052,  1055,  1056,  1072,   999,     0,  1003,  1004,  1005,
       0,   997,   952,     0,     0,   360,   545,  2465,   531,   517,
       0,     0,  2656,   521,   369,   372,   370,  2050,   371,   377,
       0,   378,   379,   380,   381,   382,   373,   543,   544,   376,
     374,   375,     0,  2354,     0,  2355,  2416,  2415,  2417,     0,
       0,     0,   189,     0,  1040,   331,   335,   366,   974,  3222,
     413,  3208,     0,     0,     0,  1707,     0,     0,     0,  1705,
       0,  1701,     0,  1698,  1703,  1702,     0,  2048,  2269,  2640,
       0,  1815,     0,  1812,  1836,  1835,     0,     0,   690,     0,
       0,  3258,   706,     0,   704,     0,   700,   698,   701,   728,
       0,     0,   724,   725,   723,   721,     0,     0,   714,     0,
    1000,     0,     0,   827,   359,     0,   352,     0,     0,   530,
     533,     0,     0,   536,   526,   525,   527,     0,   520,   519,
     519,   573,   524,   570,   569,   562,     0,  3203,     0,     0,
       0,  3216,   397,   396,   388,     0,   519,  3206,  3207,     0,
    3210,  1526,     0,  1708,     0,  1710,  1709,     0,     0,  1714,
       0,  1715,  2886,  3136,  3135,  3133,     0,  2255,     0,  1814,
       0,     0,   974,  1840,  1839,     0,   684,   690,  3256,   703,
       0,   710,     0,   708,   711,   726,   727,   717,   713,     0,
     722,  1012,     0,  1011,     0,  1008,  1007,   829,   828,   923,
     361,   546,   557,   560,   552,   532,     0,     0,     0,   522,
     519,     0,   506,   504,   505,   511,   512,   513,   514,   515,
     516,   507,   510,   508,   509,   519,     0,   422,     0,     0,
    3204,  3205,   190,   368,   387,   398,  3223,  3209,   519,     0,
    1706,  1704,  1713,  1716,  3134,     0,  2263,     0,  1816,  1817,
    1820,   691,   685,  3255,   705,   707,     0,   716,   715,  1014,
    1015,  1013,     0,     0,   824,     0,     0,   519,   553,     0,
     528,     0,   537,     0,     0,   420,   576,   574,   418,   564,
     564,   350,  3217,  3211,  1711,     0,  2271,  1819,  1821,     0,
     709,     0,     0,   554,   560,   550,   558,   519,     0,     0,
     518,     0,   572,   421,     0,     0,     0,   519,     0,   563,
     565,   567,   519,  2270,     0,  2275,     0,  1010,  1009,     0,
     551,     0,     0,   549,   529,   534,   519,   577,   519,   431,
     430,     0,     0,   500,   571,     0,   423,  3218,     0,     0,
    2282,  1822,   555,     0,   519,     0,   519,     0,   519,     0,
       0,   974,     0,     0,   419,  2273,  2274,  2272,  2277,     0,
       0,  2279,  2280,     0,  2243,  1826,  1818,  1824,     0,   547,
     519,   535,   540,     0,     0,   426,   501,   502,     0,   428,
    2281,  2276,     0,  2283,  2285,     0,  1827,     0,   519,   519,
     536,   539,   578,   575,     0,     0,   424,   425,   436,   435,
       0,  2278,     0,     0,     0,   519,   519,   541,   444,   442,
     519,   432,   440,   434,     0,   441,   503,   429,  2284,  2286,
       0,   427,   443,   433
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4770, -4770, -4770, -4770, -4770, -4770,   -73, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770,  1518, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770,  1778,  1785, -4770, -4198, -4770, -4770,  1781,
   -4770,   358,  1786, -4770,   356, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770,  1774, -4770,   357, -4770, -4770, -4770, -4770, -4770, -4770,
   -2968, -1633, -4770, -4770, -4770, -4770, -4770, -4770,  1130, -4770,
   -4770, -4770,   355,  1336,  3933, -4770,   346, -4770,    40, -4770,
   -4770, -4770, -4192,   -81,  -252, -4770, -4770,    32,  3409,  -250,
   -4769, -4770, -4770, -4770, -4770, -4770, -4770,   348, -4770, -4770,
     156, -4770, -4770, -1562, -4770, -4770, -4770, -4770, -4770, -4770,
    -434,  -391,  2311, -4770, -4770, -4770,  5164, -4770,  4099, -4770,
   -2886,  2171, -4770, -4770, -4770, -4770, -4770,  2239, -2798, -4770,
   -4770, -4770,   993, -4770, -4770, -4770,  -412,    74, -4770,    78,
   -4770,    79, -4770,    80, -4770,    81,    82,    83,    85, -4770,
      89, -4770, -4770,  -381, -4770, -4770, -4770, -4770,    90, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770,  -282, -4770, -4770,  -190,
   -4770, -4770,  -275,    97, -4770,  -260,    98, -4770,   101, -4770,
    -208, -4770,  -204, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770,  1176,  2718,  4030,  2712, -1531, -4770,  1600,
   -4770, -4770,   743, -4770, -4770,   897, -1610, -4770,  2501, -2672,
   -2625, -1126, -2589, -4770, -4770, -4770, -3281, -3240, -1399, -4770,
   -1398, -2587, -2572, -2560, -2413,   722,  1755,  1760,  1753,    14,
   -4770,   950,   314, -4770, -4770, -4770, -3664,  -133, -4770, -3933,
     544, -4770, -4770, -4770, -4770, -3061, -4770, -4770,  -207, -4770,
   -4770,  -139,  -136, -4770,   157, -4770,  2764, -4770, -4770, -2489,
    -531,  2651, -4770, -2029, -1817, -2407, -1671, -1661, -4770, -4770,
   -4770,  1186,  1782,   898, -4770,   899, -1719,   848, -3789, -4770,
   -4770,  -423, -2947, -4770, -4770, -4325, -4770, -2657,  1380, -4770,
   -4770, -2641, -4770, -4770, -4770,  1348,  1350, -3449,  2136, -1435,
   -4770,   534,   702,  -258, -4770,  -134, -4770,   850, -4770, -4770,
   -4770, -3974, -4770,   -33, -2722,   105, -4770, -4770, -3203, -3818,
   -1658, -4770, -4770, -3604, -3059,  1681, -4770, -4770,   174, -4770,
   -4770, -4770, -4770, -3582, -4770, -1710, -2286, -4770, -4770,  2746,
     330, -4770,   261,   320, -4770,   260, -4405, -4770,   317,  -795,
    2029, -4770,  3346, -3207, -2603, -4770, -4300, -1137,   566, -2387,
   -4770,   895, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -1629,
   -4770, -4770,   773,  1228, -4770,  2124,  1826, -4770,  2134, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,  2679, -4770,
     505, -2205,  2685, -4770,  2688,   438, -4509, -1130, -4770, -1163,
   -4770, -1652,  3548, -2506, -3816, -4770, -4770, -4770, -4770, -4770,
    3593, -4770, -4770, -4770,  3022, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770,  2914, -4770, -4770, -4770, -4770,  4196, -4770,  2918,
   -4770, -4770, -4770, -4770, -4770,  1349, -4770,  2284, -4770, -4770,
   -4770, -4770, -4770,  2023,  3391, -4770, -4770,    45, -4770, -4770,
   -4770, -4770,  2295, -4770, -4770,  3420,  1933, -4770, -4770,  1648,
    2323, -1842,  1092, -1198,  5265,    13,    63,     5,   645, -4770,
    3024, -4770, -4770, -2333, -4770, -4770, -4770, -4770,  4294, -1083,
   -1145, -4770, -4770,  2855, -4770,  4297,  3953,  3167,   402,  5174,
   -4770, -1341, -4770,   -50, -4770, -4770,  -898, -4770, -4770, -4770,
    -694,   783, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770,  2403, -4770, -4770, -4770,  3238,  2444, -4770,
   -4770, -2803, -4770, -2483, -1961, -4770, -2607,   254, -4770, -4770,
   -4770, -4770, -4770, -4770,   279, -4770,   -27, -4770, -4770, -4770,
   -2145, -4770, -4770, -4770, -4770, -4770,  -880, -2628, -1218, -1221,
   -4770,  4038, -4770, -4770, -4770, -3144, -4770, -2785, -4770, -4770,
   -4770, -4770, -3169, -2927, -4770, -1173,  2293,  2307,  2312,  2315,
   -4770, -4770,  -117, -4770,   -39, -4770,  -203, -4770,  -228, -4386,
   -4390,   434, -4770,   705, -4770, -4770, -4770,   184,  1389,   193,
   -2168, -2518, -1282,  1751, -4770, -4770, -2209,  4096, -2183, -2093,
    1094,     3,  4254,  3718, -3253, -4770,   712, -4770,   303,  1660,
     516, -4770, -4770,  1440, -1171,  -109,   349, -3252, -4770, -1081,
     -87, -4770, -2428,   445, -2472, -2505, -2310, -2218, -2232, -4770,
   -4770,  2930,    12, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770,  -603,    25,  -668,  5399,  3237, -4770,  2477,  4219,  4224,
   -4770, -4770,  3930,  1743,  1761, -4770, -3520, -2928, -4770, -4770,
   -4770, -1030,  4270,   785,  3762,  1179,  1757, -3055,   807, -4177,
    4236, -4770, -3674,   802,  4247,  4242, -3407,  3674, -4770, -4770,
   -4770, -4770, -4770,  3070, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770,  4442,   -43, -1454, -4770, -4770, -4770,  1460,  3822,  3071,
    -899, -4770, -4770, -4770, -4770,  4251, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770,  2491,  2099, -4770, -4770, -4770,
   -4770,  3191, -4770, -4770, -4770,  3185, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,  1784,
      86, -4770,  1126,    10, -4770,   754, -4770, -4770, -4770, -4770,
   -4770,  -131, -4770, -4770,  -153, -2724, -1186, -1180,   881,  1025,
   -3873, -2353, -2136, -3352, -1277, -4770, -4770,   838, -3480, -3098,
     541,  -769, -1339, -1340,   113,  2278,  4073, -1548, -4770,  5234,
    -909, -1712, -2202,   784,  4088,    -6, -4770, -3260, -4770,  -160,
     131,  2074,   -75,  3161, -3764, -4770,   -10,     2, -4770,   406,
     282, -4770, -4770,   353, -4770, -4770, -4770,   103, -4770, -4770,
   -4770, -4770,  3912, -4770,  2393,  5454, -4770, -4770, -4770,  3164,
    5465,  -921,  3936,  3193, -4770,  3197, -4770, -4770, -4770, -2195,
   -4770, -4770, -4770,   179, -4770,  2506, -4770, -4770, -4770, -4770,
   -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770, -4770,
   -4770, -1416,  4485,  5472,  4022, -4770, -4770,  2349, -4770, -2167,
   -1453, -1232, -1557, -4770,  4349,  2747,  2756, -2332, -1115, -1109,
    -960, -1128,  -948,  -946, -4770,  3800, -1591, -4770, -4770,  1866,
   -4770,  2750,   620, -4770, -4770,   460, -4770, -4770,  1754,  4502,
    3993, -4770, -4770, -4770, -4770, -4770,  4336, -4770,   -21,    -9,
   -4770,  -405, -4770, -4770, -4770,   115,  5523,  5524, -4770, -4770,
     231, -4770,  -943, -4770, -4770, -4770, -4770, -4770,  4272, -4770,
   -4770,  4273, -4770, -4770, -4770, -4770,  4276, -4770, -4770, -4770,
   -4770, -4770, -4770,  1688, -4770, -4770, -4770, -4770, -4770, -4770,
    -708, -4770, -4770, -4770,   140, -4770,  1457, -4770,  1067, -4770,
    1010,   695,  1568, -2512
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    65,    66,  1162,  2432,    67,    68,    69,    70,    71,
    2264,    72,  1461,  2199,  2956,  2957,    73,   987,   742,    74,
    1917,  1916,  2654,  2655,  3989,  4489,  4490,  3998,  4504,  3992,
    4493,  4494,  3995,  4498,  4499,  2720,  2721,  2722,  2723,  2724,
    2725,  2726,  2727,  2728,  2729,  2730,  2731,  2732,  2733,  2734,
    2735,  2736,  2737,  2738,  2739,  2740,  2741,  2742,  2743,  2744,
    2745,  2746,  4505,  4506,  4005,  4011,  4016,  4038,  2747,  2748,
    2749,  2388,    75,    76,    77,    78,  2756,    79,  4065,  2778,
      80,  3484,  3237,  3238,  1962,  4092,  4479,  5143,  4483,  5235,
    5336,  5159,  3382,  4819,  5144,  5145,  5244,  2788,  2515,  5279,
    3222,  5364,  3223,    81,  1236,  4538,  4539,  4540,  4860,  4861,
    4862,  4863,  5527,  5430,  5498,  5528,  5614,  5620,  5551,  5630,
    5631,  5632,  5618,  1532,  5633,    82,  1021,  1022,  1534,  2293,
    2971,  2294,    83,    84,   949,  2225,  2226,  2227,  2228,  3667,
    2972,  3662,  3663,  4620,  5552,  5616,  5431,  5432,  5343,  5433,
    5247,  5434,  5347,  5435,  5250,  5436,  5437,  5438,  5439,  5519,
    5440,  5342,  5544,  5427,  5428,  5521,  5592,  5611,  5441,  5257,
    5337,  5485,  5258,  5338,  5514,  5423,  5515,  5539,  5588,  5424,
    5486,  5542,  5489,  5442,  5448,  5529,  5443,  5449,  5444,  5262,
    5354,  5447,  5352,  5446,  5525,  5524,  5567,  3516,  4103,  1945,
    2765,  3459,  3460,  3461,  3240,  3241,  1808,  2944,  2945,  2946,
    4052,  4053,  4054,  3845,  3846,  3847,  2526,  3377,  3229,  1809,
    1810,  1878,  1812,  3465,  4056,  4057,  3466,  3467,  1813,  3469,
    1814,  1815,  1816,  1817,  3242,  3498,  3499,  3500,  3501,  3502,
    2426,  2427,  3787,  3140,  3784,  4695,  4308,  5396,  4315,  4365,
    4366,  4971,  5317,  5205,  5313,  5206,  5315,  5402,  5403,  5216,
    5327,  5328,  5116,  5117,  5118,  2508,  2509,  3445,  3446,  2510,
    1247,  1879,  3503,  2537,  1880,  3335,  1881,  1882,  2513,  3350,
    3322,  4098,  3877,  3878,  3879,  4415,  3880,  3264,  2545,  3869,
    3870,  4434,  3927,  4791,  5419,  3928,  3929,  3930,  3931,  3932,
    3933,  3934,  4120,  3935,  4121,  4116,  4117,  4114,  1290,  4752,
    4753,  4754,  4110,  4111,  4450,  4435,  4436,  4437,  4999,  4762,
    4781,   893,  4771,  4391,  1550,  3188,  1573,  1574,  3076,  2312,
    1883,  4392,  4393,  4394,  4444,  4183,  4891,  4439,  4416,  4997,
    5134,  5137,  5231,  5415,  3265,  1909,  3258,  1648,   764,   765,
    5030,  5031,  5032,  5035,  5036,  5037,  4982,  4983,  4984,  4985,
    3267,  2783,  4986,  4987,  3490,  4974,  4373,  4374,  4375,  3268,
    3632,  4743,    85,    86,  1785,    87,  1794,    88,  1787,    89,
    1902,  1228,    90,  2630,    91,    92,    93,    94,    95,  2438,
      96,    97,  3818,  3181,  3182,  3183,  2470,  3175,  3176,  1167,
    3383,  3980,  5018,  1209,  1884,  1885,  2624,  1886,  1887,  5011,
    1888,  3296,  1889,  1890,  1891,  1892,  3648,  3649,  3273,  3650,
    3325,  2547,  1498,  2951,  4462,  2599,    98,    99,  1178,  1179,
    1180,  1181,  1182,  1183,  1106,   100,   101,  2399,  5092,   102,
    1656,  1657,  1658,  3772,  4306,  4687,  4949,  1661,  1662,  1663,
    3123,  3770,   103,  1921,   104,  3032,  3033,  3034,   105,  4822,
    2636,   106,   107,  1928,  1929,  1930,   108,   239,   109,  1519,
    1517,  2270,  2271,   110,  1232,  1233,  2638,   111,  3006,  3007,
    1910,  1911,  4236,   112,   113,  3505,   115,   894,   117,   118,
    2304,  2305,  3057,  3058,   119,   120,  1038,  1039,  1040,  1187,
    1188,  1734,  2479,  2480,  2481,   895,   896,  1400,  1287,  1912,
     898,   899,  2151,   900,  1401,  1402,  4441,   901,  1413,  2139,
     902,  4129,   903,   904,  4200,   905,   906,   907,  4152,  4153,
    4572,  2171,  2172,  2173,   908,   909,   910,  2898,  2105,  2106,
    4194,  3620,  4594,  3520,  3521,  3614,  4942,  3616,  4188,  4189,
    4589,  4895,  5066,  5175,  5285,  5177,  5286,  5293,  5067,   911,
     912,  1389,  2036,  4145,  3568,  4561,  1981,  3553,  1913,  1914,
    1312,  1313,  1278,  2804,  1987,  3059,  4270,  3060,  3731,  3732,
    3733,  4281,  4277,  3036,  3037,  3061,  3062,  3063,  3064,  3065,
    3066,  3067,  5081,  5300,  5301,  5509,  4599,  5586,  4600,  4601,
    4602,  5085,  4665,  4666,  4667,  4668,  4669,  3391,  3392,  3393,
    4242,  3297,  2026,  2027,  2034,  2243,  2244,  1982,  3001,  1588,
    4290,  1159,  1134,  1135,  1673,  2409,  4675,  4943,  4944,  3737,
    4671,  4941,  3331,  3332,  1192,  1196,  2489,  3193,  3194,  1603,
    1604,  1754,  1755,  5103,  3336,  3210,  3285,  3243,  3211,  3021,
    1738,  1739,  1189,  1740,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,  2966,  2500,  1225,   766,  2186,  2187,  2188,   139,   140,
     992,  1015,  1522,  3699,  3700,  4248,  3701,  3507,  3703,  4254,
    1131,  2527,  2528,  4255,  1132,  2404,  2405,  2406,  4629,  4631,
     141,   142,  4244,  4245,  1016,   143,  3204,  1766,  1767,   144,
    1123,  1626,  1627,  1628,  2382,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
    1601,  1107,  1818,  1607,  1109,  1110,  1111,  1608,  2355,  3104,
    1589,   190,   191,  1778,   192,  1205,  1206,  1779,   193,  1462,
    2219,  3660,  4216,  4605,  2220,  2221,  2967,   194,  1018,  1529,
    1524,  1530,  2277,  2278,  2276,  3041,  3039,   195,  1008,  1515,
    3024,   196,   997,   197,   198,  1001,  2256,  1506,  4237,  3508,
    3822,  4341,  4342,  4344,  4714,  4715,  5387,  5535,  5577,  5560,
    5580,  5581,  5584,  5603,  5604,   913,  1676,   914,  4772,  4773,
     915,   916,   917,   918,   919,   920,  4557,  4249,   921,  2490,
    4672,   922,  4246,   923,  3068,  2501,   732,  4500,  4501,  1168,
    1677,  2483,  2317,  4324,  1403,  1146,   977,  5264,  1058,  1170,
    1565,  1171,  2191,  1566,  2985,   734,   735,   736,  5265,   737,
     738,   981,  1063,   739,   199,  1064,   200,  2326,   201,  3750,
    3751,  1579,  1583,  2341,  2342,  2343,  1112,  2122,  2335,  1580,
    2344,  1067,  1558,  1559,  2324,  1560,  2322,  1561,  3085,  2353,
     202,  1004,  1509,   745,  2260,  2261,  3686,   203,  1128,   204,
     205,   206,  1217,   207,  2248,  2999,  3000,   208,  2296,   209,
    2230,  2239,  1465,   983,   984,  2988,  3170,  2465,  2466,  2986,
    2192,  1567,  2452,  1717,  1706,  1949,  2768,  2769,  2770,  2771,
    3154,  2773,  2774,  2775,  3478,  1173,  1709,  1950,  1174,  1476,
    2233,  1727,  4625,  4221,  5182,  4911,   210,   240,   748,  1245,
    1935,  2301,   211,   212,   213,   214,  1749,   926,  3069,   927,
    1041,  1266,   767,  1971,  1963,   233,   234,   235,   770,   771,
     236,  1900,  1901,  4484,  5020,  5147,  5369,  5370,  1965,  5458,
    1966,  1967,  4093,  5045,  5454,  5532,  1968,  3513,  4543,  5162,
    5366,   215,  1682,  1678,  1144,  2420,  2414,  2416,   216,   217,
    1501,   218,   219,  5097,  5098,  4079,  2629,  3971,  3972,  4473,
    3380,  3976,  2953,  3251
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     733,  1108,  1434,   121,  1439,   116,  1193,  1145,  1773,   925,
    1056,  1105,   945,   114,  1756,  1632,   986,  1551,  1555,  2087,
    2086,  1780,  1172,   979,  2484,  1007,  2041,  1951,  1760,  1197,
    3252,  2401,  1023,  1059,  3020,  1028,  2240,  1584,   731,  1151,
    1023,   979,  1743,  1121,  1722,  1060,  1314,  1129,  3019,  1136,
    3010,  1152,  1707,  2184,  2185,  3311,  3486,  1719,  1708,  1894,
    1990,  1991,  2619,  1720,   946,  3196,  3197,  1220,  2644,  1158,
    3940,  3773,  2138,  1149,  1697,  1006,  3678,  1157,  2973,  2439,
    1012,  3960,  1273,  2029,  2298,  3294,  3556,  2974,  4043,  2043,
    3557,  1169,  1893,  3462,  3306,  1811,  3623,  3823,  2108,  4125,
    2544,  2056,  2057,  2058,  3361,  3362,  1745,  2060,  3702,  2546,
    4438,  1750,  3153,  3363,  2511,  1759,  4311,  3161,  3247,  3248,
    2444,  3070,  2299,  2447,  2512,  2449,  1200,  2514,  1198,  2575,
    4457,  4458,  3049,  3981,  3354,   985,  2894,  2895,  3356,  4433,
    3463,  3734,  1241,  1243,  1581,  3099,  2096,  2598,  3551,  2904,
    2905,  2906,   978,  3255,  3769,  3002,  3551,  4351,  2943,  3708,
    2375,  3967,  1120,  2454,  3552,  2455,  2457,  2458,  4058,  2552,
     978,  3205,  3552,  2556,  3661,  1599,  3464,  2385,  3471,  3491,
    2471,  2473,  2474,  3627,  1199,  3558,  1121,  2576,   746,  2530,
    2389,  1381,  1382,  3472,  1383,  2107,  2392,  3351,  3352,  2588,
    1633,  1634,  1635,  1636,  1637,  3473,  1639,  1435,  1005,  4059,
    4902,  3002,  1721,  1011,  4901,  1210,  4855,   733,  4250,  3493,
     733,  1169,  1221,  1121,  1723,  2194,  1724,  4496,  1258,  1259,
    4442,  1127,  1263,  3147,  2242,  3148,  4628,  1121,  1393,  1394,
    2949,  1922,   772,  3191,  1436,  3286,  1393,  1394,  3162,  2886,
    3177,  3164,  1436,  3135,  3165,  1212,  3137,  3260,  1219,  1068,
    1444,  1445,  1446,  2776,  1492,  1449,  1450,  3447,  3816,  1453,
    3717,  1455,  1456,  1457,  3323,  1459,  3327,  3328, -1101,  1436,
    1835,  2634,  1393,  1394,  1393,  1394,  3615,  4815,  3201,  1835,
    2387,  3261,  1393,  1394,  1393,  1394,  3020,  4397,  4401,  3020,
    3020,  4402,  2116,   980,  4830,  1207,  2303,  1537, -1996,  1904,
    4403, -1086,  2309,  1244,  3022,  3522,  3523,  3524, -2383,  4411,
    -733,   980,  1918,  1964,  1972,  1062,  -605,  1393,  1394,  1393,
    1394,  1483,  3560,  1256,  2763,  1835,  1393,  1394,  1184,  2435,
    1118,  4466,  1222,  1393,  1394,  1393,  1394,  4385,  1936,  1523,
   -2219,  1229,  3192,  2242,  1184,  1185,  1234,  3576,  1923,  4386,
    1610,  3578,  1924,  3307,  1267,  2387,  -734,  5070, -2153, -1882,
    1393,  1394,  1615,  4387,   982,  3317,  1925,  3586,  3587,  -589,
    5080,  4692,  3957,  3593,  1175,  1070,  1043,  -746,  1393,  1394,
    1393,  1394,   982,  3618,  1983,  1984,  1985,  1393,  1394,  3605,
    3606,  1393,  1394, -2892,  3977,  1995,  3357,   947,  3612,  1998,
    4703,  1252,  -633,  5316,  2520,  -622,  3610,  1667,  1230,  2236,
    3262, -2988,  2435,  4350,  1224,  2459,  3629,  4975,  3746,  1186,
    1393,  1394,  1393,  1394,  3487,  3475,  2049,  3389,  1184,  2053,
    4395,  4471, -2989,  1393,  1394,  1186,  5095,  4770,  3655,  1061,
    3868,  3831,  4915,  1238,  2162,  1393,  1394,   241,  2070,  2071,
    3807,  2878,  2075,  1184,   241,  3820,  5378,  1393,  1394,  3494,
    4409,  4410,  4100,  2863,  3554,  1393,  1394,  1393,  1394,  1194,
    2089,  2090,  4287,  1393,  1394,  2094,  2095,  1538, -1882,   998,
    1185,  1820,  3029,  1393,  1394,  1294,  4939,  2319,  4453,  2450,
    2115,  1352,   995,  2395,  2987,  3862,  4037,  4220,  4551,  1643,
    5363,  2135,  1926,  2518,  1587,  1185,  5201,  2453,  1544,  3384,
    3169,  5152,  1393,  1394,  4477,  4737,  5155,  1013,  2005,  1186,
    3020,  2168,  2169,  1393,  1394,  4356,  1344,   241,  1184,  1512,
    2336, -2988,  1314,  1543,  3453,   993,  4165,  1674,  4774,  3191,
    1651,  2340,  1743,  2242,  1186,  4627,   740,  3848,  1393,  1394,
    4282,  1437, -2989,  1070,  1043,  4082, -3054,  4857,  3608,  1437,
    1732,  5123,  1148,  3756,  1919,  5379,  1906,  4858,  4269,  4273,
    4774,  2802,  3949,  4101, -2154,  1185,  3749,  2507,  4284,  4285,
    1190,  5373,  1415,  1251,  1153,  3609,  1437,  2949,  2594,  4756,
    1743,  2937,  5291,  3488,  1907,  3794,  1396,  2938, -1882,  1397,
    1927,   243,  1649,   999,  1396,  1194,  2460,  1397,  1393,  1394,
    5487,  2622,  5487,  2280,  1393,  1394,  5022,  1903,  1493,  1186,
    1201,  1652,  3795,  1154,  3782,  3485,  5331,  5158,  2237,  4804,
    3385,  1393,  1394,  3968,  3263,  3191,  1115,  4433,  3178,  5276,
    1396,  2595,  1396,  1397,  4696,  1397,  4357,  2950,  3192, -2383,
    1396,  1176,  1396,  1397,  -746,  1397,  2937,  4478,  4389,  2493,
    2163,  3788,  3133,  1644,  3814,  3815,  1733,  2356,  1480,  2497,
    2498,  4940,  5202,  1353,  4214,  2113,  3080,  2519,  3081,  1545,
      42,  2948,  1014,  3496,  2948,  1396,  2164,   741,  1397,  3802,
    3803,  3804,  3805,  3723,  1396,  4497,   241,  1397,  2370,  1609,
    3020,  1396,  2373,  1396,  1397,  2263,  1397,  2377,  3567, -1882,
    4859,  4440,  3716,  2144,  3651,  5164,  1190,  4638,  4662,  1675,
    1390,  5380, -1882,  5363,  1956,  4454,  5076,  2596,  1396,  1121,
    1121,  1397,  1295,  2167,  3030,  2635,  4978,  1169,  1440,  1254,
    3702,  1114,  2393,  2394,  3192,  3843,  1396, -3054,  1396,  1397,
    2320,  1397,  3855,    49,  1848,  1396,  2396,  4663,  1397,  1396,
    3555,  2451,  1397,  2814,  3723,  -746,  1725,  4055,  1298, -2144,
    3808,  2184,  2185,  1345,  2238,  1239,  4741,  3941,  2250,  2451,
    1152,  2947,  2197,  3754,  3947,  1418,  4745,   994,  1396,  5096,
    1396,  1397,  5003,  1397,  4748,  1195,  3020,  2521,  3953,  1315,
    3978,  1396,  1906,  -818,  1397,  2827,  3675,    54,  1586,  4195,
    3704,  4197,  5220,  1396,  3964, -1882,  1397,  1495,  5149,  5150,
     758,  3257,  1611,  3257,    55,  1396,  5278,  2511,  1397,   948,
    1907,  4796,   996,  1396,  1616,  1396,  1397,  2512,  1397,  1484,
    2514,  1396,  5160,  2193,  1397,  3619,  1999, -2153,  1242,  1242,
    3735,  1396,  2165,  1976,  1397,  3023,  1257,  1399,  3827,  1177,
    4404,  3861,  3489,  3864,  5013,  1399,  1539,  3743,  1438,  4472,
    2812,  3149,  3150,  1905,  1169,  1268,  1391,  1552,  3738,  1097,
    1396,  1404,  1253,  1397,  1386,  1570,  1575,  2910,  4346, -2988,
    2973,  1396,  1385,  5071,  1397,  5312,  3002,  2262,  4012,  2974,
    4017,  1399,  2463,  1399,  3202,  1602,  3653,  2273,  3946,  3404,
   -2989,  1399,  3863,  1399,  4388,  1447,  1396,  2448,  3031,  1397,
    1452,  4979,  1392,  1490,  4381,  1518,  4002,  4271,  3817,  4007,
    4350,  1195,  3626, -1101,  3747,  2536,  4019,  1393,  1394,  4389,
    4102,  4024,  4025,  4026,  4027,  4028,  1399,  4048,  1399,  2633,
    1920,  2777,  4035,  1696, -1882,  1399, -1882,  4042,  3504,  1920,
    4045,  1743,  1399, -1996,  1399,  2536, -1086,  5392,  3002,  2430,
    3873,  1169, -2383,  3179,  3180,  -733,  1396,  1499,  2772,  1397,
    3825,  -605,  1396,  2536,  3416,  1397,  2907,  4455,  3136,  1399,
    4198,  3138,  1269,  1516,  1169,  1920,  4187,  4704,  4649,  1396,
    4845,  1920,  1397,  4109,  2950, -2219,  1150,  1399,  1513,  1399,
    1494,  3405,  1698,   762,  1000,  1741,  1399,  4204,  3938,  3939,
    1399,  -734,   925,  2792, -1882,  1354,  4106,  5047,  4636,  4732,
    3757,  1169,  1393,  1394,  -589,  4562,  2536,  2887,  2916,  1169,
    1169,  2888,  2536, -3054,   979,  1059,  1792,  1115,  5381,  1399,
    2359,  1399,  4496,  1696,  2803,  1393,  1394,  1060, -2892,  1169,
    2536,  1197,  1399, -2154,  3943,  5359,  4135,  -633,  4136,  2536,
    -622,  1438,  2536,  2879,  1399,  2511, -2988,  3417,  2430,  2813,
    1193,  1761,  4154,  3088,  4155,  2512,  1399,  2793,  2514,  2864,
    2795,  1650,  4738,  5422,  1399,  5513,  1399, -2989,  1202,  4169,
    4654,  4655,  1399,  1762,  5332,  2536,  2494,  1121,  1666,  4651,
    4920,  1481,  1399,  1460,  4733,  3958,  4215,  1136,  2117,  1393,
    1394,  1116,  2118,  3961,  4047,  1726,  1786,  2117,  3965,  1920,
    1441,  2831,  4109,  3942,  2867,  4201,  2884,  -409,  2868,  4664,
    2885,  1399,  1185, -1882,  2646,  1690,  3474,  1700,  1698,  2597,
    3512,  4250,  1399,  1385,  1200,  3074,  3681,  1094,  2839,  1548,
    1198,  4166,  2843,  3230, -1882,  5587,  4243,  1587,  4013,  1169,
    1393,  1394,  1194,  1948,  4322,  1510,  1261,  1399,  1757,  3634,
    1504,  1520,  1288,  3635,  2865,  2818,  2568,  5607,  4140,  1744,
    3665,  1781,  4141,  5063,  1190,  1169,  2819,  1788,  1789,   121,
    1169,   116,  1793,  3157,  4624,  4757,  1556,  1895,  3020,   114,
    1897,   733,  1199,  1747,  1121,  4475,  3130,  5571,  5417,  4440,
    4058,  1915,  4062,  4148,  2908,  2824,  1665,  4149,  1194,  4077,
    5349,  1937,  1938,  1939,  4167,  3514,  1942,  1399,  4168,  1946,
    2087,  3333,  1169,  1399,  1952,  5064,  4206,  1954,  1955,  1898,
    4207,   979,  1356,  1430,  1431,  1432,  1433,  3515,  2794,  3809,
    1399,  4059,  4377,  4378,  4476,  4793,  2166,  2837,  2580,  2061,
    2829,   747,  2830,  1130,  3079,  3683,  3231,  2330,  2833,  2456,
    2182,  1315,   743,  1190,  2832,   744,  1605,  3682,  2845,  1197,
    1097,  3110,  4865,  4307,  1931,  1315,  4333,  1393,  1394,  5418,
     988,  3666,  1386,  1756,  1756,  1396,  1393,  1394,  1397,  4639,
    1385,  3029,  1393,  1394,  3938,  3939,  2235,  2850,  1393,  1394,
    3658,  1009,  1525,  1835,   980,  4683,  4078,  2030,  2854,  1722,
    2031,  1010,  4094,  1242,  5411,  1017,  5280,  1062,  1606,  1190,
    1748,  1122,  1719,  2088,  1548,  1393,  1394,  4363,  1720,  2569,
    2331,  1393,  1394,  2855,  2140,  2141,  3468,  3470,  2145,  2109,
    4645,  2146,  2147,  2148,  1393,  1394,  2152,  2153,  2155,  2157,
    2158,  2159,  2160,  2161,  4795,  4515,   925,  4797,  5131,  2127,
    5133,  1393,  1394,  1557,  1548,  2143,  1393,  1394,  1505,  3462,
    1811,  2948,  5350,  2234,  1811,   982,  2328,  1152,  3705,  3706,
    1396,  1811,  2762,  1397,  3097,  5000,  5001,  4980,  4981,  1191,
    3661,  1002,  1581,  2857,  3684,  4352,  1348,  2787,  1553,  2858,
    1169,  4071,  3789,  1396,  1393,  1394,  1397,  2175,  2176,   733,
    2178,  2581,  2180,   733,  1169,  1488,  3463,   733,  2190,  1169,
    1121,  2917,  2195,  2196,  2975,  5065,   825,  2229,  3232,   979,
    5361,  2297,  1894,  1894,  4485,  4486,  4095,  4014,  3233,  2232,
    2932,  1061,  1169,  3551,  4088,  3234,  3108,  2177,  2314,  4369,
    1169,  2181,  3464,  1169,  3471,  2189,  3113,  2247,  2249,  3552,
    3116,  4345,   979,  3119,  4385,  1893,  1893,  1396,  1436,  3472,
    1397,  4219,  4555,  1121,  1121,  4261,  4386,  1721,  1195,  5297,
    1549,  3473,  1237,  1121,  1121,  2942,  1121,  2275,  1957,  1723,
    4387,  1724,  2365,  3744,  3745,  4286,  1262,  1526,  4507,  3670,
    1169,  1169,  1070,  1043,  1694,  5309,   241,  2374,  4008,  2310,
   -2144,   980,  3551,  4258,  2184,  2185,   979,  1169,  1396,  1056,
    2443,  1397,  2619,  2306,  1393,  1394,  3257,  4295,  3552,  3810,
    2546,  2451,  2329,  3668,  1195,  4523,  1701,  3762,  3793,  1242,
    2337,  4595,  1059,  3030,  5470,  2332,  1399,  2485,  2459,  3235,
    4298,  3633,  4919,  5351,  1060,  5007,   733,   733,   733,  1121,
     733,  1169,  1121,  4326,  2954,  3711,  1393,  1394,  1393,  1394,
    1393,  1394,  2371,  1197,   733,  3797,  1169,  3799,  3800,   733,
    2910,  2505,   982,  3288, -2144,  1932,  3334,  2428,  1359,  1800,
    2108,   978,  2259,  1242,  2360,  2361,  2362,  4794,  2364,  4568,
    4433,  3710,  2272,  1242,  3685,  2274,  4821,  3585,  4015,  1811,
    2507,  2222,  2372,  2918,  4348,  3638,  3639,  2376,  2544,  5575,
    1489,  2467,  1273,  4096,  3758,  4521,  4522,  2546,  2575,  4192,
    5412,  5077,  4196,  3763,  3764,  1136,  2410,  1393,  1394,  4742,
    3002,  1399,   849,  1349,  1958,  1396,  3236,  4582,  1397,  3289,
    2421,  1802,  1800,  4991,  1396,  4596,  1169,  1397,  3848,  5480,
    1396,  1393,  1394,  1397,  1399,  1549,  1396,  3483,  4547,  1397,
    3493,  4978,  1436,  4586,  1169,  1393,  1394,  1959,  2363,  1744,
    3290,  2366,  4921,  4585,  -975,  5179,  2576,  2107,  5282,  3644,
    1169,  4294,  4597,  1396,  2119,  5124,  1397,  1124, -2060,  1396,
    2333,  1169,  1397,  4547,  3002,  1549,  1393,  1394,  4278,   980,
    1003,  4525,  1396,   744,  5367,  1397,  4516,  4517,  4518,  2334,
    5416,  1802,  2862,  5597,  2491,  4337,  1654,  3031,  1399,  1396,
    2502,  5413,  1397,  2495,  1396,  1169,  4338,  1397,  4097,  2460,
    1527,  4279,   980,  1436,  2418,  2511,  3078,  1393,  1394,  5055,
    3455,  3291,  2516,  2517,  1438,  2512,  4328,  2546,  2514,  4679,
    4778,  4898,  5414,  1782,  1027,  2767,  2924,  2120,  3811,  3812,
    2032,  1130,  1396,  2033,  4779,  1397,  2367,  1393,  1394,  1399,
     982,  1528,  4694,  1126,  1802,  1437,  1554,  4360, -2060,  5288,
    3824,  1393,  1394,  3946,  4702,  1802,   980,  1393,  1394,  4706,
    3849,  3850,  1393,  1394,  2607,  -665,  3020,  3020,  4234,  4055,
    3739,  3740,  3741,   982,  5340,  3280,  3969,  2880,  1933,  1148,
    2621,  5375,  5576,  1393,  1394,  1393,  1394,  1587,  1094,  4001,
    2919,  4003,  5294,  3292,  1062,  1160,  4548,  3642,  2368,  3141,
    2897,  4020,  4021,  4022,  4023,  1790,  2920,  2461,  5224,  3493,
    4029,  4030,  4031,  4032,  4033,  4034,  4979,  4036,  4039,  4040,
    4041,  1490,  5019,  1393,  1394,  4046,  -975,   982,  2639,  1121,
    2623,  4548,  4009,  4010,  2832,  4460,  4329,  3344,  5227,  3345,
    3494,  3281,  4886,  1791,  1121,  1703,  3142,  1029,  1393,  1394,
    3677,  1659,  1396,   890,  4927,  1397,  1960,  1934,  1094,  5537,
    5538,  4598,  1393,  1394,  2901,  5481,  1399, -2060,  3826,  4569,
    1800,  1804,  4470,  4072,  2902,  1399,  1393,  1394,  4549,  1711,
    1121,  1399,  3346,  2789,   733,   733,  4199,  1399,   825,  5269,
    1655,    42,  2914,   733,  1396,  5368,  1396,  1397,  1396,  1397,
    5270,  1397,  1393,  1394,  2423,  3347,  4280,  2424,  2947,  1125,
    5344,  5345,  1150,  4553,  1399,  4146,  2419,  4339,  1061,  4699,
    1399,  1094,  2790,  2791,  1231,  4701,  4780,  2808,  1393,  1394,
    1393,  1394,  1094,  1399,  1715,  1704,  1393,  1394,  1660,  5341,
    3611,  1804,  2121,  3282,  3348,  1393,  1394,  4990,  2641,  1437,
    1399,  4330,  5288,  3755,  4511,  1399,  2608, -2060,  4349,  3202,
    1783,  3760,  3598,  2750,    49,  1396,  1393,  1394,  1397,  1899,
    1315,  2838,  1393,  1394,  1030,  1213,  4636,  2462,  1393,  1394,
    4060,  4061,  1415,  1393,  1394,  1979,  1784,  1393,  1394,  1396,
    1214,  2369,  1397,  1399,  2976,  2463,  3458,  3752,  4775,  2785,
    3724,  4388,  1802,  1396,  1804,  2947,  1397,  1393,  1394,  1148,
    1713,  4878,  4461,  4712,  3293,  1804,  1714,  1161,    54,  3494,
    1437,  1393,  1394,  1961,  1163,  3283,  4836,  4837,  1169,  2925,
    4775,  1393,  1394,  3012,  1396,  1393,  1394,  1397,  2807,  5228,
    3525,  2973,  2929,  4292,  4293,  2933,  1169,  4713,  2921,  1208,
    2974,  4147,  1763,  2811,  1031,   237,  2425,  4296,  1393,  1394,
    1152,  1438,   743,  4160,  3496,   744,  1211,  1393,  1394,  1393,
    1394,  4050,  2931,  5314,  1958,  1396,  5318,  1386,  1397,  1705,
     743,  3077,  5184,   744,  1152,  1385,  2464,  2316,  1393,  1394,
    4171,  2805,  4716,  4717,  1404,  2806,  4172,  3089,  4718,  4550,
    1715,    42,  4340,  1121,   849,  1396,  5189,  1969,  1397,  4648,
    1393,  1394,  1980,  1399,  1764,  1979,  1393,  1394,  5271,  1396,
    1184,  1121,  1397,  3025,  3026,  1396,  4880,  3020,  1397,  3483,
    1396,  4321,  2809,  1397,  4550,  4327,  2646,  3625,  3725,  2316,
    1591,  4783,  4440,   238,   989,  2781,  1121,  1315,  1169,  5229,
    4225,  1396,  5190,  1396,  1397,  1399,  1397,  1399,  3726,  1399,
    3636,  1218,  3637,  2984,  4591,  2820,  4592,  2989,  2782,  5530,
    5530,  3727,  1185,  4775,    49,  1121,  1906,  4075,  1121,  1094,
    1393,  1394,  3002,  3002,  2947,  1418,  4896,  1169,  3002,  4259,
    3974,  1396,  1169,  1169,  1397,  5572,  3349,  3319,  1979,  1592,
    4596,  4535,  5005,  5006,  1907,  3975,  2975,  3020,  3020,  3938,
    3939,  1186,  1393,  1394,  5573,  1716,  1396,  1150,  3160,  1397,
    1393,  1394,  2940,  2984,  1152,  3050,  1399,  1121,    54,  4205,
    1396,  4051,  1593,  1397,  1223,  1169,   990,  4597,  4297,  1224,
    1242,  3114,  1994,  3496,  1396,    55,  3284,  1397,  3146,  1765,
    1399,  1169,  1393,  1394,  3728,  1059,  1741,   979,  1393,  1394,
     979,  1979,  1804,  1059,  1399,  1242,  4897,  1060,  4978,  5474,
    1396,  2922,  3082,  1397,  1979,  1060,   797,  3320,  1979,  1020,
      42,  5191,   367,  3106,   369,  2087,  1215,  1020,  2087,  4251,
    1393,  1394,  4507,  3083,  3003,  1399,  1396,  3008,  1396,  1397,
    4325,  1397,  4980,  4981,  1396,  1393,  1394,  1397,  4405,   991,
    1169,  4406,  4857,  1396,  1121,  1121,  1397,  1216,  1393,  1394,
    3129,  3681,  4858,  4951,  2492,  2048,  1960,  2821,  5109,  2828,
    1226,  2841,  1152,  2496,  1396,  3084,  1399,  1397,  1393,  1394,
    1396,  1908,   802,  1397,  4203,  4243,  1396,  4243,  3315,  1397,
    5060,  1396,  4089,    49,  1397,  1396,  1393,  1394,  1397,  2549,
    1032,  1033,  5110,  1034,  1035,  1036,  1399,  1393,  1394,  2539,
    4952,  4928,  1169,  4912,  2781,  1396,  3729,   979,  1397,  3321,
    1399,  3187,  1037,  3724,  2550,  3360,  1399,  4749,  2052,  1396,
    5107,  1399,  1397,  1415,  2477,  1227,  2478,  2782,  2842,  1396,
    2502,  2074,  1397,  1396,  5376,  2114,  1397,    54,   222, -2144,
    1169,  2621,  1399,  5108,  1399,  5295,  4210,  1757,  1757,  1393,
    1394,  2087,  2846,  3200,    55,  1152,  1396,  1150,  1121,  1397,
    -665,  3184,  2536,  3117,  3118,  1396,  2853,  1396,  1397,  1899,
    1397,  1645,  1646,  1415,   814,  4481,  4598,  3640,  3730,  1235,
    4211,  1594,  1399,  4979,  3198,  5171,  1396,  3249,  5504,  1397,
    4482,  3304,  1475,  3002,  3256,  4859,  1486,  2856,  1647,  5461,
    3269,  3271,  3274,  3275,  3276,  3277,  3278,  1399,  1396,  4272,
    3287,  1397,  3298,  1237,  1396,  4750,  5111,  1397,  4283,  2662,
    2663,  1399,  3298,  1961,  3308,  3309,  1240,  3298,  5639,  3313,
    3314,  1244,  1169,  3316,  3298,  1399,  1246,  1439,  2859,  3326,
    1070,  1043,  3329,  2131,  2088,  2440,  2441,  3259,  2442,  3339,
    2620,  3725,  3340,  1121,  4227,  5172,   830,  1248,  3279,  4751,
    2551,  1399,  2810,  3355,  3299,  3298,  2646,   980,  2871,  1169,
     980,  3726,  3199,  1250,   797,  5222,  5223,  1062,  1396,  2087,
    3333,  1397,  2889,  1249,  3727,  1062,  1121,  1399,  2896,  1399,
    1419,  1420,  1137,  2899,  3330,  1399,  3298,  3394,  3338,  1415,
    1797,  1255,  5112,  2834,  1399,  3342,  3343,  2646,  1552,  1260,
    1396,  2835,  1552,  1397,  5221,  2046,  3134,  1797,  1396,  2847,
    5113,  1397,  1772,  2646,  5467,  1399,  1418,  1595,  3600,  1264,
    2546,  1399,  3468,  3470,  5203,   220,  1150,  1399,   982,  1138,
     802,   982,  1399,  2848,  5114,  1265,  1399,  2646,  1596,  1270,
    1396,  1070,  1043,  1397,  4105,  4758,  1396,  1870,  1798,  1397,
    1871,  2620,  1948,  2679,  2680,  1271,  1399,  3728,  5324,    25,
    1393,  1394,  3341,  1597,  3214,  1798,  1418,  3504,  1439,  4139,
    1399,  1428,  1429,  1430,  1431,  1432,  1433,   980,  1396,  1598,
    1399,  1397,  1392,  4142,  1399,  4677,  4678,  5173,  4759,  1393,
    1394,  1061,  1272,  1396,  2849,  3386,  1397,  4150,  2646,  1061,
    1274,  1121,  1393,  1394,  1139,  1121,  1396,  1399,  1796,  1397,
    1438,  4760,  1797,  1797,  3455,  5082,  1399,  5083,  1399,  1419,
    1420,  1169, -2144,  4156,  2851,  2132,  1396,  1797,  2646,  1397,
    3509,   733,   814,  1393,  1394,  1275,  3574,  1399,  1448,  4929,
    3506,  1276,  1405,  1406,  1396,  3656,  1279,  1397,   982,  4157,
    4761,  4158,  1169,  1280,  4646,  1396,  1169,  4159,  1397,  1399,
    1070,  1043,  5561,  3455,  3455,  1399,  4161,   857,  1281,  3510,
    1798,  1798,  4545,  1282,  4385,  1422,  1423,  1679,  1680,  3729,
    1683,  1479,  1684,  1407,  1482,  1798,  4386,  4164,  1283,  1485,
    1284,  3871,  1418,  4170,  1487, -2144,  1408,  3375,  3376,  4173,
    4387,  1800,  3936,  3937,  4175,  4558,  4559,  1396,  4177,  1285,
    1397,  1286,  1070,  4398,   830,  4299,  1289,  1094,  1800,  1291,
    3448,  4502,  4503,  3654,  3452,  1422,  1423,  1451,  4179,  1399,
    1292,  4574,  2476,  2477,  5115,  2478,  1409,  3617,   831,  2087,
    5471,  2109,  4180,  1293, -2144,  1799,  2892,  5029,  1296,  1410,
    2646,  3730,  4181,  1297,  3171,  3172,  4579,  4335,  4336,  3173,
    3174,  1399,  4508,  3456,  3456,  1299,  3938,  3939,  3602,  1399,
    3457,  3457,  1300,    36,  1800,  3020,  1411,  4514,  4567,  4580,
    2980,  1301,  3646,  3647,  2981,  1386,  1801,  5068,  4581,  5275,
    4650,  1443,  1169,  1385,  1743,  1811,  4529,  1302,  4208,  1169,
    1303,  1399,  3127,  1801,  4936,  4937,  3128,  1399,  4563,  4527,
      42,  3849,  3850,  1454,  1326,  4528,  2229,  4841,  4842,  4843,
    4844,  2229,  1304,  1800,  1800,  3669,  1169,  5303,  1305,  3020,
    3020,  4726,  2242,  1802,  1343,  1306,  4604,  4876,  1800,  1399,
    1412,  1309,  2133,  5322,  5323,  5609,  5610,  1357,  1358,  3013,
    1802,  1422,  1423,  3559,  1399,  1121,  3013,  2646,  2134,  4980,
    4981,  1310,  4798,  1316,  1140,  4800,  4801,  1399,  3938,  3939,
    1317,  1121,  1121,  2700,  2701,  3630,  3858,  1552,  1318,  2646,
    3859,  4162,  3714,    49,  4379,  2646,  1141,  1399,  4380,  1315,
    1319,  3506,  1169,  2010,  1152,  1320,  1152,  1458,  4534,  1121,
    3458,  4879,  4380,  4603,  1321,  1399,  1802,  2646,  1801,  1801,
    1386, -1882,  1322,  3371,  3374,  3014,  1399,  1056,  1385,  1117,
    1119,  1323,  3014,  1801,   979,   979,   979,  1142,  1396,    42,
     777,  1397,  1463,  4885,  1324,   857,  3779,    54,  3781,  4626,
    1059,  4887,  1327,  3126,  3860,  1466,  3015,  2077,  2078,  3458,
    3458,  1169,  1060,  3206,    55,  1802,  1802,  1396,  2390,  2391,
    1397,  4640,  4060,  4061,  1328,  4641,  1464, -1882,  1399,  1329,
    1802,  1330,  3774,  4888,  2259,  4050,  5619,  3646,  1473,  4889,
    1426,  1427,  1428,  1429,  1430,  1431,  1432,  1433,  1143,  1474,
    2272,  3692,  5619,   220,  1552,  1477,  4688,  1331,  1332,  2014,
    4689,  1396,    49,  1467,  1397, -1882,  1333,  1334,  4764,  4690,
    1094,  4890,  4723,  4689,  1478,   797,  4724,  3016,  5619,  4907,
    1491,  4730,  1335, -1882,  3207,  4731,  4977,  1094, -1882,  3013,
    1496,  1169,  1428,  1429,  1430,  1431,  1432,  1433,  5174,  5139,
    1497,  1336,  1152,  1337,  4926,  1121,  2502,  3830,  4823, -1882,
    1338,  1803,  4824,  1415,  3077,  1552,    54, -1882,  1922,  5141,
    4744,  4825,  1503,  4828,  1339,  4826,  4637,  4829,  3841, -1882,
    4831,  4744,   801,    55,  4832,  4721,  1507,  5168,  1340,  1415,
    4725,   802, -1882,  1094,  4728,  1341,  1468, -1882,  5333,   221,
    2570,  1469,  1342,  1804,  1346,  3014, -1882,  4833,  1169,  3017,
    2539,  4834,  3256,  1347,  3256,  1508,  3208,  2015,   222,  3269,
    1804,  2018,   807,  1350,  3881,  2571,  4108,  -816,  2019,  1511,
    4835,  1351,  4112,  3298,  4731,  1415,  3206,  2539,  1355,  3013,
    1359,  3944,  1094,  1094,  1470,  4051,    64,  1360,  1361,  1531,
    1685,  4063,  2540,  4127,  1362,   220,  2087,  1094,  1169,  4840,
    1471,  2087,  4251,  4731,  3952,  1363,  1426,  1427,  1428,  1429,
    1430,  1431,  1432,  1433,  4868, -1882,  1804,  -816,  4871,  4881,
    1364,    42,  1365,  2646,  3298,  1923,  1472,  2539,  1366,  1924,
    4904,   223,  3298,   814,  2646,  1367,  3298,  3298, -1882,  1399,
    4953,  1368,  2540,  1925,  4724,  3014,  1414,  3207, -1882,  2020,
    1369,  1370,  1121,  4969,   980,   980,   980,  4731,  1169,  1169,
    4973,  1371,  1805,  4976,  4731,  1804,  1804,  4731,  1399,  2572,
    1521,  1372,  1533,  4992,   224,   777,  3015,  4993,  1373,  1805,
    1804,  1374,  1062,  4994,   367,  2242,   369,  4993,  5042,  2639,
    1375,   749,  4731,  5121,    49,  4848,  -816,  5122,   825,  1376,
    1377,  4388,  2541,  1415,  1169,    64,  1418,    42,  1378,  1379,
     222,  1906,  1399,  2022,   829,   830,  1806,   225,  1536,  1197,
    5142,  1380,  4399,  3925,  4724,   982,   982,   982,  1442,  3208,
    5154,  5225,  1418,  1806,  3859,  5226,  5389, -1882,  1906,  1907,
    5390,  1475,  1543,  1568,  1576,  1169,  -816,  3016,  3696,  3697,
    1582,  1585,  2541,  4764,  1415,  1590,  1194,  1612,  5394,  5197,
     797, -1882,  3986,  1613, -1882,    55,  1907,  1617,  5397,  5399,
    3018,  1242,  4689,  5400,  5172,  1614,  1629,  3209,  1418,  1926,
      49,   979,   750,  1630,  1805,  1805,  1121,  2975,  1906,  1121,
    5408,  3881,  1631,   797,  5409,  1638,  5475,  1618,  3506,  1805,
    5476,  5601,  1690,  1641,  1640,  5602,  1061,  3506,  3506, -1882,
    1385,  1642,  3288,  3506,  1494,  3353,  1907,   801, -1025,  1668,
   -1882,  4959,  4960,  1669,  4962,  1671,   802,  1672,  1681,  3017,
    1686,  5014,  1687,  1688,    54,  1689,  1691,  1692,  1806,  1806,
    1693,  1695,  1702,  1728,  1699,  1729,  4966,  4967,  1619,  1710,
     226,    55,  1620,  1806,  2023,  1730,  1731,   807, -1882,   802,
    1742,  1014,  1416, -1882,  1746,  1422,  1423,  1769,  1771,   751,
    1795,  1896,  2025,  2242,  1899, -1882, -1882,  1927,  3289,  1941,
    3813, -1882,  3724,  1940,  1943,  1944,  1947,  1953,  1417,  1436,
    1979,  1422,  1423,  2574,  1997, -1882,  1986, -1882,  5398,  2000,
    2035,  2045, -1882,  2542,  2046,  4081,  1418,  3617,  4083,  3290,
   -1882,  2068,  2047,  2085,   849,  4241,  5283,   777,  4765,  2097,
    -816,  4766, -1882,  2098,  2110,  4202,  2111,  4384,   814,   227,
    1415,   855,  2112,  2123,  3288, -1882,   857,  1422,  1423,   858,
   -1882,  2142,  2662,  2663,  2149,  2150,  2179,  1150,  4873, -1882,
    3209,  2183, -1882,  2198,  1415,  2231,  3724,  1418, -1882,  2252,
    4408,   814,  2984,  2253,  2254,  2257,  4224,  1169,  4413,  2255,
    -816,  2258,   752,  1121,  2266,  4447,  2267,  2268,  1419,  1420,
    3291,  2269,  2279,  3506,  1169,  2295,  2300,  2311,  3298,  2088,
    2315,  2316,  4252,   825,   228,  4764,   229,  2318,  2321,  2354,
    3289,  2323,   797,  1690,  2984,   828,  1169,  1621, -1882,   829,
     830,  1385,  2325,  1152,  1152,  2327,  1121,  1121, -1882,  2328,
    3725,  2543,  1152,  1152,  1152,  1121,  1121,  1121,  1545,  2358,
     230,  3290,  2378,  1150,  2379,  4316,  2380,  3288,  2381,  2383,
    3726, -1882,   231,   830, -1882,  2386, -1882,  1415,  2387,  2397,
    3018, -1882,  2398,  3727,  1421,  1169,  2400,  2411,  2412,   801,
    2413,   980,  3292,  2415, -1882,  1422,  1423,   831,   802, -1882,
    2417,  2543,  4309,  2429,  4309,  5099,  2431,  5100,  5101, -1882,
   -1882,   753, -1882, -1882, -1882,  1622,  2679,  2680,  5445, -1882,
   -1882,  2433,  4233,  2435,  3725,  2434,  2436,  1705, -1882,   807,
    2437,   754,  3291,  3289,  2445,  2446,  -816,  5132,  2451,  2469,
   -1882,  2482,  2486,  2506,  3726,  1152,  1422,  1423,  1121,  2487,
    4347,  2522,  2524, -1882,  2525,  2088,  2533,  3727, -1882,  1424,
    2538,  5075,   982,  1418,  3290,  2553,  3728, -1882,   232,  2539,
   -1882,  2558,  2559,  2087,  2565,  2567,   755,  1415, -1993,  1623,
    2577,   756,  2564,  4767,  4768,  2852,  -816,  1418,  2579,  4658,
    3256,  4802,  2589,  2582, -1882,  3766,  3767,  3768,  4376,  2590,
     814,  1427,  1428,  1429,  1430,  1431,  1432,  1433,  2593,  2600,
    2603,  2601,   757,  2611,  3292,  2613,   758,  5178,  2627,  2614,
    2628,  2625,  2626,  2631,   759,  2645,  1426,  1427,  1428,  1429,
    1430,  1431,  1432,  1433,  2632,  3291, -1882,  4310,  2642,   849,
    3728,  -974, -1882,  4765,  2643,  2646,  4766,  4417,  2751,  2753,
    2754,  2755,  1756,  2757,  2759,  5517,   855,  2758,  2200, -1882,
    2760,   857,  2764,  4660,   858,   825,   760,  2761,  2766, -1882,
    4456,  2779,  1426,  1427,  1428,  1429,  1430,  1431,  1432,  1433,
    1418,  2780,   830,  2088,  -816,  4151,  4464,  4465,  3729,  2786,
    2796,  4418,  2798,  2823,   857,  4419, -1882,  4420,  2826,  2799,
    2832,  1624,  3013,  2800,  2815,  4332,  3298,  3298, -1882,  2540,
    3394,  2817,  4491,  3293,  5566,  4495,  5568,  3292,  2822,  2825,
     761,  5287,  1422,  1423,  3215,  2836,  2893,  2840, -1882,  -816,
   -1882,  2844,  5590,  2860,  2570,  2861,  2869,  2866,  5377,  2881,
    3216,  2882,  2870,  1625,  2539,  4421,  1422,  1423,  1439,  2890,
    2883,  2891,  2911,  3013,  2952,  2903,  4705, -1499, -1882,  2571,
    3730,  2909,  3729,  1019,  1425,  2912,  1433,  2913,  3014,  2935,
    5033,  2926,  2930,  4376,  2955,  5038,  5625,  5626,  2936,  -816,
    1418,  2201, -1882,  2939,  2958,  2202,  2948,  2959,  4376,  1711,
    4519, -1882,  2960,  2961,  5385,  2963,  2962,  5284,  2964,  3206,
    1426,  1427,  1428,  1429,  1430,  1431,  1432,  1433,  1121,   762,
     763,  4312,  2965,  2977,  2978,  2982,  2979,  4541,   924,  3014,
    5459,  1587,  3009,  -974,   975,  2203,  4659,  3011,  1920,  3027,
   -1882,  3028,  4417,  1415,  3730,  3293,  2700,  2701,  3038,  1422,
    1423,  3035,   975,  3040,  3044,  2204,  1057,  3045,  3046,  3047,
    3206,  1426,  1427,  1428,  1429,  1430,  1431,  1432,  1433,  3048,
     924,  1147,  2303,  2572,  1556,  3072,   924,  1557,  3091,  -816,
    3207,  3073,  2200,  3103,  3092,  3093,  4788,  3105,  4767,  4768,
    4419,   849,  4420,  -995, -1882,  4765,  4769,  3094,  4766,  3095,
    3096,  3107,  3100,  3115,  2540, -1882, -1882,  3109,   855,  3120,
    4661,  3122,  3125,   857,  5033,  1906,   858,  1712,  5038,  4607,
    2205,  3126,  3217, -1882,  3131, -1882, -1882, -1882, -1882,  4608,
    1713,  3207, -1882,  3132,  5287,  3139,  1714,  4533,  3143,  4609,
    4421,  3145,  3151,  1907,  3152,  1715,  3158,  3159,  3293,  1422,
    1423,  3163,  2229,  4610,  4611,  4612,  3166,  3167,  3168,  2087,
    5582,  3190,  3208,  2088,  2206,  3185,  3195,  3212,  3203,  4613,
    3224,  1552,  3225,  3226,  3227,  4118,  5033,  4122,  3310,  3228,
      42,  5038,  3312,  2087,  5605,  3358,  3366,  3379,  3695, -1882,
    1315,  1169,  3506,  3381,  1152,  1419,  4422,  1121,  3077,  3218,
    3387,  4423,  2087,  5582,  3388,  2201,  3395,  4424,  3451,  2202,
    3397,  3398,  3399,  3208,  3400,  2207,  3401,  3402,  3403,  3406,
    1715,  3407,  2087,  5605,  3408,  3219,  3409,  3410,  3493,  3215,
    3411,  3412,  3413,  1797,  1823,  1824,  3414,  1426,  1427,  1428,
    1429,  1430,  1431,  1432,  1433,  3216,  1418,  4425,  4693,  2203,
    3415,  2208,  4309,    49,  3418,  3419,  3420,  3421,  3422,  5533,
    3423,  1426,  1427,  1428,  1429,  1430,  1431,  1432,  1433,  2204,
    1826,  3424,  5308,  3425,  3426,  2209,  3427,  3428,  -995,  3429,
    2573,  3430,  3431,  3432,  1829,  3433,  5362,  3220,  3434,  3435,
    1830,  1831,  3436,  4739,  1832,  3437,  4376,  2574,  4722,  3438,
    2210,  4376,  3439,  3440,  3441,  4376,  3442,  3696,  3697,  3443,
    3444, -1882,  3450, -1882,  3881, -1882,  3454,  2767,  1834,  1725,
   -1882,  5365,  3479,  3492,    55,  1169,  4426,  3477,  3511,  3528,
    4767,  4768,  1835,  3519,  2205,  1716,  1836,  3562,  3561,  3133,
    3575,  3577,  3592,  3674,  2211,  3622,  3563,  1294,  1121,  3624,
    1344,  3631,  1169,  3628,  1426,  1427,  1428,  1429,  1430,  1431,
    1432,  1433,  5637,  -665,  1705,  1841,  2647,  2648,  2649,  2650,
    2651,  2652,  2653,  3657,  1348,  2212,  4427,    42,  2206,  3673,
    1419,  4422,  3671,  3209,  3676,  4229,  4423, -2370,  3672,  3221,
    3690,  3679,  4424,  1121,  4806,   743,  4614,  3694,   744,  3712,
    3709,  3722,  3736,  3723,  3742,  1422,  1423,  3713,  3715,  3748,
    3759,  3765,  3761,  4615,   733,  3771,  3775,  3217,   928,  3776,
    3367,  3777,  3783,  3778,  3780,  1820,  3785,  1821,  3786,  2207,
    3790,  3791,  4425,  4428,  3209,  3792,  4491,  3798,  3494,  1797,
    1823,  1824,  1845,  3202,  3821,  3796,  3835,  3840,  3836,  1846,
      49,  3842,  4816,  3837,  1426,  1427,  1428,  1429,  1430,  1431,
    1432,  1433,  3838,  3866,  3839,  2208,  4376,  4755,  3865,  1847,
    3874,  1825,  3867,  3875,  3876,  3868,  1826,   929,  1121,  3506,
    3946,  3951,  3495,  3954,  3959,  3938,  3939,  3955,  3962,  2209,
    1829,  3979,  3970,  3984,  3218,  3963,  1830,  1831,  1439,  3988,
    1832,  3982,  3985,  3983,  3696,  3697,  3698,  3986,  4066,  1833,
     930,  4426,  4805,  4073,  2210,  5623,  3991,  1419,  1420,  1552,
    3219,    55,  3994,  1354,  1834,  4382,  4383,  3997,  1849,  4000,
    4390,  4049,  4064,  4074,  4616,  4429,  4080,  4091,  1835,  4123,
    4099,  4109,  1836,  4113,  5365,   931,  1850,  4115,  1193,  1193,
    1837,  4617,  4124,  4119,  4126,  4128,  1169,  3368,  2211,  -818,
    4130,  4427,  4914,  4131,  4132,  1840,  4412,  4143,  3077,  4133,
    2088,  1841,  4443,  4445,  4446,  4252,  4923,  4118,  4430,  4431,
    4144,  1169,  3220,  4134,  4182,  3506,  4185,  4186,  4190,  2212,
    4191,  1848,  1439,  4193,  4209,  1820,   932,  4864,  4217,  1094,
    4218,  1854,  4226,  4222,  4235,  1843,  4239,  1148,  3617,  2281,
    1855,  4240,  4253,  4618,  3529,  4256,  4257,  4274,  4428,  2282,
    4264,  4275,  4263,  4950,  4265,  5040,  4432,  2213,  2214,  2283,
    4619,  2215,  2216,  2217,  2218,  4276,  4266,  4267,  4288,  4289,
    4268,  3530,  4300,  2284,  2285,  2286,  4301,  4302,  1845,  4303,
    4304,  4305,  4313,  4317,  4314,  1846,  5634,  4318,  4319,  2287,
    4331,  4376,  3496,  4334,  4343,  4376,  4320,  4349,  4358,  4354,
    3938,  3939,  4355,  1169,  4359,  1847,  4362,  4364,  4370,  4367,
    4371,  4396,  5634,  4407,  3221,  4448,  4414,  4452,  4468,  1860,
    4480,  3531,  4459,  4526,  3532,  4513,  4532,  4469,  1848,    42,
    4537,  4542,  3533,  3698,  4544,  4552,  4556,  4554,  4564,  4570,
    1426,  1427,  1428,  1429,  1430,  1431,  1432,  1433,  4571,  4583,
    4429,  3534,  1169,  4584,  -154,  4588,  4587,  4593,  4623,   933,
    4622,  4606,  4628,  4630,  1849,  4633,  4642,  4634,  4647,  4635,
    4653,  4656,  4657,  4674,  -818,  1861,  1862,  1863,  1864,  4636,
    4644,  4652,  1850,  1865,  4685,  4686,  1851, -1774,  4491,  4698,
    4495,  5024, -1773,  4430,  4431,  3506,  2423,  4697,  3535,  4700,
    1866,  4707,    49,  1867,  4708,  5074,  2990,  4709,  4710,  1169,
    3829,  4719,  4736,  4727,  3536,  4740,  4746,  4776,  4541,   924,
    4777,  -819,  4782,  3261,   924,  4786,  4790,  5050,  4792,  4442,
    1853,  4799,  2991,  4807,  4808,  4810,  4811,  1854,   934,  1869,
    4818,  4432,  4814,  4817,  4820,  4827,  1855,  2992,  4839,  4852,
    4849,  4853,  4854,  4851,   924,  4866,    54,  4867,   935,  4868,
    2993,  4869,  4877,  4870,  4883,  4884,  4874,  4875,  4882,  3537,
     924,  2213,  2214,    55,  1169,  2215,  2216,  2217,  2218,  4892,
    4893,  1121,  4900,  4903,  4894,  4905,  4906,  4908,  3538,  4909,
    4910,  4916,  4917,  1857,  4924,  4930,  4931,  3298,  5119,  3298,
    4947,  4957,  4689,   936,  4948,  4958,  4961,  4963,   756,  4954,
    4964,  4968,  2994,  2995,  5004,  1190,  2288,  4933,  4970,  4989,
    4998,  4935,   828,  4996,  5456,  1860,   937,  5008,   924,   924,
    5009,   924,   924,  2289,  4871,  3977,  5015,  5027,  5017,   938,
    2996,  5026,  5021,  5039,   924,  5051,  5049,  5052,  5048,  5054,
    5062,   939,  5053,  5057,  5059,  3539,  3540,  3541,  5069,  5058,
    5135,  1872,  3542,  5073,  5078,  3543,  2938,   940,  5084,  5088,
    5091,  5089,  5102,  5105,  5136,  5146,  5148,  5151,  5093,  5157,
    5130,  1861,  1862,  1863,  1864,  1875,  1876,  5138,  5494,  1865,
    4491,  4491,  3794,   941,  5161,  5140,  5165,  5167,  5070,  5183,
    5079,  5181,  5166,  5494,  5169,  5185,  1866,  4940,  2997,  1867,
    5200,  5186,  5187,  5198,  5188,  5192,  5503,  3544,  3545,  5193,
    3613,  5199,  5204,  5207,  5209,  5210,  5215,  5230,  5218,  5234,
    5272,  5296,  5291,  5273,  5281,  5289,  5292,  5294,  5295,  1877,
     924,  5304,  5305,  3546,  5119,  1869,  5312,   942,  5326,  5311,
    5335,  -548,  5353,  3617,  5355,  3497,  5356,  5357,  -665,  5358,
    5371,  5374,  2998,  5386,  5393,  5422,  1757,  -566,  5388,  5425,
    5450,  2290,  5451,  5452,  5455,  5494,  5453,  5462,  5395,  1870,
    5465,   924,  1871,  5461,  5469,  5555,  4376,  5463,  5479,  5096,
    5557,  5482,  5490,  5483,  5495,   975,  5491,  5505,  5508,  5512,
    5513,  5511,  5232,  5518,  5522,  5520,  5523, -2836,  1057,  5526,
    5534,  5536,  5543,  5546,  5556,  5548,  5559,  3547,  5558,  5563,
    5564,  3187,  5569,  5565,  5494,  5574,  5494,  5583,  5589,  5593,
    5595,  5598,  5599,  2291,  5612,  5608,  5407,   943,  5615,  5410,
    5613,  5622,  5624,  5071,  5348,  4213,  5642,  2088,  5494,  5302,
    2292,  3993,  3999,  3990,  5023,  5025,  3394,  3394,  3996,   897,
    4018,  5028,  4512,  4309,  5034,  4361,  5360,  1872,  5044,  5277,
    1970,  5501,  5046,  2523,  5502,  5163,  5643,  5617,  5325,  5457,
    1113,  4621,  1653,  5494,  5494,  3707,  3664,  3548,  5641,  5245,
    5330,  1875,  1876,  5246,  5248,  5249,  5251,  5252,  5253,  5627,
    5254,  5339,  5540,  5488,  5255,  5256,  5346,  1155,   242,  5541,
    5531,  5500,  5259,  5260,  5499,  3549,  5261,  4524,  3246,  3253,
     121,  1807,   116,  4212,  4838,   976,  4850,  4720,  4087,  3449,
     114,  4090,  4086,  4691,  5472,  5404,  5094,  4491,  4972,  5510,
    5478,  5477,  3213,   976,  5217,  1877,  3369,  4536,  4734,  4085,
    4735,  4787,  4400,  4451,  4449,  5484,  4789,  4995,  3550,  5298,
    4184,  3266,  5153,  5120,  3872,  5219,  5156,  4988,   979,  5106,
    5129,  2784,  4747,  4846,  4530,  3372,  3819,  4076,   924,  3806,
    5012,  3373,  3121,  3370,  4467,  1664,  2504,  3693,  3124,  3945,
    1169,  2752,  3691,  1169,  2475,  2640,  4632,  4232,  3987,  1156,
    3071,  3680,   975,  1542,  3186,  1541,  5426,  2934,  4872,  3643,
    2900,  3621,  5194,   924,   924,  2125,  5176,  5460,  3718,  2044,
    5507,  5468,   924,   924,   924,   924,   924,   924,  5585,  5606,
    1393,  1394,  3719,  1169,  5119,   924,   924,  3720,   924,   924,
    3721,  5086,  4938,   924,   924,  4487,  5306,   924,   924,   924,
     924,  1996,   924,   924,  5302,  4676,  5307,  1670,  4945,  2408,
     924,   924,  5195,   924,   924,   924,   924,   924,  4291,  4463,
     924,   924,   924,   924,   924,   924,   924,   924,   924,  5061,
     924,  5170,  5104,   924,   924,   944,  3189,  2941,   924,  5600,
    3652,  4230,   924,   924,   924,  1774,  5404,  5267,  2251,  4925,
    1775,  2407,  4643,  4228,  4913,   924,   924,   924,  4918,  4231,
     924,  2503,  1776,   924,   924,   924,   924,   924,  1777,  1768,
    1514,  2384,   924,  3111,  1770,  3112,  3659,  3966,  2006,  2007,
    2008,  2009,  2010,  3042,   924,   924,  4238,  4711,  4965,  5638,
    3043,  5621,   924,  5466,   924,   924,  5506,  4899,  4803,  4922,
    3828,  5087,  4956,  2126,  4006,  5464,   924,   924,   924,  3090,
     924,   924,  2339,  3753,   924,   924,   924,  1065,  5268,   924,
     924,   924,   924,   924,   924,   924,   924,  3101,  1066,  1535,
     924,  1026,  2241,  5545,  2338,   924,  3087,  3687,  3086,  3801,
    5553,  1718,  5267,  5267,  3480,  3476,  2468,  5072,  3481,  1540,
     975,  1758,  5180,  2302,   768,   769,  4531,  4809,  5473,  1973,
    1974,  4847,  5041,  1975,  4474,     0,     0,     0,     0,     0,
       0,  5266,     0,  2088,     0,     0,     0,     0,     0,  5591,
       0,     0,     0,   975,  5596,  2011,  2012,  2013,  2014,     0,
       0,     0,     0,  1169,     0,     0,     0,  2088,   980,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5268,  5268,     0,  2088,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5635,     0,
       0,     0,     0,     0,     0,     0,  2088,   975,     0,     0,
       0,     0,     0,     0,   924,   116,     0,     0,     0,     0,
       0,  5267,  5267,   114,  5635,     0,  2006,  2007,  2008,  2009,
    2010,     0,     0,     0,     0,     0,  5266,  5266,  5267,   982,
       0,     0,     0,     0,     0,  1057,     0,   924,     0,     0,
     924,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2015,     0,  2016,  2017,
    2018,     0,     0,     0,     0,     0,     0,  2019,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5268,  5268,     0,     0,     0,     0,     0,     0,
       0,     0,  5267,     0,     0,     0,     0,     0,     0,  5268,
       0,     0,     0,     0,     0,     0,     0,  5267,  1396,     0,
       0,  1397,     0,     0,     0,     0,     0,     0,     0,     0,
    5267,   924,     0,  2011,  2012,  2013,  2014,     0,     0,     0,
       0,     0,     0,     0,     0,  5266,  5266,     0,     0,     0,
     924,     0,     0,     0,     0,     0,     0,     0,  2020,  5267,
       0,     0,  5266,     0,     0,     0,     0,     0,     0,     0,
       0,  5267,  5267,  5268,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5268,  5267,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5267,
       0,  5268,     0,     0,  5267,     0,     0,     0,     0,   924,
       0,     0,     0,     0,     0,     0,     0,     0,  5267,     0,
    5267,  2021,  2022,     0,     0,     0,  5266,     0,     0,     0,
    5268,     0,     0,     0,     0,     0,  5267,     0,  5267,     0,
    5267,  5266,  5268,  5268,  2015,     0,  2016,  2017,  2018,     0,
       0,     0,     0,     0,  5266,  2019,     0,     0,     0,     0,
    5268,     0,  5267,     0,     0,     0,     0,     0,     0,     0,
    5268,     0,     0,     0,     0,  5268,     0,     0,     0,     0,
    5267,  5267,     0,  5266,     0,     0,     0,     0,     0,  5268,
       0,  5268,     0,     0,     0,  5266,  5266,  5267,  5267,     0,
       0,     0,  5267,     0,     0,     0,     0,  5268,     0,  5268,
       0,  5268,     0,  5266,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5266,     0,     0,     0,     0,  5266,     0,
       0,     0,     0,  5268,     0,     0,  2020,     0,     0,     0,
       0,     0,  5266,     0,  5266,  1277,     0,     0,     0,     0,
       0,  5268,  5268,     0,     0,     0,     0,     0,     0,     0,
    5266,     0,  5266,  2023,  5266,     0,     0,     0,  5268,  5268,
       0,     0,     0,  5268,     0,  1308,     0,     0,     0,  1399,
    2024,  2025,     0,     0,     0,     0,  5266,     0,     0,     0,
       0,  1325,     0,     0,     0,     0,     0,     0,     0,  2021,
    2022,     0,     0,     0,  5266,  5266,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5266,  5266,     0,     0,     0,  5266,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   924,     0,     0,     0,   924,
       0,     0,     0,  1387,     0,     0,     0,   924,  2529,   924,
    2531,  2532,     0,     0,     0,  2534,  2535,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2548,     0,     0,  2554,  2555,     0,  2557,     0,     0,  2560,
    2561,  2562,  2563,     0,     0,     0,  2566,     0,     0,   924,
       0,  2578,     0,     0,     0,     0,  2583,  2584,  2585,  2586,
    2587,     0,     0,     0,  2591,  2592,     0,     0,     0,     0,
    2602,     0,  2604,  2605,  2606,     0,  2609,  2610,     0,  2612,
       0,     0,  2615,     0,     0,  2616,  2617,  2618,     0,     0,
       0,  2023,     0,   924,   924,   924,     0,     0,     0,     0,
       0,     1,     0,     0,     2,     0,     0,     0,  2024,  2025,
       0,  1502,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     4,     0,     0,     0,     0,     0,     0,
       0,   924,     0,     0,     0,     0,   924,     5,     6,     0,
       0,     0,     0,     0,     0,     7,     0,     0,     0,     0,
       8,     9,   897,     0,     0,   924,     0,     0,     0,     0,
       0,     0,   924,     0,     0,     0,    10,   924,  1500,   924,
       0,     0,     0,     0,     0,   924,     0,   924,   924,     0,
       0,     0,     0,     0,     0,     0,    11,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    12,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,    14,
       0,     0,     0,     0,     0,     0,   976,     0,     0,     0,
      15,    16,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    18,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    20,     0,    21,     0,  1500,
       0,     0,    22,     0,     0,    23,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      24,     0,     0,     0,     0,     0,     0,     0,    25,     0,
       0,    26,     0,     0,     0,     0,     0,     0,   975,     0,
       0,   975,     0,     0,     0,     0,     0,     0,  1057,   924,
       0,    27,     0,   924,     0,     0,  1057,     0,     0,   924,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1977,  1978,     0,     0,     0,     0,
       0,     0,     0,  1988,  1989,     0,     0,  1992,  1993,     0,
       0,     0,     0,     0,     0,     0,  2001,  2002,     0,  2003,
    2004,     0,     0,     0,  2028,     0,     0,     0,  2037,  2038,
    2039,  2040,     0,  2042,     0,     0,     0,     0,     0,     0,
       0,  2050,  2051,   976,  2054,  2055,     0,     0,     0,     0,
       0,  2059,     0,     0,  2062,  2063,  2064,  2065,  2066,  2067,
       0,  2069,     0,     0,  2072,  2073,     0,     0,   975,  2076,
       0,     0,     0,  2079,  2083,  2084,     0,     0,    30,     0,
       0,     0,     0,     0,     0,     0,  2091,  2092,  2093,     0,
       0,     0,     0,     0,  2099,  2100,  2101,  2102,  2103,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    31,     0,     0,     0,  2124,   897,     0,     0,     0,
       0,     0,    32,  2128,     0,  2129,  2130,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    33,     0,     0,    34,     0,    35,
       0,  3244,    36,     0,  3244,  3244,     0,     0,     0,     0,
       0,     0,    37,    38,     0,     0,  2170,     0,     0,     0,
       0,     0,    39,     0,    40,     0,     0,     0,     0,     0,
       0,     0,     0,    41,     0,     0,     0,     0,     0,    42,
       0,     0,     0,     0,     0,     0,     0,    43,     0,     0,
       0,     0,    44,    45,    46,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    47,     0,     0,     0,     0,
       0,   976,    48,     0,     0,     0,     0,     0,     0,  3144,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    49,     0,     0,     0,     0,     0,     0,   924,
       0,     0,     0,     0,   976,  2313,     0,     0,     0,     0,
    1500,     0,     0,     0,     0,     0,    50,     0,     0,     0,
       0,     0,     0,     0,     0,  2265,     0,     0,    51,     0,
       0,     0,    52,     0,     0,     0,     0,     0,  2352,     0,
      53,  2357,     0,     0,     0,     0,    54,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   976,     0,
       0,     0,     0,    55,     0,     0,     0,     0,     0,     0,
       0,    56,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3254,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    61,  1797,  1823,  1824,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3305,     0,     0,     0,     0,
       0,     0,  2403,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3318,     0,     0,     0,     0,     0,     0,    62,
    1826,  2422,     0,     0,     0,     0,   924,     0,     0,     0,
       0,     0,     0,     0,  1829,   924,   924,     0,     0,     0,
    1830,  1831,     0,     0,  1832,     0,     0,     0,     0,     0,
    3364,  3365,     0,     0,     0,     0,   924,   924,  3378,   924,
       0,     0,   924,   924,   924,   924,   924,     0,  1834,   924,
    3493,     0,     0,     0,     0,  1797,  1823,  1824,   924,     0,
    2488,     0,  1835,   924,     0,   924,  1836,   924,   924,     0,
     924,   924,     0,     0,     0,   924,   924,   924,     0,     0,
       0,   924,   924,   924,     0,   924,     0,   924,     0,   924,
       0,   924,  1826,   924,     0,  1841,     0,     0,   924,     0,
       0,     0,  2472,  2472,  2472,    64,  1829,     0,     0,     0,
       0,     0,  1830,  1831,   924,     0,  1832,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   924,     0,   924,     0,   924,
    1834,     0,     0,   924,     0,     0,     0,     0,     0,   924,
     924,     0,     0,     0,  1835,     0,     0,     0,  1836,     0,
       1,     0,     0,     2,     0,     0,     0,     0,     0,     0,
       0,     0,  1845,     0,     0,     0,     0,     0,     3,  1846,
       0,     0,     4,     0,     0,  -665,     0,  1841,     0,  3482,
       0,     0,     0,     0,     0,     0,     5,     6,     0,  1847,
       0,     0,     0,     0,     7,     0,     0,     0,     0,     8,
       9,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    10,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   924,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    11,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1849,     0,
    3494,     0,     0,     0,  1845,     0,     0,    12,     0,     0,
       0,  1846,     0,     0,     0,     0,  1850,    13,    14,     0,
       0,     0,     0,     0,     0,   975,   975,   975,     0,    15,
      16,  1847,     0,     0,     0,     0,  2797,     0,     0,     0,
    2801,     0,    17,     0,     0,     0,     0,     0,     0,     0,
    2797,     0,     0,  1057,     0,     0,    18,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1854,     0,     0,     0,     0,    19,     0,     0,   924,
    1855,     0,     0,     0,     0,     0,     0,     0,     0,   924,
    1849,   924,     0,     0,    20,     0,    21,     0,     0,     0,
       0,    22,     0,     0,    23,     0,     0,     0,  1850,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    24,
       0,     0,     0,     0,     0,     0,     0,    25,     0,     0,
      26,     0,     0,     0,  2873,  2875,  2877,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   924,     0,
      27,     0,     0,     0,     0,     0,     0,     0,     0,  1860,
       0,     0,     0,  1854,     0,     0,     0,    28,     0,  1148,
       0,    29,  1855,     0,     0,     0,     0,  2915,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2923,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2927,     0,
    2928,     0,     0,     0,     0,  1861,  1862,  1863,  1864,     0,
       0,     0,     0,  1865,  3496,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1866,     0,     0,  1867,     0,     0,     0,     0,     0,     0,
       0,  1860,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    42,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1869,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,  1861,  1862,  1863,
    1864,    32,     0,     0,     0,  1865,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1866,    33,    49,  1867,    34,     0,    35,     0,
       0,    36,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    37,    38,     0,     0,     0,     0,     0,     0,     0,
       0,    39,  3832,    40,  3833,     0,  3004,  3005,     0,     0,
       0,  1869,    41,     0,     0,     0,     0,     0,    42,     0,
       0,     0,     0,     0,     0,     0,    43,     0,    54,     0,
    3098,    44,    45,    46,  2352,     0,     0,     0,     0,     0,
       0,  1872,     0,     0,     0,    55,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    47,  1875,  1876,     0,     0,     0,
       0,    48,   975,     0,     0,     0,     0,     0,     0,   976,
       0,     0,   976,     0,     0,     0,     0,     0,     0,     0,
       0,    49,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3102,     0,
     924,     0,     0,     0,     0,    50,     0,     0,   924,  1877,
       0,     0,     0,     0,     0,     0,     0,    51,     0,     0,
       0,    52,     0,  1872,     0,     0,     0,     0,     0,    53,
       0,     0,     0,     0,     0,    54,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   924,   924,  1875,  1876,     0,
       0,     0,    55,     0,     0,     0,     0,     0,     0,  3973,
      56,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   924,     0,     0,     0,     0,    57,    58,    59,    60,
       0,   924,     0,   924,     0,   924,     0,     0,     0,   976,
       0,    61,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1877,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1150,   924,     0,
    -665,     0,     0,   924,     0,   924,     0,     0,    62,     0,
       0,     0,     0,     0,     0,  4067,  4068,  4069,  4070,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   924,
       0,     0,     0,     0,     0,     0,     0,     0,    63,  3239,
       0,     0,     0,  3245,     0,     0,     0,     0,  3250,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   924,     0,   924,     0,
       0,     0,     0,     0,  3300,  3301,  3302,  3303,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3396,     0,     0,     0,    64,   924,  3337,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3250,  3250,     0,     0,     0,     0,     0,     0,   924,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   924,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3518,     0,     0,
       0,     0,     0,     0,     0,     0,  3526,  3527,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3564,  3565,     0,
    3566,     0,     0,  3569,  3570,  3571,  3572,  3573,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3579,
       0,     0,     0,     0,  3580,     0,  3581,     0,  3582,  3583,
       0,  3584,     0,     0,     0,     0,  3589,  3590,  3591,     0,
       0,     0,  3594,  3595,  3596,     0,  3597,     0,  3599,     0,
    3601,     0,  3603,     0,  3604,     0,     0,     0,     0,  3607,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1797,  1823,  1824,     0,  3641,     0,     0,     0,     0,     0,
    2170,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  -976,  -976,  1826,     0,     0,
       0,  3244,  3244,     0,     0,  -976,     0,     0,     0,     0,
       0,  1829,     0,     0,     0,     0,     0,  1830,  1831,     0,
       0,  1832,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1819,     0,     0,     0,     0,  1820,     0,
    1821,   924,     0,  1822,     0,  1834,     0,     0,     0,     0,
       0,     0,  1797,  1823,  1824,     0,  3688,     0,     0,  1835,
       0,     0,     0,  1836,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   924,     0,   924,     0,     0,   924,
     924,     0,   924,     0,  1825,     0,     0,  -976,  -976,  1826,
    1827,     0,  1841,   924,     0,  1828,     0,  -976,   924,     0,
       0,   924,     0,  1829,   924,   924,     0,     0,     0,  1830,
    1831,     0,     0,  1832,     0,     0,     0,  3689,     0,     0,
       0,     0,  1833,     0,     0,     0,   924,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1834,     0,     0,
     924,     0,     0,     0,     0,     0,  3882,  3883,     0,     0,
       0,  1835,  3884,     0,  3885,  1836,  3886,  3887,     0,     0,
    2403,     0,     0,  1837,  1838,     0,   976,   976,   976,  1845,
    1839,     0,     0,     0,  3888,     0,  1846,     0,  1840,     0,
    4509,  4510,     0,     0,  1841,     0,   924,     0,     0,     0,
       0,     0,     0,     0,     0,  1842,  1847,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2472,
       0,     0,     0,     0,     0,     0,     0,     0,  1843,     0,
       0,   924,   924,     0,  3889,     0,     0,  3890,     0,  2488,
       0,     0,     0,   924,     0,  3891,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3534,  1849,     0,     0,     0,  1844,
       0,  1845,     0,     0,     0,     0,     0,     0,  1846,     0,
       0,  3892,     0,  1850,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1847,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3893,
       0,  3894,     0,     0,     0,   924,     0,     0,     0,  3834,
       0,  1848,     0,     0,     0,     0,     0,  3895,  3896,     0,
       0,     0,  3844,     0,  3851,  3852,  3853,  3854,  1854,  3856,
    3857,     0,     0,     0,     0,     0,     0,  1855,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1849,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3897,
       0,     0,     0,     0,     0,  1850,     0,     0,     0,  1851,
       0,     0,  3898,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3899,     0,     0,     0,     0,     0,     0,     0,  3950,
    3900,  3901,     0,  3902,     0,     0,     0,  1852,     0,     0,
     924,   924,  3956,  1853,     0,     0,  1860,     0,     0,     0,
    1854,     0,     0,     0,     0,     0,     0,     0,     0,  1855,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3903,
    3904,  3905,  3244,  3244,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3906,  3907,
    3908,  1856,     0,     0,     0,  3909,     0,     0,  3910,     0,
       0,     0,  1861,  1862,  1863,  1864,  1857,  1858,  1859,     0,
    1865,     0,     0,     0,     0,     0,  3911,  3912,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1866,     0,     0,
    1867,  2472,     0,  2472,     0,     0,     0,     0,  1860,     0,
       0,     0,     0,  2472,  2472,  2472,  2472,     0,     0,     0,
    3913,  3914,  2472,  2472,  2472,  2472,  2472,  2472,     0,  2472,
    2472,  2472,  2472,     0,     0,  4044,  1869,  2472,     0,     0,
       0,     0,     0,     0,     0,     0,  3546,     0,     0,     0,
       0,  4104,     0,     0,     0,     0,     0,     0,     0,  4107,
    4784,  4785,     0,     0,  1861,  1862,  1863,  1864,     0,     0,
     924,     0,  1865,   976,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1866,
       0,   924,  1867,   924,     0,     0,  4137,  4138,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3915,     0,
       0,     0,  3916,     0,     0,  1868,     0,     0,     0,     0,
       0,     0,  4163,     0,  3917,     0,     0,     0,  1869,     0,
       0,     0,  4174,     0,  4176,     0,  4178,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1872,     0,
       0,     0,  1870,     0,     0,  1871,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1875,  1876,  3918,     0,     0,  3919,     0,     0,
    3920,  3921,  3922,  3923,     0,     0,     0,     0,     0,     0,
       0,     0,   924,     0,     0,     0,     0,     0,     0,     0,
    2403,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1819,     0,     0,     0,     0,  1820,     0,  1821,     0,     0,
    1822,     0,     0,  3924,  3925,   924,  1877,     0,     0,  1797,
    1823,  1824,     0,     0,     0,     0,     0,  4260,     0,  4262,
    1872,  1873,  1874,     0,     0,     0,     0,     0,     0,     0,
       0,  3926,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1825,     0,     0,  1875,  1876,  1826,  1827,     0,     0,
       0,     0,  1828,     0,     0,     0,  2352,     0,     0,     0,
    1829,     0,     0,     0,     0,     0,  1830,  1831,     0,     0,
    1832,     0,     0,     0,     0,     0,     0,     0,     0,  1833,
     924,     0,     0,   924,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1834,     0,   924,     0,  1877,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1835,     0,
       0,     0,  1836,     0,     0,     0,     0,     0,     0,     0,
    1837,  1838,     0,     0,     0,     0,     0,  1839,     0,     0,
       0,     0,     0,     0,     0,  1840,     0,     0,     0,     0,
       0,  1841,     0,   924,     0,     0,     0,     0,     0,     0,
       0,     0,  1842,     0,     0,     0,     0,     0,  4323,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4368,
       0,     0,     0,     0,     0,  1843,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4353,     0,     0,
       0,     0,     0,     0,     0,  5570,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1844,     0,  1845,     0,
       0,     0,     0,     0,     0,  1846,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1847,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   924,     0,     0,  1848,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   924,     0,     0,     0,
       0,     0,     0,     0,  1849,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1850,     0,     0,     0,  1851,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   924,     0,     0,     0,     0,  5263,     0,
       0,     0,     0,     0,  5274,     0,     0,     0,  2472,     0,
       0,     0,     0,     0,  1852,     0,     0,     0,     0,     0,
    1853,     0,     0,     0,     0,     0,   924,  1854,     0,  5126,
    5127,  5128,     0,     0,     0,     0,  1855,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4546,     0,     0,     0,     0,     0,  1856,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4520,     0,  1857,  1858,  1859,     0,   924,     0,     0,
       0,     0,     0,  5263,  5263,  4560,     0,  2488,     0,     0,
    4565,  4566,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4573,  1860,     0,     0,     0,  4575,
       0,     0,  4576,     0,     0,  4577,  4578,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   924,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4590,     0,   975,
       0,     0,     0,     0,     0,     0,  1068,  1069,     0,  5208,
       0,     0,  5211,  5212,  5213,  5214,     0,     0,   924,     0,
       0,  1861,  1862,  1863,  1864,     0,     0,     0,     0,  1865,
       0,     0,  1070,  1043,     0,     0,     0,     0,   924,     0,
     924,     0,     0,  1071, -2152,     0,  1866,     0,     0,  1867,
     924,     0,  5263,  5263,     0,     0,     0,  2403,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1072,  5263,
    1073,     0,  1868,     0,     0,     0,     0,     0,     0,     0,
    1074,     0,     0,     0,     0,  1869,     0,     0,     0,     0,
       0,     0,  4670,  4673,     0,     0,     0,     0,     0,     0,
    5310,     0,     0,     0,  4680,     0,     0,     0,     0,  5320,
    5321,     0,     0,     0,     0,     0,     0,     0,  5329,  1870,
       0,     0,  1871,     0,     0,     0,     0,     0, -2144,  1075,
       0,   924,     0,  5263,  1076,     0,     0,  1077,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1078,  5263,   924,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5263,     0,     0,     0,  4681,  4682,     0,  4684,  1079,
       0,  1080,     0,     0,     0,     0,  4729,     0,     0,   924,
    1081,     0,  1082,     0,     0,     0,     0,     0,     0,   924,
    5263,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5263,  5263,     0,     0,     0,  1872,  1873,  1874,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5263,     0,     0,     0,     0,     0,     0,   924,     0,     0,
    5263,  1875,  1876,     0,     0,  5263,     0,     0,     0,     0,
       0,     0,   924,     0,     0,     0,     0,     0,     0,  5263,
       0,  5263,     0,  1083,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5263,     0,  5263,
       0,  5263,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4812,  4813,     0,  4763,  1877,  1084,     0,     0,     0,
       0,     0,     0,  5263,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5263,  5263,     0,     0,     0,     0,     0,   924,     0,
       0,     0,     0,     0,     0,     0,   924,     0,  5263,  5263,
       0,  3882,  3883,  5263,     0,     0,     0,  3884,     0,  3885,
       0,  3886,  3887,     0,     0,     0,     0,     0,     0,     0,
       0,  1085,     0,     0,     0,     0,     0,     0,     0,  3888,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1086,  2472,
    2472,  2472,  2472,     0,     0,     0,     0,     0,     0,  1087,
    1088,     0, -2148,  1089,  1090,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4856,     0,     0,  3889,
       0,     0,  3890,     0,  1091,     0,     0,     0,     0,     0,
    3891,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3534,
       0,  2403,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3892,     0,     0,     0,
       0,     0,  4932,     0,  4934,     0,     0,     0,  1092,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1093,     0,     0,  3893,     0,  3894,     0,     0,     0,
       0,  5391,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3895,  3896,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -2906,     0,     0,     0,  1094,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -2152,     0,     0,  1095,     0,     0,     0,
       0,     0,     0,     0,  3897,     0,     0,     0,     0,  4946,
       0,     0,     0,     0,     0,     0, -2148,  3898,     0,     0,
       0,  4955,  4323,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5002,     0,     0,  3899,     0,     0,     0,
       0,     0,     0,     0,     0,  3900,  3901,     0,  3902,     0,
       0,     0,     0,     0, -2906,     0,     0,     0,     0,     0,
       0,  1096,     0,     0,     0,     0,  5010,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3903,  3904,  3905,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3906,  3907,  3908,     0,     0,  3250,  3250,
    3909,     0,     0,  3910,     0,     0,     0,  3882,  3883,     0,
       0,     0,     0,  3884,     0,  3885,     0,  3886,  3887,     0,
       0,  3911,  3912,     0,     0,     0,     0,     0,     0,     0,
       0,  2488,  5016,     0,  5056,  3888,     0,     0,     0,     0,
       0,     0,     0,  2472,     0,     0,     0,  4670,     0,     0,
       0,     0,     0,     0,     0,  3913,  3914,     0,     0,     0,
       0,     0,     0,     0,     0,  5043,     0,     0,     0,     0,
       0,     0,     0,     0,  1097,  1098,     0,     0,     0,     0,
       0,  3546,     0,     0,     0,  3889,     0,     0,  3890,     0,
       0,     0,     0,     0,  4670,     0,  3891,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3534,  1099,     0,     0,  1100,
    1101,  1102,  1103,     0,  1104,     0,     0,     0,     0,     0,
       0,     0,  3892,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3915,     0,     0,     0,  3916,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3917,
    3893,  5090,  3894,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3895,  3896,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5125,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2488,     0,     0,  3918,
    3897,     0,  3919,     0,     0,  3920,  3921,  3922,  3923,     0,
       0,     0,     0,  3898,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3899,     0,     0,     0,     0,     0,     0,     0,
       0,  3900,  3901,     0,  3902,     0,     0,     0,  3924,  3925,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5233,     0,  3926,     0,     0,     0,
    3903,  3904,  3905,     0,     0,  5196,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3906,
    3907,  3908,     0,     0,     0,     0,  3909,  5290,     0,  3910,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3250,  3250,     0,     0,     0,     0,  3911,  3912,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3913,  3914,     0,     0,     0,     0,     0,  5334,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3546,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5319,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5372,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3915,
       0,     0,     0,  3916,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3917,     0,     0,     0,  5420,
       0,  5421,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5429,     0,     0,     0,     0,     0,     0,     0,     0,
     976,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5405,  5406,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3918,     0,     0,  3919,     0,
       0,  3920,  3921,  3922,  3923,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5492,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3924,  3925,     0,     0,     0,     0,
    5497,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3926,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5516,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     244,   245,     0,   773,   247,   248,   249,   250,  2345,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   774,     0,
     254,   255,   256,   257,   775,   259,     0,   260,  5547,     0,
    2346,   261,   777,   778,   779,   262,   780,     0,   263,   264,
     265,     0,   266,  5562,   267,   268,     0,     0,   269,   781,
     782,   270,   271,     0,   272,   273,   783,   784,   275,     0,
     276,   277,   278,   279,   785,   281,     0,   786,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,   787,   788,   302,     0,     0,     0,   789,   303,   790,
       0,   304,   791,   792,     0,   305,   306,   307,   793,   794,
     795,     0,     0,     0,     0,   796,   310,   797,     0,  5636,
    2347,   311,   312,     0,   313,     0,     0,  2403,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   799,     0,   337,   338,
     339,   340,   341,   800,   801,   342,   343,     0,   344,   345,
     346,   347,   348,   802,     0,   349,   350,  2348,     0,     0,
     803,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     804,   357,   805,     0,   359,     0,   360,     0,   806,     0,
     361,   362,     0,   363,   807,     0,   364,   365,     0,     0,
       0,   808,   367,   368,   369,   809,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,   810,   374,   375,   376,
     811,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,   812,   387,   388,     0,
       0,     0,     0,     0,   813,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,   814,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,   815,   416,   417,   418,   419,   816,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   817,
     427,     0,     0,   818,   429,   819,   430,     0,   431,   820,
     821,   822,   823,   824,   436,   437,   438,   439,   440,     0,
     825,   441,   442,     0,     0,   443,   444,   445,   446,   447,
     826,   827,   828,   448,   449,     0,   829,   830,   450,     0,
     451,   452,  2349,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,   831,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   832,   833,   471,   834,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   835,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,   836,
     837,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   838,
       0,   839,   515,   516,   517,   518,     0,   519,  2350,   841,
     521,   522,   523,   524,     0,   842,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,   843,   844,
     555,   556,     0,     0,   557,   558,   845,   560,   561,   562,
     846,   847,   563,   564,   565,   566,   848,   567,   568,     0,
       0,   569,   570,   571,   572,     0,   849,   573,   574,     0,
     850,   851,   852,   853,     0,     0,     0,     0,     0,   579,
     580,     0,   854,   855,   856,   582,   583,     0,   857,   584,
     585,   858,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   859,   594,     0,     0,
     860,   861,   862,   595,   863,   596,     0,     0,   597,   864,
       0,   865,   598,     0,   599,   600,   866,   867,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   868,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,   869,
     870,     0,   617,   618,   619,   871,   620,   621,   622,     0,
     623,   872,   873,   624,   874,   625,     0,   875,   876,   877,
     878,   879,   626,   627,     0,   880,   628,   881,   629,   882,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,  2351,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     883,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   884,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,     0,   724,   725,   726,   727,   728,   729,   730,     0,
       0,     0,     0,     0,     0,   885,   886,     0,     0,     0,
       0,   888,     0,   889,     0,     0,     0,   890,     0,     0,
       0,   891,   892,   244,   245,     0,   773,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   774,     0,   254,   255,   256,   257,   775,   259,     0,
     260,     0,     0,   776,   261,   777,   778,   779,   262,   780,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,   781,   782,   270,   271,     0,   272,   273,   783,
     784,   275,     0,   276,   277,   278,   279,   785,   281,     0,
     786,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,   787,   788,   302,     0,     0,     0,
     789,   303,   790,     0,   304,   791,   792,     0,   305,   306,
     307,   793,   794,   795,     0,     0,     0,     0,   796,   310,
     797,     0,     0,   798,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   799,
       0,   337,   338,   339,   340,   341,   800,   801,   342,   343,
       0,   344,   345,   346,   347,   348,   802,     0,   349,   350,
       0,     0,     0,   803,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   804,   357,   805,     0,   359,     0,   360,
       0,   806,     0,   361,   362,     0,   363,   807,     0,   364,
     365,     0,     0,     0,   808,   367,   368,   369,   809,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,   810,
     374,   375,   376,   811,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,   812,
     387,   388,     0,     0,     0,     0,     0,   813,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,   814,     0,
       0,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,   815,   416,   417,   418,
     419,   816,   420,   421,     0,     0,     0,     0,   422,   423,
     424,   425,   817,   427,     0,     0,   818,   429,   819,   430,
       0,   431,   820,   821,   822,   823,   824,   436,   437,   438,
     439,   440,     0,   825,   441,   442,     0,     0,   443,   444,
     445,   446,   447,   826,   827,   828,   448,   449,     0,   829,
     830,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,   831,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   832,   833,   471,   834,
     472,     0,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   835,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,     0,     0,
     490,   491,   492,   493,   494,     0,   495,   496,     0,   497,
     498,   499,   836,   837,   500,   501,   502,   503,   504,   505,
     506,   507,     0,   508,     0,   509,   510,     0,   511,   512,
     513,     0,   838,     0,   839,   515,   516,   517,   518,     0,
     519,   840,   841,   521,   522,   523,   524,     0,   842,   526,
      42,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,     0,   532,     0,   533,   534,   535,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,     0,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,   551,   552,   553,
     554,   843,   844,   555,   556,     0,     0,   557,   558,   845,
     560,   561,   562,   846,   847,   563,   564,   565,   566,   848,
     567,   568,     0,    49,   569,   570,   571,   572,     0,   849,
     573,   574,     0,   850,   851,   852,   853,     0,     0,     0,
       0,     0,   579,   580,     0,   854,   855,   856,   582,   583,
       0,   857,   584,   585,   858,   586,   587,     0,   588,   589,
       0,     0,   590,     0,     0,   591,     0,   592,     0,   859,
     594,     0,     0,   860,   861,   862,   595,  1384,   596,     0,
       0,   597,   864,     0,   865,   598,     0,   599,   600,   866,
     867,     0,     0,     0,    55,     0,     0,   603,   604,   605,
       0,   606,   607,   608,   609,     0,     0,   868,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,   869,   870,     0,   617,   618,   619,   871,   620,
     621,   622,     0,   623,   872,   873,   624,   874,   625,     0,
     875,   876,   877,   878,   879,   626,   627,     0,   880,   628,
     881,   629,   882,   630,   631,     0,     0,     0,   632,   633,
     634,   635,   636,   637,   638,   639,     0,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,     0,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,     0,   883,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   884,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,     0,   724,   725,   726,   727,   728,
     729,   730,     0,     0,     0,     0,     0,     0,   885,   886,
       0,     0,     0,     0,   888,     0,   889,     0,     0,     0,
     890,     0,     0,     0,   891,   892,   244,   245,     0,   773,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   774,     0,   254,   255,   256,   257,
     775,   259,     0,   260,     0,     0,   776,   261,   777,   778,
     779,   262,   780,     0,   263,   264,   265,  2080,   266,     0,
     267,   268,     0,     0,   269,   781,   782,   270,   271,     0,
     272,   273,   783,   784,   275,     0,   276,   277,   278,   279,
     785,   281,     0,   786,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,   787,   788,   302,
       0,     0,     0,   789,   303,   790,     0,   304,   791,   792,
       0,   305,   306,   307,   793,   794,   795,     0,     0,     0,
       0,   796,   310,   797,     0,     0,   798,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   799,     0,   337,   338,   339,   340,   341,   800,
     801,   342,   343,     0,   344,   345,   346,   347,   348,   802,
       0,   349,   350,     0,     0,     0,   803,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   804,   357,   805,     0,
     359,     0,   360,     0,   806,     0,   361,   362,     0,   363,
     807,     0,   364,   365,     0,     0,     0,   808,   367,   368,
     369,   809,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,   810,   374,   375,   376,   811,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,  2081,
     386,     0,   812,   387,   388,     0,     0,     0,     0,     0,
     813,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,   814,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,   815,
     416,   417,   418,   419,   816,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   817,   427,     0,     0,   818,
     429,   819,   430,     0,   431,   820,   821,   822,   823,   824,
     436,   437,   438,   439,   440,     0,   825,   441,   442,     0,
       0,   443,   444,   445,   446,   447,   826,   827,   828,   448,
     449,     0,   829,   830,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,   831,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   832,
     833,   471,   834,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   835,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,   836,   837,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   838,     0,   839,   515,   516,
     517,   518,     0,   519,   840,   841,   521,   522,   523,   524,
       0,   842,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,   843,   844,   555,   556,     0,     0,
     557,   558,   845,   560,   561,   562,   846,   847,   563,   564,
     565,   566,   848,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   849,   573,   574,     0,   850,   851,   852,   853,
       0,     0,     0,     0,  2082,   579,   580,     0,   854,   855,
     856,   582,   583,     0,   857,   584,   585,   858,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   859,   594,     0,     0,   860,   861,   862,   595,
     863,   596,     0,     0,   597,   864,     0,   865,   598,     0,
     599,   600,   866,   867,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     868,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,   869,   870,     0,   617,   618,
     619,   871,   620,   621,   622,     0,   623,   872,   873,   624,
     874,   625,     0,   875,   876,   877,   878,   879,   626,   627,
       0,   880,   628,   881,   629,   882,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   883,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   884,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,     0,   724,   725,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,   885,   886,     0,     0,     0,     0,   888,     0,   889,
       0,     0,     0,   890,     0,     0,     0,   891,   892,   244,
     245,     0,   773,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   774,     0,   254,
     255,   256,   257,   775,   259,     0,   260,     0,     0,   776,
     261,   777,   778,   779,   262,   780,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,   781,   782,
     270,   271,     0,   272,   273,   783,   784,   275,     0,   276,
     277,   278,   279,   785,   281,     0,   786,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
     787,   788,   302,     0,     0,     0,   789,   303,   790,     0,
     304,   791,   792,     0,   305,   306,   307,   793,   794,   795,
       0,     0,     0,     0,   796,   310,   797,     0,     0,   798,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   799,     0,   337,   338,   339,
     340,   341,   800,   801,   342,   343,     0,   344,   345,   346,
     347,   348,   802,     0,   349,   350,     0,     0,     0,   803,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   804,
     357,   805,     0,   359,     0,   360,     0,   806,     0,   361,
     362,     0,   363,   807,     0,   364,   365,     0,     0,     0,
     808,   367,   368,   369,   809,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,   810,   374,   375,   376,   811,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,   812,   387,   388,     0,     0,
       0,     0,     0,   813,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,   814,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,   815,   416,   417,   418,   419,   816,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   817,   427,
       0,     0,   818,   429,   819,   430,     0,   431,   820,   821,
     822,   823,   824,   436,   437,   438,   439,   440,     0,   825,
     441,   442,     0,     0,   443,   444,   445,   446,   447,   826,
     827,   828,   448,   449,     0,   829,   830,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
     831,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   832,   833,   471,   834,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     835,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,   836,   837,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   838,     0,
     839,   515,   516,   517,   518,     0,   519,   840,   841,   521,
     522,   523,   524,     0,   842,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,   843,   844,   555,
     556,     0,     0,   557,   558,   845,   560,   561,   562,   846,
     847,   563,   564,   565,   566,   848,   567,   568,     0,     0,
     569,   570,   571,   572,     0,   849,   573,   574,     0,   850,
     851,   852,   853,     0,     0,     0,     0,     0,   579,   580,
       0,   854,   855,   856,   582,   583,     0,   857,   584,   585,
     858,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   859,   594,     0,     0,   860,
     861,   862,   595,   863,   596,     0,     0,   597,   864,     0,
     865,   598,     0,   599,   600,   866,   867,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   868,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,   869,   870,
       0,   617,   618,   619,   871,   620,   621,   622,     0,   623,
     872,   873,   624,   874,   625,     0,   875,   876,   877,   878,
     879,   626,   627,     0,   880,   628,   881,   629,   882,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   883,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   884,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
       0,   724,   725,   726,   727,   728,   729,   730,     0,     0,
       0,     0,     0,     0,   885,   886,   887,     0,     0,     0,
     888,     0,   889,     0,     0,     0,   890,     0,     0,     0,
     891,   892,   244,   245,     0,   773,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     774,     0,   254,   255,   256,   257,   775,   259,     0,   260,
       0,     0,   776,   261,   777,   778,   779,   262,   780,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,   781,   782,   270,   271,     0,   272,   273,   783,   784,
     275,     0,   276,   277,   278,   279,   785,   281,     0,   786,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,   787,   788,   302,     0,     0,     0,   789,
     303,   790,     0,   304,   791,   792,     0,   305,   306,   307,
     793,   794,   795,     0,     0,     0,     0,   796,   310,   797,
       0,     0,   798,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   799,     0,
     337,   338,   339,   340,   341,   800,   801,   342,   343,     0,
     344,   345,   346,   347,   348,   802,     0,   349,   350,     0,
       0,     0,   803,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   804,   357,   805,     0,   359,     0,   360,     0,
     806,     0,   361,   362,     0,   363,   807,     0,   364,   365,
       0,     0,     0,   808,   367,   368,   369,   809,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,   810,   374,
     375,   376,   811,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,   812,   387,
     388,     0,     0,     0,     0,     0,   813,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,   814,     0,     0,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,   815,   416,   417,   418,   419,
     816,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   817,   427,     0,     0,   818,   429,   819,   430,     0,
     431,   820,   821,   822,   823,   824,   436,   437,   438,   439,
     440,     0,   825,   441,   442,     0,     0,   443,   444,   445,
     446,   447,   826,   827,   828,   448,   449,     0,   829,   830,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,   831,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   832,   833,   471,   834,   472,
       0,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   835,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,   498,
     499,   836,   837,   500,   501,   502,   503,   504,   505,   506,
     507,     0,   508,     0,   509,   510,     0,   511,   512,   513,
       0,   838,     0,   839,   515,   516,   517,   518,     0,   519,
     840,   841,   521,   522,   523,   524,     0,   842,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,   532,     0,   533,   534,   535,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,   551,   552,   553,   554,
     843,   844,   555,   556,     0,     0,   557,   558,   845,   560,
     561,   562,   846,   847,   563,   564,   565,   566,   848,   567,
     568,     0,     0,   569,   570,   571,   572,     0,   849,   573,
     574,     0,   850,   851,   852,   853,     0,     0,     0,     0,
       0,   579,   580,     0,   854,   855,   856,   582,   583,     0,
     857,   584,   585,   858,   586,   587,     0,   588,   589,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   859,   594,
       0,     0,   860,   861,   862,   595,   863,   596,     0,     0,
     597,   864,     0,   865,   598,     0,   599,   600,   866,   867,
       0,     0,     0,     0,     0,     0,   603,   604,   605,     0,
     606,   607,   608,   609,     0,     0,   868,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,   869,   870,     0,   617,   618,   619,   871,   620,   621,
     622,     0,   623,   872,   873,   624,   874,   625,     0,   875,
     876,   877,   878,   879,   626,   627,     0,   880,   628,   881,
     629,   882,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   883,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     884,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,     0,   724,   725,   726,   727,   728,   729,
     730,     0,     0,     0,     0,     0,     0,   885,   886,  2816,
       0,     0,     0,   888,     0,   889,     0,     0,     0,   890,
       0,     0,     0,   891,   892,   244,   245,     0,   773,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   774,     0,   254,   255,   256,   257,   775,
     259,     0,   260,     0,     0,   776,   261,   777,   778,   779,
     262,   780,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,   781,   782,   270,   271,     0,   272,
     273,   783,   784,   275,     0,   276,   277,   278,   279,   785,
     281,     0,   786,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,   787,   788,   302,     0,
       0,     0,   789,   303,   790,     0,   304,   791,   792,     0,
     305,   306,   307,   793,   794,   795,     0,     0,     0,     0,
     796,   310,   797,     0,     0,   798,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   799,     0,   337,   338,   339,   340,   341,   800,   801,
     342,   343,     0,   344,   345,   346,   347,   348,   802,     0,
     349,   350,     0,     0,     0,   803,   352,  2872,   353,     0,
       0,     0,   354,     0,   355,   804,   357,   805,     0,   359,
       0,   360,     0,   806,     0,   361,   362,     0,   363,   807,
       0,   364,   365,     0,     0,     0,   808,   367,   368,   369,
     809,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,   810,   374,   375,   376,   811,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,   812,   387,   388,     0,     0,     0,     0,     0,   813,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
     814,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,   815,   416,
     417,   418,   419,   816,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   817,   427,     0,     0,   818,   429,
     819,   430,     0,   431,   820,   821,   822,   823,   824,   436,
     437,   438,   439,   440,     0,   825,   441,   442,     0,     0,
     443,   444,   445,   446,   447,   826,   827,   828,   448,   449,
       0,   829,   830,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,   831,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   832,   833,
     471,   834,   472,     0,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   835,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,   498,   499,   836,   837,   500,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   838,     0,   839,   515,   516,   517,
     518,     0,   519,   840,   841,   521,   522,   523,   524,     0,
     842,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,   532,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,   843,   844,   555,   556,     0,     0,   557,
     558,   845,   560,   561,   562,   846,   847,   563,   564,   565,
     566,   848,   567,   568,     0,     0,   569,   570,   571,   572,
       0,   849,   573,   574,     0,   850,   851,   852,   853,     0,
       0,     0,     0,     0,   579,   580,     0,   854,   855,   856,
     582,   583,     0,   857,   584,   585,   858,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   859,   594,     0,     0,   860,   861,   862,   595,   863,
     596,     0,     0,   597,   864,     0,   865,   598,     0,   599,
     600,   866,   867,     0,     0,     0,     0,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   868,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,   869,   870,     0,   617,   618,   619,
     871,   620,   621,   622,     0,   623,   872,   873,   624,   874,
     625,     0,   875,   876,   877,   878,   879,   626,   627,     0,
     880,   628,   881,   629,   882,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,   639,     0,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   883,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   884,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,     0,   724,   725,   726,
     727,   728,   729,   730,     0,     0,     0,     0,     0,     0,
     885,   886,     0,     0,     0,     0,   888,     0,   889,     0,
       0,     0,   890,     0,     0,     0,   891,   892,   244,   245,
       0,   773,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   774,     0,   254,   255,
     256,   257,   775,   259,     0,   260,     0,     0,   776,   261,
     777,   778,   779,   262,   780,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,   781,   782,   270,
     271,     0,   272,   273,   783,   784,   275,     0,   276,   277,
     278,   279,   785,   281,     0,   786,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,   787,
     788,   302,     0,     0,     0,   789,   303,   790,     0,   304,
     791,   792,     0,   305,   306,   307,   793,   794,   795,     0,
       0,     0,     0,   796,   310,   797,     0,     0,   798,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   799,     0,   337,   338,   339,   340,
     341,   800,   801,   342,   343,     0,   344,   345,   346,   347,
     348,   802,     0,   349,   350,     0,     0,     0,   803,   352,
    2874,   353,     0,     0,     0,   354,     0,   355,   804,   357,
     805,     0,   359,     0,   360,     0,   806,     0,   361,   362,
       0,   363,   807,     0,   364,   365,     0,     0,     0,   808,
     367,   368,   369,   809,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,   810,   374,   375,   376,   811,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,   812,   387,   388,     0,     0,     0,
       0,     0,   813,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,   814,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,   815,   416,   417,   418,   419,   816,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   817,   427,     0,
       0,   818,   429,   819,   430,     0,   431,   820,   821,   822,
     823,   824,   436,   437,   438,   439,   440,     0,   825,   441,
     442,     0,     0,   443,   444,   445,   446,   447,   826,   827,
     828,   448,   449,     0,   829,   830,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,   831,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   832,   833,   471,   834,   472,     0,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   835,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,   498,   499,   836,   837,   500,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   838,     0,   839,
     515,   516,   517,   518,     0,   519,   840,   841,   521,   522,
     523,   524,     0,   842,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,   532,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,   843,   844,   555,   556,
       0,     0,   557,   558,   845,   560,   561,   562,   846,   847,
     563,   564,   565,   566,   848,   567,   568,     0,     0,   569,
     570,   571,   572,     0,   849,   573,   574,     0,   850,   851,
     852,   853,     0,     0,     0,     0,     0,   579,   580,     0,
     854,   855,   856,   582,   583,     0,   857,   584,   585,   858,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   859,   594,     0,     0,   860,   861,
     862,   595,   863,   596,     0,     0,   597,   864,     0,   865,
     598,     0,   599,   600,   866,   867,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   868,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,   869,   870,     0,
     617,   618,   619,   871,   620,   621,   622,     0,   623,   872,
     873,   624,   874,   625,     0,   875,   876,   877,   878,   879,
     626,   627,     0,   880,   628,   881,   629,   882,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   883,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   884,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,     0,
     724,   725,   726,   727,   728,   729,   730,     0,     0,     0,
       0,     0,     0,   885,   886,     0,     0,     0,     0,   888,
       0,   889,     0,     0,     0,   890,     0,     0,     0,   891,
     892,   244,   245,     0,   773,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   774,
       0,   254,   255,   256,   257,   775,   259,     0,   260,     0,
       0,   776,   261,   777,   778,   779,   262,   780,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
     781,   782,   270,   271,     0,   272,   273,   783,   784,   275,
       0,   276,   277,   278,   279,   785,   281,     0,   786,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,   787,   788,   302,     0,     0,     0,   789,   303,
     790,     0,   304,   791,   792,     0,   305,   306,   307,   793,
     794,   795,     0,     0,     0,     0,   796,   310,   797,     0,
       0,   798,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   799,     0,   337,
     338,   339,   340,   341,   800,   801,   342,   343,     0,   344,
     345,   346,   347,   348,   802,     0,   349,   350,     0,     0,
       0,   803,   352,  2876,   353,     0,     0,     0,   354,     0,
     355,   804,   357,   805,     0,   359,     0,   360,     0,   806,
       0,   361,   362,     0,   363,   807,     0,   364,   365,     0,
       0,     0,   808,   367,   368,   369,   809,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,   810,   374,   375,
     376,   811,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,   812,   387,   388,
       0,     0,     0,     0,     0,   813,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,   814,     0,     0,     0,
       0,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
       0,   413,   414,   415,   815,   416,   417,   418,   419,   816,
     420,   421,     0,     0,     0,     0,   422,   423,   424,   425,
     817,   427,     0,     0,   818,   429,   819,   430,     0,   431,
     820,   821,   822,   823,   824,   436,   437,   438,   439,   440,
       0,   825,   441,   442,     0,     0,   443,   444,   445,   446,
     447,   826,   827,   828,   448,   449,     0,   829,   830,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   457,
     458,   459,   831,   460,     0,   461,     0,   462,   463,   464,
     465,   466,   467,   468,   832,   833,   471,   834,   472,     0,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   835,   483,   484,     0,     0,   485,     0,     0,
       0,   486,   487,     0,   488,   489,     0,     0,   490,   491,
     492,   493,   494,     0,   495,   496,     0,   497,   498,   499,
     836,   837,   500,   501,   502,   503,   504,   505,   506,   507,
       0,   508,     0,   509,   510,     0,   511,   512,   513,     0,
     838,     0,   839,   515,   516,   517,   518,     0,   519,   840,
     841,   521,   522,   523,   524,     0,   842,   526,     0,     0,
       0,   527,   528,   529,   530,     0,     0,     0,   531,     0,
       0,     0,   532,     0,   533,   534,   535,   536,     0,   537,
     538,   539,   540,   541,     0,     0,     0,     0,     0,   542,
     543,   544,     0,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,   551,   552,   553,   554,   843,
     844,   555,   556,     0,     0,   557,   558,   845,   560,   561,
     562,   846,   847,   563,   564,   565,   566,   848,   567,   568,
       0,     0,   569,   570,   571,   572,     0,   849,   573,   574,
       0,   850,   851,   852,   853,     0,     0,     0,     0,     0,
     579,   580,     0,   854,   855,   856,   582,   583,     0,   857,
     584,   585,   858,   586,   587,     0,   588,   589,     0,     0,
     590,     0,     0,   591,     0,   592,     0,   859,   594,     0,
       0,   860,   861,   862,   595,   863,   596,     0,     0,   597,
     864,     0,   865,   598,     0,   599,   600,   866,   867,     0,
       0,     0,     0,     0,     0,   603,   604,   605,     0,   606,
     607,   608,   609,     0,     0,   868,     0,     0,   611,   612,
     613,   614,   615,     0,   616,     0,     0,     0,     0,     0,
     869,   870,     0,   617,   618,   619,   871,   620,   621,   622,
       0,   623,   872,   873,   624,   874,   625,     0,   875,   876,
     877,   878,   879,   626,   627,     0,   880,   628,   881,   629,
     882,   630,   631,     0,     0,     0,   632,   633,   634,   635,
     636,   637,   638,   639,     0,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,     0,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
       0,   883,   675,   676,   677,   678,   679,   680,     0,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   884,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,     0,   724,   725,   726,   727,   728,   729,   730,
       0,     0,     0,     0,     0,     0,   885,   886,     0,     0,
       0,     0,   888,     0,   889,     0,     0,     0,   890,     0,
       0,     0,   891,   892,   244,   245,     0,   773,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   774,     0,   254,   255,   256,   257,   775,   259,
       0,   260,     0,     0,   776,   261,   777,   778,   779,   262,
     780,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,   781,   782,   270,   271,     0,   272,   273,
     783,   784,   275,     0,   276,   277,   278,   279,   785,   281,
       0,   786,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,   787,   788,   302,     0,     0,
       0,   789,   303,   790,     0,   304,   791,   792,     0,   305,
     306,   307,   793,   794,   795,     0,     0,     0,     0,   796,
     310,   797,     0,     0,   798,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     799,     0,   337,   338,   339,   340,   341,   800,   801,   342,
     343,     0,   344,   345,   346,   347,   348,   802,     0,   349,
     350,     0,     0,     0,   803,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   804,   357,   805,     0,   359,     0,
     360,     0,   806,     0,   361,   362,     0,   363,   807,     0,
     364,   365,     0,     0,     0,   808,   367,   368,   369,   809,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
     810,   374,   375,   376,   811,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
     812,   387,   388,     0,     0,     0,     0,     0,   813,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,   814,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,   815,   416,   417,
     418,   419,   816,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   817,   427,     0,     0,   818,   429,   819,
     430,     0,   431,   820,   821,   822,   823,   824,   436,   437,
     438,   439,   440,     0,   825,   441,   442,     0,     0,   443,
     444,   445,   446,   447,   826,   827,   828,   448,   449,     0,
     829,   830,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,   831,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   832,   833,   471,
     834,   472,     0,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   835,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,   498,   499,   836,   837,   500,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   838,     0,   839,   515,   516,   517,   518,
       0,   519,   840,   841,   521,   522,   523,   524,     0,   842,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,   532,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,   843,   844,   555,   556,     0,     0,   557,   558,
     845,   560,   561,   562,   846,   847,   563,   564,   565,   566,
     848,   567,   568,     0,     0,   569,   570,   571,   572,     0,
     849,   573,   574,     0,   850,   851,   852,   853,     0,     0,
       0,     0,     0,   579,   580,     0,   854,   855,   856,   582,
     583,     0,   857,   584,   585,   858,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     859,   594,     0,     0,   860,   861,   862,   595,   863,   596,
       0,     0,   597,   864,     0,   865,   598,     0,   599,   600,
     866,   867,     0,     0,     0,     0,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   868,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,   869,   870,     0,   617,   618,   619,   871,
     620,   621,   622,     0,   623,   872,   873,   624,   874,   625,
       0,   875,   876,   877,   878,   879,   626,   627,     0,   880,
     628,   881,   629,   882,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   883,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   884,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,     0,   724,   725,   726,   727,
     728,   729,   730,     0,     0,     0,     0,     0,     0,   885,
     886,     0,     0,     0,     0,   888,     0,   889,     0,     0,
       0,   890,     0,     0,     0,   891,   892,   244,   245,     0,
     773,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   774,     0,   254,   255,   256,
     257,   775,   259,     0,   260,     0,     0,   776,   261,   777,
     778,   779,   262,   780,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,   781,   782,   270,   271,
       0,   272,   273,   783,   784,   275,     0,   276,   277,   278,
     279,   785,   281,     0,   786,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,   787,   788,
     302,     0,     0,     0,   789,   303,   790,     0,   304,   791,
     792,     0,   305,   306,   307,   793,   794,   795,     0,     0,
       0,     0,   796,   310,   797,     0,     0,   798,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   799,     0,   337,   338,   339,   340,   341,
     800,   801,   342,   343,     0,   344,   345,   346,   347,   348,
     802,     0,   349,   350,     0,     0,     0,   803,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   804,   357,   805,
       0,   359,     0,   360,     0,   806,     0,   361,   362,     0,
     363,   807,     0,   364,   365,     0,     0,     0,   808,   367,
     368,   369,   809,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,   810,   374,   375,   376,   811,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,   812,   387,   388,     0,     0,     0,     0,
       0,   813,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,   814,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
     815,   416,   417,   418,   419,   816,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   817,   427,     0,     0,
     818,   429,   819,   430,     0,   431,   820,   821,   822,   823,
     824,   436,   437,   438,   439,   440,     0,   825,   441,   442,
       0,     0,   443,   444,   445,   446,   447,   826,   827,   828,
     448,   449,     0,   829,   830,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,   831,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     832,   833,   471,   834,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   835,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,   836,   837,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   838,     0,   839,   515,
     516,   517,   518,     0,   519,   840,   841,   521,   522,   523,
     524,     0,   842,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,   843,   844,   555,   556,     0,
       0,   557,   558,   845,   560,   561,   562,   846,   847,   563,
     564,   565,   566,   848,   567,   568,     0,     0,   569,   570,
     571,   572,     0,   849,   573,   574,     0,   850,   851,   852,
     853,     0,     0,     0,     0,     0,   579,   580,     0,   854,
     855,   856,   582,   583,     0,   857,   584,   585,   858,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   859,   594,     0,     0,   860,   861,   862,
     595,   863,   596,     0,     0,   597,   864,     0,   865,   598,
       0,   599,   600,   866,   867,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   868,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,   869,   870,     0,   617,
     618,   619,   871,   620,   621,   622,     0,   623,   872,   873,
     624,   874,   625,     0,   875,   876,   877,   878,   879,   626,
     627,     0,   880,   628,   881,   629,   882,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   883,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   884,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,     0,     0,     0,     0,
       0,     0,   885,   886,     0,     0,     0,     0,   888,     0,
    1307,     0,     0,     0,   890,     0,     0,     0,   891,   892,
     244,   245,     0,   773,   247,   248,   249,   250,  2136,     0,
     251,     0,     0,     0,     0,  2137,     0,     0,   774,     0,
     254,   255,   256,   257,   775,   259,     0,   260,     0,     0,
     776,   261,   777,   778,   779,   262,   780,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,   781,
     782,   270,   271,     0,   272,   273,   783,   784,   275,     0,
     276,   277,   278,   279,   785,   281,     0,   786,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,   787,   788,   302,     0,     0,     0,   789,   303,   790,
       0,   304,   791,   792,     0,   305,   306,   307,   793,   794,
     795,     0,     0,     0,     0,   796,   310,   797,     0,     0,
     798,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   799,     0,   337,   338,
     339,   340,   341,   800,   801,   342,   343,     0,   344,   345,
     346,   347,   348,   802,     0,   349,   350,     0,     0,     0,
     803,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     804,   357,   805,     0,   359,     0,   360,     0,   806,     0,
     361,   362,     0,   363,   807,     0,   364,   365,     0,     0,
       0,   808,   367,   368,   369,   809,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,   810,   374,   375,   376,
     811,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,   812,   387,   388,     0,
       0,     0,     0,     0,   813,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,   814,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,   815,   416,   417,   418,   419,   816,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   817,
     427,     0,     0,   818,   429,   819,   430,     0,   431,   820,
     821,   822,   823,   824,   436,   437,   438,   439,   440,     0,
     825,   441,   442,     0,     0,   443,   444,   445,   446,   447,
     826,     0,   828,   448,   449,     0,   829,   830,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,   831,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   832,   833,   471,   834,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   835,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,   836,
     837,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   838,
       0,   839,   515,   516,   517,   518,     0,   519,   840,   841,
     521,   522,   523,   524,     0,   842,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,   843,   844,
     555,   556,     0,     0,   557,   558,   845,   560,   561,   562,
     846,   847,   563,   564,   565,   566,   848,   567,   568,     0,
       0,   569,   570,   571,   572,     0,   849,   573,   574,     0,
     850,   851,   852,   853,     0,     0,     0,     0,     0,   579,
     580,     0,   854,   855,   856,   582,   583,     0,   857,   584,
     585,   858,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   859,   594,     0,     0,
     860,   861,   862,   595,   863,   596,     0,     0,   597,   864,
       0,   865,   598,     0,   599,   600,   866,   867,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   868,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,   869,
     870,     0,   617,   618,   619,   871,   620,   621,   622,     0,
     623,   872,   873,   624,   874,   625,     0,   875,   876,   877,
     878,   879,   626,   627,     0,   880,   628,   881,   629,   882,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     883,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   884,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,     0,   724,   725,   726,   727,   728,   729,   730,     0,
       0,     0,     0,     0,     0,   885,   886,     0,     0,     0,
       0,   888,     0,   889,     0,     0,     0,   890,     0,     0,
       0,   891,   892,   244,   245,     0,   773,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   774,     0,   254,   255,   256,   257,   775,   259,     0,
     260,     0,     0,   776,   261,   777,   778,   779,   262,   780,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,   781,   782,   270,   271,     0,   272,   273,   783,
     784,   275,     0,   276,   277,   278,   279,   785,   281,     0,
     786,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,   787,   788,   302,     0,     0,     0,
     789,   303,   790,     0,   304,   791,   792,     0,   305,   306,
     307,   793,   794,   795,     0,     0,     0,     0,   796,   310,
     797,     0,     0,  2402,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   799,
       0,   337,   338,   339,   340,   341,   800,   801,   342,   343,
       0,   344,   345,   346,   347,   348,   802,     0,   349,   350,
       0,     0,     0,   803,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   804,   357,   805,     0,   359,     0,   360,
       0,   806,     0,   361,   362,     0,   363,   807,     0,   364,
     365,     0,     0,     0,   808,   367,   368,   369,   809,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,   810,
     374,   375,   376,   811,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,   812,
     387,   388,     0,     0,     0,     0,     0,   813,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,   814,     0,
       0,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,   815,   416,   417,   418,
     419,   816,   420,   421,     0,     0,     0,     0,   422,   423,
     424,   425,   817,   427,     0,     0,   818,   429,   819,   430,
       0,   431,   820,   821,   822,   823,   824,   436,   437,   438,
     439,   440,     0,   825,   441,   442,     0,     0,   443,   444,
     445,   446,   447,   826,   827,   828,   448,   449,     0,   829,
     830,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,   831,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   832,   833,   471,   834,
     472,     0,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   835,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,     0,     0,
     490,   491,   492,   493,   494,     0,   495,   496,     0,   497,
     498,   499,   836,   837,   500,   501,   502,   503,   504,   505,
     506,   507,     0,   508,     0,   509,   510,     0,   511,   512,
     513,     0,   838,     0,   839,   515,   516,   517,   518,     0,
     519,   840,   841,   521,   522,   523,   524,     0,   842,   526,
       0,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,     0,   532,     0,   533,   534,   535,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,     0,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,   551,   552,   553,
     554,   843,   844,   555,   556,     0,     0,   557,   558,   845,
     560,   561,   562,   846,   847,   563,   564,   565,   566,   848,
     567,   568,     0,     0,   569,   570,   571,   572,     0,   849,
     573,   574,     0,   850,   851,   852,   853,     0,     0,     0,
       0,     0,   579,   580,     0,   854,   855,   856,   582,   583,
       0,   857,   584,   585,   858,   586,   587,     0,   588,   589,
       0,     0,   590,     0,     0,   591,     0,   592,     0,   859,
     594,     0,     0,   860,   861,   862,   595,   863,   596,     0,
       0,   597,   864,     0,   865,   598,     0,   599,   600,   866,
     867,     0,     0,     0,     0,     0,     0,   603,   604,   605,
       0,   606,   607,   608,   609,     0,     0,   868,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,   869,   870,     0,   617,   618,   619,   871,   620,
     621,   622,     0,   623,   872,   873,   624,   874,   625,     0,
     875,   876,   877,   878,   879,   626,   627,     0,   880,   628,
     881,   629,   882,   630,   631,     0,     0,     0,   632,   633,
     634,   635,   636,   637,   638,   639,     0,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,     0,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,     0,   883,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   884,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,     0,   724,   725,   726,   727,   728,
     729,   730,     0,     0,     0,     0,     0,     0,   885,   886,
       0,     0,     0,     0,   888,     0,   889,     0,     0,     0,
     890,     0,     0,     0,   891,   892,   244,   245,     0,   773,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   774,     0,   254,   255,   256,   257,
     775,   259,     0,   260,     0,     0,   776,   261,   777,   778,
     779,   262,   780,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,   781,   782,   270,   271,     0,
     272,   273,   783,   784,   275,     0,   276,   277,   278,   279,
     785,   281,     0,   786,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,   787,   788,   302,
       0,     0,     0,   789,   303,   790,     0,   304,   791,   792,
       0,   305,   306,   307,   793,   794,   795,     0,     0,     0,
       0,   796,   310,   797,     0,     0,   798,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   799,     0,   337,   338,   339,   340,   341,   800,
     801,   342,   343,     0,   344,   345,   346,   347,   348,   802,
       0,   349,   350,     0,     0,     0,   803,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   804,   357,   805,     0,
     359,     0,   360,     0,   806,     0,   361,   362,     0,   363,
     807,     0,   364,   365,     0,     0,     0,   808,   367,   368,
     369,   809,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,   810,   374,   375,   376,  3517,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,   812,   387,   388,     0,     0,     0,     0,     0,
     813,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,   814,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,   815,
     416,   417,   418,   419,   816,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   817,   427,     0,     0,   818,
     429,   819,   430,     0,   431,   820,   821,   822,   823,   824,
     436,   437,   438,   439,   440,     0,   825,   441,   442,     0,
       0,   443,   444,   445,   446,   447,   826,   827,   828,   448,
     449,     0,   829,   830,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,   831,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   832,
     833,   471,   834,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   835,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,   836,   837,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   838,     0,   839,   515,   516,
     517,   518,     0,   519,   840,   841,   521,   522,   523,   524,
       0,   842,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,   843,   844,   555,   556,     0,     0,
     557,   558,   845,   560,   561,   562,   846,   847,   563,   564,
     565,   566,   848,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   849,   573,   574,     0,   850,   851,   852,   853,
       0,     0,     0,     0,     0,   579,   580,     0,   854,   855,
     856,   582,   583,     0,   857,   584,   585,   858,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   859,   594,     0,     0,   860,   861,   862,   595,
     863,   596,     0,     0,   597,   864,     0,   865,   598,     0,
     599,   600,   866,   867,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     868,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,   869,   870,     0,   617,   618,
     619,   871,   620,   621,   622,     0,   623,   872,   873,   624,
     874,   625,     0,   875,   876,   877,   878,   879,   626,   627,
       0,   880,   628,   881,   629,   882,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   883,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   884,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,     0,   724,   725,
     726,   727,   728,   729,   730,     0,     0,     0,     0,     0,
       0,   885,   886,     0,     0,     0,     0,   888,     0,   889,
       0,     0,     0,   890,     0,     0,     0,   891,   892,   244,
     245,     0,   773,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   774,     0,   254,
     255,   256,   257,   775,   259,     0,   260,     0,     0,   776,
     261,   777,   778,   779,   262,   780,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,   781,   782,
     270,   271,     0,   272,   273,   783,   784,   275,     0,   276,
     277,   278,   279,   785,   281,     0,   786,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
     787,   788,   302,     0,     0,     0,   789,   303,   790,     0,
     304,   791,   792,     0,   305,   306,   307,   793,   794,   795,
       0,     0,     0,     0,   796,   310,   797,     0,     0,   798,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   799,     0,   337,   338,   339,
     340,   341,   800,   801,   342,   343,     0,   344,   345,   346,
     347,   348,   802,     0,   349,   350,     0,     0,     0,   803,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   804,
     357,   805,     0,   359,     0,   360,     0,   806,     0,   361,
     362,     0,   363,   807,     0,   364,   365,     0,     0,     0,
     808,   367,   368,   369,   809,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,   810,   374,   375,   376,  3588,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,   812,   387,   388,     0,     0,
       0,     0,     0,   813,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,   814,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,   815,   416,   417,   418,   419,   816,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   817,   427,
       0,     0,   818,   429,   819,   430,     0,   431,   820,   821,
     822,   823,   824,   436,   437,   438,   439,   440,     0,   825,
     441,   442,     0,     0,   443,   444,   445,   446,   447,   826,
     827,   828,   448,   449,     0,   829,   830,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
     831,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   832,   833,   471,   834,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     835,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,   836,   837,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   838,     0,
     839,   515,   516,   517,   518,     0,   519,   840,   841,   521,
     522,   523,   524,     0,   842,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,   843,   844,   555,
     556,     0,     0,   557,   558,   845,   560,   561,   562,   846,
     847,   563,   564,   565,   566,   848,   567,   568,     0,     0,
     569,   570,   571,   572,     0,   849,   573,   574,     0,   850,
     851,   852,   853,     0,     0,     0,     0,     0,   579,   580,
       0,   854,   855,   856,   582,   583,     0,   857,   584,   585,
     858,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   859,   594,     0,     0,   860,
     861,   862,   595,   863,   596,     0,     0,   597,   864,     0,
     865,   598,     0,   599,   600,   866,   867,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   868,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,   869,   870,
       0,   617,   618,   619,   871,   620,   621,   622,     0,   623,
     872,   873,   624,   874,   625,     0,   875,   876,   877,   878,
     879,   626,   627,     0,   880,   628,   881,   629,   882,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   883,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   884,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
       0,   724,   725,   726,   727,   728,   729,   730,     0,     0,
       0,     0,     0,     0,   885,   886,     0,     0,     0,     0,
     888,     0,   889,     0,     0,     0,   890,     0,     0,     0,
     891,   892,   244,   245,     0,   773,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     774,     0,   254,   255,   256,   257,   775,   259,     0,   260,
       0,     0,   776,   261,   777,   778,   779,   262,   780,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,   781,   782,   270,   271,     0,   272,   273,   783,   784,
     275,     0,   276,   277,   278,   279,   785,   281,     0,   786,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,   787,   788,   302,     0,     0,     0,   789,
     303,   790,     0,   304,   791,   792,     0,   305,   306,   307,
     793,   794,   795,     0,     0,     0,     0,   796,   310,   797,
       0,     0,   798,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   799,     0,
     337,   338,   339,   340,   341,   800,   801,   342,   343,     0,
     344,   345,   346,   347,   348,   802,     0,   349,   350,     0,
       0,     0,   803,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   804,   357,   805,     0,   359,     0,   360,     0,
     806,     0,   361,   362,     0,   363,   807,     0,   364,   365,
       0,     0,     0,   808,   367,   368,   369,   809,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,   810,   374,
     375,   376,   811,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,   812,   387,
     388,     0,     0,     0,     0,     0,   813,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,   814,     0,     0,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,   815,   416,   417,   418,   419,
     816,   420,   421,  5401,     0,     0,     0,   422,   423,   424,
     425,   817,   427,     0,     0,   818,   429,   819,   430,     0,
     431,   820,   821,   822,   823,   824,   436,   437,   438,   439,
     440,     0,   825,   441,   442,     0,     0,   443,   444,   445,
     446,   447,   826,     0,   828,   448,   449,     0,   829,   830,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,   831,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   832,   833,   471,   834,   472,
       0,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   835,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,   498,
     499,   836,   837,   500,   501,   502,   503,   504,   505,   506,
     507,     0,   508,     0,   509,   510,     0,   511,   512,   513,
       0,   838,     0,   839,   515,   516,   517,   518,     0,   519,
     840,   841,   521,   522,   523,   524,     0,   842,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,   532,     0,   533,   534,   535,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,   551,   552,   553,   554,
     843,   844,   555,   556,     0,     0,   557,   558,   845,   560,
     561,   562,   846,   847,   563,   564,   565,   566,   848,   567,
     568,     0,     0,   569,   570,   571,   572,     0,   849,   573,
     574,     0,   850,   851,   852,   853,     0,     0,     0,     0,
       0,   579,   580,     0,   854,   855,   856,   582,   583,     0,
     857,   584,   585,   858,   586,   587,     0,   588,   589,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   859,   594,
       0,     0,   860,   861,   862,   595,   863,   596,     0,     0,
     597,   864,     0,   865,   598,     0,   599,   600,   866,   867,
       0,     0,     0,     0,     0,     0,   603,   604,   605,     0,
     606,   607,   608,   609,     0,     0,   868,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,   869,   870,     0,   617,   618,   619,   871,   620,   621,
     622,     0,   623,   872,   873,   624,   874,   625,     0,   875,
     876,   877,   878,   879,   626,   627,     0,   880,   628,   881,
     629,   882,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   883,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     884,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,     0,   724,   725,   726,   727,   728,   729,
     730,     0,     0,     0,     0,     0,     0,   885,   886,     0,
       0,     0,     0,   888,     0,   889,     0,     0,     0,   890,
       0,     0,     0,   891,   892,   244,   245,     0,   773,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   774,     0,   254,   255,   256,   257,   775,
     259,     0,   260,     0,     0,   776,   261,   777,   778,   779,
     262,   780,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,   781,   782,   270,   271,     0,   272,
     273,   783,   784,   275,     0,   276,   277,   278,   279,   785,
     281,     0,   786,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,   787,   788,   302,     0,
       0,     0,   789,   303,   790,     0,   304,   791,   792,     0,
     305,   306,   307,   793,   794,   795,     0,     0,     0,     0,
     796,   310,   797,     0,     0,   798,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   799,     0,   337,   338,   339,   340,   341,   800,   801,
     342,   343,     0,   344,   345,   346,   347,   348,   802,     0,
     349,   350,     0,     0,     0,   803,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   804,   357,   805,     0,   359,
       0,   360,     0,   806,     0,   361,   362,     0,   363,   807,
       0,   364,   365,     0,     0,     0,   808,   367,   368,   369,
     809,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,   810,   374,   375,   376,   811,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,   812,   387,   388,     0,     0,     0,     0,     0,   813,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
     814,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,   815,   416,
     417,   418,   419,   816,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   817,   427,     0,     0,   818,   429,
     819,   430,     0,   431,   820,   821,   822,   823,   824,   436,
     437,   438,   439,   440,     0,   825,   441,   442,     0,     0,
     443,   444,   445,   446,   447,   826,     0,   828,   448,   449,
       0,   829,   830,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,   831,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   832,   833,
     471,   834,   472,     0,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   835,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,   498,   499,   836,   837,   500,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   838,     0,   839,   515,   516,   517,
     518,     0,   519,   840,   841,   521,   522,   523,   524,     0,
     842,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,   532,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,   843,   844,   555,   556,     0,     0,   557,
     558,   845,   560,   561,   562,   846,   847,   563,   564,   565,
     566,   848,   567,   568,     0,     0,   569,   570,   571,   572,
       0,   849,   573,   574,     0,   850,   851,   852,   853,     0,
       0,     0,     0,     0,   579,   580,     0,   854,   855,   856,
     582,   583,     0,   857,   584,   585,   858,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   859,   594,     0,     0,   860,   861,   862,   595,   863,
     596,     0,     0,   597,   864,     0,   865,   598,     0,   599,
     600,   866,   867,     0,     0,     0,     0,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   868,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,   869,   870,     0,   617,   618,   619,
     871,   620,   621,   622,     0,   623,   872,   873,   624,   874,
     625,     0,   875,   876,   877,   878,   879,   626,   627,     0,
     880,   628,   881,   629,   882,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,   639,     0,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   883,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   884,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,     0,   724,   725,   726,
     727,   728,   729,   730,     0,     0,     0,     0,     0,     0,
     885,   886,     0,     0,     0,     0,   888,     0,   889,     0,
       0,     0,   890,     0,     0,     0,   891,   892,   244,   245,
       0,   773,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   774,     0,   254,   255,
     256,   257,   775,   259,     0,   260,     0,     0,   776,   261,
     777,   778,   779,   262,   780,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,   781,   782,   270,
     271,     0,   272,   273,   783,   784,   275,     0,   276,   277,
     278,   279,   785,   281,     0,   786,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,   787,
     788,   302,     0,     0,     0,   789,   303,   790,     0,   304,
     791,   792,     0,   305,   306,   307,   793,   794,   795,     0,
       0,     0,     0,   796,   310,   797,     0,     0,   798,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   799,     0,   337,   338,   339,   340,
     341,   800,   801,   342,   343,     0,   344,   345,   346,   347,
     348,   802,     0,   349,   350,     0,     0,     0,   803,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   804,   357,
     805,     0,   359,     0,   360,     0,   806,     0,   361,   362,
       0,   363,   807,     0,   364,   365,     0,     0,     0,   808,
     367,   368,   369,   809,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,   810,   374,   375,   376,  2154,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,   812,   387,   388,     0,     0,     0,
       0,     0,   813,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,   814,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,   815,   416,   417,   418,   419,   816,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   817,   427,     0,
       0,   818,   429,   819,   430,     0,   431,   820,   821,   822,
     823,   824,   436,   437,   438,   439,   440,     0,   825,   441,
     442,     0,     0,   443,   444,   445,   446,   447,   826,     0,
     828,   448,   449,     0,   829,   830,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,   831,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   832,   833,   471,   834,   472,     0,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   835,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,   498,   499,   836,   837,   500,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   838,     0,   839,
     515,   516,   517,   518,     0,   519,   840,   841,   521,   522,
     523,   524,     0,   842,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,   532,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,   843,   844,   555,   556,
       0,     0,   557,   558,   845,   560,   561,   562,   846,   847,
     563,   564,   565,   566,   848,   567,   568,     0,     0,   569,
     570,   571,   572,     0,   849,   573,   574,     0,   850,   851,
     852,   853,     0,     0,     0,     0,     0,   579,   580,     0,
     854,   855,   856,   582,   583,     0,   857,   584,   585,   858,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   859,   594,     0,     0,   860,   861,
     862,   595,   863,   596,     0,     0,   597,   864,     0,   865,
     598,     0,   599,   600,   866,   867,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   868,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,   869,   870,     0,
     617,   618,   619,   871,   620,   621,   622,     0,   623,   872,
     873,   624,   874,   625,     0,   875,   876,   877,   878,   879,
     626,   627,     0,   880,   628,   881,   629,   882,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   883,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   884,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,     0,
     724,   725,   726,   727,   728,   729,   730,     0,     0,     0,
       0,     0,     0,   885,   886,     0,     0,     0,     0,   888,
       0,   889,     0,     0,     0,   890,     0,     0,     0,   891,
     892,   244,   245,     0,   773,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   774,
       0,   254,   255,   256,   257,   775,   259,     0,   260,     0,
       0,   776,   261,   777,   778,   779,   262,   780,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
     781,   782,   270,   271,     0,   272,   273,   783,   784,   275,
       0,   276,   277,   278,   279,   785,   281,     0,   786,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,   787,   788,   302,     0,     0,     0,   789,   303,
     790,     0,   304,   791,   792,     0,   305,   306,   307,   793,
     794,   795,     0,     0,     0,     0,   796,   310,   797,     0,
       0,   798,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   799,     0,   337,
     338,   339,   340,   341,   800,   801,   342,   343,     0,   344,
     345,   346,   347,   348,   802,     0,   349,   350,     0,     0,
       0,   803,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   804,   357,   805,     0,   359,     0,   360,     0,   806,
       0,   361,   362,     0,   363,   807,     0,   364,   365,     0,
       0,     0,   808,   367,   368,   369,   809,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,   810,   374,   375,
     376,  2156,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,   812,   387,   388,
       0,     0,     0,     0,     0,   813,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,   814,     0,     0,     0,
       0,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
       0,   413,   414,   415,   815,   416,   417,   418,   419,   816,
     420,   421,     0,     0,     0,     0,   422,   423,   424,   425,
     817,   427,     0,     0,   818,   429,   819,   430,     0,   431,
     820,   821,   822,   823,   824,   436,   437,   438,   439,   440,
       0,   825,   441,   442,     0,     0,   443,   444,   445,   446,
     447,   826,     0,   828,   448,   449,     0,   829,   830,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   457,
     458,   459,   831,   460,     0,   461,     0,   462,   463,   464,
     465,   466,   467,   468,   832,   833,   471,   834,   472,     0,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   835,   483,   484,     0,     0,   485,     0,     0,
       0,   486,   487,     0,   488,   489,     0,     0,   490,   491,
     492,   493,   494,     0,   495,   496,     0,   497,   498,   499,
     836,   837,   500,   501,   502,   503,   504,   505,   506,   507,
       0,   508,     0,   509,   510,     0,   511,   512,   513,     0,
     838,     0,   839,   515,   516,   517,   518,     0,   519,   840,
     841,   521,   522,   523,   524,     0,   842,   526,     0,     0,
       0,   527,   528,   529,   530,     0,     0,     0,   531,     0,
       0,     0,   532,     0,   533,   534,   535,   536,     0,   537,
     538,   539,   540,   541,     0,     0,     0,     0,     0,   542,
     543,   544,     0,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,   551,   552,   553,   554,   843,
     844,   555,   556,     0,     0,   557,   558,   845,   560,   561,
     562,   846,   847,   563,   564,   565,   566,   848,   567,   568,
       0,     0,   569,   570,   571,   572,     0,   849,   573,   574,
       0,   850,   851,   852,   853,     0,     0,     0,     0,     0,
     579,   580,     0,   854,   855,   856,   582,   583,     0,   857,
     584,   585,   858,   586,   587,     0,   588,   589,     0,     0,
     590,     0,     0,   591,     0,   592,     0,   859,   594,     0,
       0,   860,   861,   862,   595,   863,   596,     0,     0,   597,
     864,     0,   865,   598,     0,   599,   600,   866,   867,     0,
       0,     0,     0,     0,     0,   603,   604,   605,     0,   606,
     607,   608,   609,     0,     0,   868,     0,     0,   611,   612,
     613,   614,   615,     0,   616,     0,     0,     0,     0,     0,
     869,   870,     0,   617,   618,   619,   871,   620,   621,   622,
       0,   623,   872,   873,   624,   874,   625,     0,   875,   876,
     877,   878,   879,   626,   627,     0,   880,   628,   881,   629,
     882,   630,   631,     0,     0,     0,   632,   633,   634,   635,
     636,   637,   638,   639,     0,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,     0,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
       0,   883,   675,   676,   677,   678,   679,   680,     0,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   884,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,     0,   724,   725,   726,   727,   728,   729,   730,
       0,     0,     0,     0,     0,     0,   885,   886,     0,     0,
       0,     0,   888,     0,   889,     0,     0,     0,   890,     0,
       0,     0,   891,   892,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,   448,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,   472,     0,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   514,     0,     0,   515,   516,   517,   518,
       0,   519,     0,   520,   521,   522,   523,   524,     0,   525,
     526,    42,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,   532,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,     0,     0,   555,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,    49,   569,   570,   571,   572,     0,
       0,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,   581,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,    54,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,     0,    55,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,   623,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,  3052,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,  3053,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,     0,   724,   725,   726,   727,
     728,   729,   730,  3054,     0,     0,     0,     0,     0,   244,
     245,     0,   246,   247,   248,   249,   250,  3055,     0,   251,
       0,     0,     0,     0,   252,     0,  3056,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,  3051,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,     0,   416,   417,   418,   419,     0,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   426,   427,
       0,     0,   428,   429,     0,   430,     0,   431,     0,   432,
     433,   434,   435,   436,   437,   438,   439,   440,     0,     0,
     441,   442,     0,     0,   443,   444,   445,   446,   447,     0,
       0,     0,   448,   449,     0,     0,     0,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
       0,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,     0,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     482,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   514,     0,
       0,   515,   516,   517,   518,     0,   519,     0,   520,   521,
     522,   523,   524,     0,   525,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,     0,     0,   555,
     556,     0,     0,   557,   558,   559,   560,   561,   562,     0,
       0,   563,   564,   565,   566,     0,   567,   568,     0,     0,
     569,   570,   571,   572,     0,     0,   573,   574,     0,   575,
     576,   577,   578,     0,     0,     0,     0,     0,   579,   580,
       0,     0,     0,   581,   582,   583,     0,     0,   584,   585,
       0,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   593,   594,     0,     0,     0,
       0,     0,   595,     0,   596,     0,     0,   597,     0,     0,
       0,   598,     0,   599,   600,   601,   602,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   610,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,     0,     0,
       0,   617,   618,   619,     0,   620,   621,   622,     0,   623,
       0,     0,   624,     0,   625,     0,     0,     0,     0,     0,
       0,   626,   627,     0,     0,   628,     0,   629,     0,   630,
     631,     0,     0,  3052,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,  3053,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   674,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
       0,   724,   725,   726,   727,   728,   729,   730,  3054,     0,
       0,     0,     0,     0,   244,   245,     0,   246,   247,   248,
     249,   250,  3055,     0,   251,     0,     0,     0,     0,   252,
       0,  3056,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,   448,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,   472,     0,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   514,     0,     0,   515,   516,   517,   518,
       0,   519,     0,   520,   521,   522,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,   532,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,     0,     0,   555,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
       0,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,   581,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,     0,     0,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,   623,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,  3052,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,  3053,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,     0,   724,   725,   726,   727,
     728,   729,   730,  3054,     0,     0,     0,     0,   244,   245,
       0,   246,   247,   248,   249,   250,     0,  3055,   251,     0,
       0,     0,     0,   252,     0,     0,  3056,     0,   254,   255,
     256,   257,   258,   259,     0,  -568,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,     0,     0,     0,     0,   269,  5236,     0,   270,
     271,     0,   272,   273,     0,     0,     0,     0,   276,   277,
     278,  5237,   280,   281,     0,   282,   283,     0,   284,   285,
       0,   287,     0,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,     0,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,     0,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,     0,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,     0,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,     0,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,  5238,   344,   345,   346,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,     0,   362,
       0,     0,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,  5239,     0,   370,     0,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,     0,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
    5240,     0,     0,   382,     0,   383,     0,     0,     0,   385,
       0,     0,   386,  5241,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,  -523,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,   447,     0,     0,
       0,     0,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,  5242,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,     0,     0,     0,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,     0,   499,  -523,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,     0,     0,
     509,   510,     0,   511,   512,   513,  5243,   514,     0,     0,
       0,   516,   517,   518,     0,   519,     0,   520,   521,     0,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,     0,
       0,     0,   534,     0,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,     0,   551,   552,   553,   554,     0,     0,     0,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,     0,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,     0,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,     0,     0,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,  -523,     0,
       0,     0,   603,   604,   605,     0,   606,     0,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,     0,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,     0,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,     0,
       0,   725,   726,   727,   728,   729,   730,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   253,  5640,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,   777,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,  2968,     0,     0,
       0,     0,   309,   310,   797,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,   801,   342,   343,     0,   344,   345,   346,   347,   348,
     802,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,   807,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,   814,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,   825,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,   829,   830,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,   849,   573,   574,     0,  2969,   576,   577,
    2970,     0,     0,     0,     0,     0,   579,   580,     0,     0,
     855,   581,   582,   583,     0,   857,   584,   585,   858,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,     0,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,   890,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,   814,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,   830,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,   831,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,     0,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,   857,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,     0,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,  2104,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,  1735,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,  1165,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,  1736,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,   241,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,     0,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,  1737,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,  1042,  1043,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,  1044,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,  1045,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,  1046,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,  1047,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,  1048,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,  1049,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,     0,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,  1050,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,  1051,  1052,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,  1053,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,  1054,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,     0,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,  1055,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,  1165,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,   241,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,     0,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,  1388,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,  1165,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,   241,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,     0,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,  1569,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,  1042,  1043,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,  1577,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,  1045,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,  1046,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,  1047,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,  1049,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,     0,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,  1051,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,  1053,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,     0,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,  1055,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,  1165,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,   241,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,     0,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,  1737,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,  2223,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,     0,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,     0,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,  2224,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,     0,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,     0,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,  5578,   252,     0,  5579,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,     0,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,     0,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,  2224,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,     0,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,     0,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,  5579,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,    42,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,    49,   569,   570,
     571,   572,     0,     0,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,    54,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,    55,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,     0,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
    1150,  4247,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,     0,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,     0,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,  4488,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,     0,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,     0,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,  4492,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,  2540,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,  2541,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,  1906,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,  1907,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,  4084,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,    42,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
    2543,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,    49,   569,   570,
     571,   572,     0,     0,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,    54,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,    55,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
    1150,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
    3052,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
    3053,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,     0,   724,   725,
     726,   727,   728,   729,   730,  3054,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,  3055,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,     0,   724,   725,
     726,   727,   728,   729,   730,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,  1311,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,     0,   416,
     417,   418,   419,     0,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   426,   427,     0,     0,   428,   429,
       0,   430,     0,   431,     0,   432,   433,   434,   435,   436,
     437,   438,   439,   440,     0,     0,   441,   442,     0,     0,
     443,   444,   445,   446,   447,     0,     0,     0,   448,   449,
       0,     0,     0,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,     0,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,     0,   472,     0,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   482,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   514,     0,     0,   515,   516,   517,
     518,     0,   519,     0,   520,   521,   522,   523,   524,     0,
     525,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,   532,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,     0,     0,   555,   556,     0,     0,   557,
     558,   559,   560,   561,   562,     0,     0,   563,   564,   565,
     566,     0,   567,   568,     0,     0,   569,   570,   571,   572,
       0,     0,   573,   574,     0,   575,   576,   577,   578,     0,
       0,     0,     0,     0,   579,   580,     0,     0,     0,   581,
     582,   583,     0,     0,   584,   585,     0,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   593,   594,     0,     0,     0,     0,     0,   595,     0,
     596,     0,     0,   597,     0,     0,     0,   598,     0,   599,
     600,   601,   602,     0,     0,     0,     0,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   610,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,     0,     0,     0,   617,   618,   619,
       0,   620,   621,   622,     0,   623,     0,     0,   624,     0,
     625,     0,     0,     0,     0,     0,     0,   626,   627,     0,
       0,   628,     0,   629,     0,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,   639,     0,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   674,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,     0,   724,   725,   726,
     727,   728,   729,   730,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,  3270,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,   448,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,   472,     0,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   514,     0,     0,   515,   516,   517,   518,
       0,   519,     0,   520,   521,   522,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,   532,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,     0,     0,   555,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
       0,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,   581,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,     0,     0,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,   623,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,     0,   724,   725,   726,   727,
     728,   729,   730,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,  3613,   252,     0,
       0,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,     0,   416,   417,   418,
     419,     0,   420,   421,     0,     0,     0,     0,   422,   423,
     424,   425,   426,   427,     0,     0,   428,   429,     0,   430,
       0,   431,     0,   432,   433,   434,   435,   436,   437,   438,
     439,   440,     0,     0,   441,   442,     0,     0,   443,   444,
     445,   446,   447,     0,     0,     0,   448,   449,     0,     0,
       0,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,     0,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,     0,
     472,     0,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   482,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,     0,     0,
     490,   491,   492,   493,   494,     0,   495,   496,     0,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,   507,     0,   508,     0,   509,   510,     0,   511,   512,
     513,     0,   514,     0,     0,   515,   516,   517,   518,     0,
     519,     0,   520,   521,   522,   523,   524,     0,   525,   526,
       0,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,     0,   532,     0,   533,   534,   535,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,     0,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,   551,   552,   553,
     554,     0,     0,   555,   556,     0,     0,   557,   558,   559,
     560,   561,   562,     0,     0,   563,   564,   565,   566,     0,
     567,   568,     0,     0,   569,   570,   571,   572,     0,     0,
     573,   574,     0,   575,   576,   577,   578,     0,     0,     0,
       0,     0,   579,   580,     0,     0,     0,   581,   582,   583,
       0,     0,   584,   585,     0,   586,   587,     0,   588,   589,
       0,     0,   590,     0,     0,   591,     0,   592,     0,   593,
     594,     0,     0,     0,     0,     0,   595,     0,   596,     0,
       0,   597,     0,     0,     0,   598,     0,   599,   600,   601,
     602,     0,     0,     0,     0,     0,     0,   603,   604,   605,
       0,   606,   607,   608,   609,     0,     0,   610,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,     0,     0,     0,   617,   618,   619,     0,   620,
     621,   622,     0,   623,     0,     0,   624,     0,   625,     0,
       0,     0,     0,     0,     0,   626,   627,     0,     0,   628,
       0,   629,     0,   630,   631,     0,     0,     0,   632,   633,
     634,   635,   636,   637,   638,   639,     0,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,     0,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,     0,   674,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,     0,   724,   725,   726,   727,   728,
     729,   730,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,  4372,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,   447,     0,     0,     0,   448,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,   472,
       0,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,     0,   508,     0,   509,   510,     0,   511,   512,   513,
       0,   514,     0,     0,   515,   516,   517,   518,     0,   519,
       0,   520,   521,   522,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,   532,     0,   533,   534,   535,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,   551,   552,   553,   554,
       0,     0,   555,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   563,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,     0,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,   581,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,   588,   589,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,     0,     0,     0,     0,   603,   604,   605,     0,
     606,   607,   608,   609,     0,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,   623,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,     0,   724,   725,   726,   727,   728,   729,
     730,   244,   245,     0,   246,   247,   248,   249,   250,  2174,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,   361,   362,     0,   363,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,     0,     0,
       0,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
       0,   413,   414,   415,     0,   416,   417,   418,   419,     0,
     420,   421,     0,     0,     0,     0,   422,   423,   424,   425,
     426,   427,     0,     0,   428,   429,     0,   430,     0,   431,
       0,   432,   433,   434,   435,   436,   437,   438,   439,   440,
       0,     0,   441,   442,     0,     0,   443,   444,   445,   446,
     447,     0,     0,     0,   448,   449,     0,     0,     0,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   457,
     458,   459,     0,   460,     0,   461,     0,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,     0,   472,     0,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   482,   483,   484,     0,     0,   485,     0,     0,
       0,   486,   487,     0,   488,   489,     0,     0,   490,   491,
     492,   493,   494,     0,   495,   496,     0,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
       0,   508,     0,   509,   510,     0,   511,   512,   513,     0,
     514,     0,     0,   515,   516,   517,   518,     0,   519,     0,
     520,   521,   522,   523,   524,     0,   525,   526,     0,     0,
       0,   527,   528,   529,   530,     0,     0,     0,   531,     0,
       0,     0,   532,     0,   533,   534,   535,   536,     0,   537,
     538,   539,   540,   541,     0,     0,     0,     0,     0,   542,
     543,   544,     0,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,   551,   552,   553,   554,     0,
       0,   555,   556,     0,     0,   557,   558,   559,   560,   561,
     562,     0,     0,   563,   564,   565,   566,     0,   567,   568,
       0,     0,   569,   570,   571,   572,     0,     0,   573,   574,
       0,   575,   576,   577,   578,     0,     0,     0,     0,     0,
     579,   580,     0,     0,     0,   581,   582,   583,     0,     0,
     584,   585,     0,   586,   587,     0,   588,   589,     0,     0,
     590,     0,     0,   591,     0,   592,     0,   593,   594,     0,
       0,     0,     0,     0,   595,     0,   596,     0,     0,   597,
       0,     0,     0,   598,     0,   599,   600,   601,   602,     0,
       0,     0,     0,     0,     0,   603,   604,   605,     0,   606,
     607,   608,   609,     0,     0,   610,     0,     0,   611,   612,
     613,   614,   615,     0,   616,     0,     0,     0,     0,     0,
       0,     0,     0,   617,   618,   619,     0,   620,   621,   622,
       0,   623,     0,     0,   624,     0,   625,     0,     0,     0,
       0,     0,     0,   626,   627,     0,     0,   628,     0,   629,
       0,   630,   631,     0,     0,     0,   632,   633,   634,   635,
     636,   637,   638,   639,     0,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,     0,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
       0,   674,   675,   676,   677,   678,   679,   680,     0,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,     0,   724,   725,   726,   727,   728,   729,   730,
     244,   245,     0,   246,   247,   248,   249,   250,  2983,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,     0,   724,   725,   726,   727,   728,   729,   730,   244,
     245,     0,   246,   247,   248,   249,   250,  3645,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,     0,   416,   417,   418,   419,     0,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   426,   427,
       0,     0,   428,   429,     0,   430,     0,   431,     0,   432,
     433,   434,   435,   436,   437,   438,   439,   440,     0,     0,
     441,   442,     0,     0,   443,   444,   445,   446,   447,     0,
       0,     0,   448,   449,     0,     0,     0,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
       0,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,     0,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     482,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   514,     0,
       0,   515,   516,   517,   518,     0,   519,     0,   520,   521,
     522,   523,   524,     0,   525,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,     0,     0,   555,
     556,     0,     0,   557,   558,   559,   560,   561,   562,     0,
       0,   563,   564,   565,   566,     0,   567,   568,     0,     0,
     569,   570,   571,   572,     0,     0,   573,   574,     0,   575,
     576,   577,   578,     0,     0,     0,     0,     0,   579,   580,
       0,     0,     0,   581,   582,   583,     0,     0,   584,   585,
       0,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   593,   594,     0,     0,     0,
       0,     0,   595,     0,   596,     0,     0,   597,     0,     0,
       0,   598,     0,   599,   600,   601,   602,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   610,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,     0,     0,
       0,   617,   618,   619,     0,   620,   621,   622,     0,   623,
       0,     0,   624,     0,   625,     0,     0,     0,     0,     0,
       0,   626,   627,     0,     0,   628,     0,   629,     0,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   674,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
       0,   724,   725,   726,   727,   728,   729,   730,   244,   245,
       0,   246,   247,   248,   249,   250,  3829,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,   447,     0,     0,
       0,   448,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,   472,     0,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   514,     0,     0,
     515,   516,   517,   518,     0,   519,     0,   520,   521,   522,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,   532,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,     0,     0,   555,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,     0,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,   581,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,   623,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,     0,
     724,   725,   726,   727,   728,   729,   730,     0,     0,     0,
       0,     0,     0,   244,   245,  4223,   246,   247,   248,   249,
     250,   950,   951,   251,     0,     0,     0,     0,   252,     0,
       0,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,   952,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,     0,   311,   312,     0,   313,   953,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,   954,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   955,   334,   335,   956,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   957,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,   958,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,   959,     0,   373,     0,     0,     0,   960,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,   961,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,   962,   393,   394,     0,     0,     0,     0,
       0,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,     0,   416,   417,   418,
     419,     0,   420,   421,     0,     0,     0,     0,   422,   423,
     424,   425,   426,   427,     0,     0,   428,   429,     0,   430,
       0,   431,     0,   432,   433,   434,   435,   436,   437,   438,
     439,   440,     0,     0,   441,   442,     0,     0,   443,   444,
     445,   446,     0,     0,     0,     0,   448,   449,     0,     0,
       0,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,     0,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,     0,
     472,     0,   473,   474,   475,     0,   476,     0,   963,   478,
     479,   480,   964,     0,   482,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,   965,     0,
     490,   491,   492,   493,   494,     0,   966,   496,     0,   497,
     498,   499,     0,     0,   967,   501,   502,   503,   504,   505,
     506,   507,     0,   508,     0,   509,   510,     0,   511,   512,
     513,     0,   514,     0,     0,   515,   516,   517,   518,     0,
     519,     0,   520,   521,   522,   523,   524,     0,   525,   526,
     968,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,   969,   970,     0,   533,   534,   535,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,     0,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,   551,   552,   553,
     554,     0,     0,   555,   556,     0,     0,   557,   558,   559,
     560,   561,   562,     0,     0,   971,   564,   565,   566,     0,
     567,   568,     0,     0,   569,   570,   571,   572,     0,   241,
     573,   574,     0,   575,   576,   577,   578,     0,     0,     0,
       0,     0,   579,   580,   972,     0,     0,   581,   582,   583,
       0,     0,   584,   585,     0,   586,   587,     0,   588,   589,
       0,     0,   590,     0,     0,   591,   973,   592,   974,   593,
     594,     0,     0,     0,     0,     0,   595,     0,   596,     0,
       0,   597,     0,     0,     0,   598,     0,   599,   600,   601,
     602,     0,     0,     0,     0,     0,     0,   603,   604,   605,
       0,   606,   607,   608,   609,     0,     0,   610,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,     0,     0,     0,   617,   618,   619,     0,   620,
     621,   622,     0,   623,     0,     0,   624,     0,   625,     0,
       0,     0,     0,     0,     0,   626,   627,     0,     0,   628,
       0,   629,     0,   630,   631,     0,     0,     0,   632,   633,
     634,   635,   636,   637,   638,     0,     0,   640,   641,   642,
       0,   644,   645,   646,   647,   648,   649,     0,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,     0,   674,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,     0,   724,   725,   726,   727,   728,
     729,   730,   244,   245,     0,   246,   247,   248,   249,   250,
    1024,   951,   251,     0,     0,     0,     0,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,   952,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,   953,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,   954,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   955,   334,   335,   956,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     957,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,   958,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,   959,     0,   373,     0,     0,     0,   960,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,   961,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,   962,   393,   394,     0,     0,     0,     0,     0,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,     0,     0,     0,     0,   448,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,   472,
       0,   473,   474,   475,     0,   476,     0,   963,   478,   479,
     480,  1025,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,   965,     0,   490,
     491,   492,   493,   494,     0,   966,   496,     0,   497,   498,
     499,     0,     0,   967,   501,   502,   503,   504,   505,   506,
     507,     0,   508,     0,   509,   510,     0,   511,   512,   513,
       0,   514,     0,     0,   515,   516,   517,   518,     0,   519,
       0,   520,   521,   522,   523,   524,     0,   525,   526,   968,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,   969,   970,     0,   533,   534,   535,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,   551,   552,   553,   554,
       0,     0,   555,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   971,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,   241,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,   972,     0,     0,   581,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,   588,   589,     0,
       0,   590,     0,     0,   591,   973,   592,   974,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,     0,     0,     0,     0,   603,   604,   605,     0,
     606,   607,   608,   609,     0,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,   623,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,     0,     0,   640,   641,   642,     0,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,     0,   724,   725,   726,   727,   728,   729,
     730,   244,   245,     0,   246,   247,   248,   249,   250,     0,
     951,   251,     0,     0,     0,     0,   252,     0,     0,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,   952,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,   953,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
     954,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   955,   334,   335,   956,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   957,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,   958,   360,     0,     0,
       0,   361,   362,     0,   363,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,   959,     0,   373,     0,     0,     0,   960,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
     961,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,   962,   393,   394,     0,     0,     0,     0,     0,     0,
       0,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
       0,   413,   414,   415,     0,   416,   417,   418,   419,     0,
     420,   421,     0,     0,     0,     0,   422,   423,   424,   425,
     426,   427,     0,     0,   428,   429,     0,   430,     0,   431,
       0,   432,   433,   434,   435,   436,   437,   438,   439,   440,
       0,     0,   441,   442,     0,     0,   443,   444,   445,   446,
       0,     0,     0,     0,   448,   449,     0,     0,     0,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   457,
     458,   459,     0,   460,     0,   461,     0,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,     0,   472,     0,
     473,   474,   475,     0,   476,     0,   963,   478,   479,   480,
       0,     0,   482,   483,   484,     0,     0,   485,     0,     0,
       0,   486,   487,     0,   488,   489,   965,     0,   490,   491,
     492,   493,   494,     0,   966,   496,     0,   497,   498,   499,
       0,     0,   967,   501,   502,   503,   504,   505,   506,   507,
       0,   508,     0,   509,   510,     0,   511,   512,   513,     0,
     514,     0,     0,   515,   516,   517,   518,     0,   519,     0,
     520,   521,   522,   523,   524,     0,   525,   526,   968,     0,
       0,   527,   528,   529,   530,     0,     0,     0,   531,     0,
       0,   969,   970,     0,   533,   534,   535,   536,     0,   537,
     538,   539,   540,   541,     0,     0,     0,     0,     0,   542,
     543,   544,     0,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,   551,   552,   553,   554,     0,
       0,   555,   556,     0,     0,   557,   558,   559,   560,   561,
     562,     0,     0,   971,   564,   565,   566,     0,   567,   568,
       0,     0,   569,   570,   571,   572,     0,   241,   573,   574,
       0,   575,   576,   577,   578,     0,     0,     0,     0,     0,
     579,   580,   972,     0,     0,   581,   582,   583,     0,     0,
     584,   585,     0,   586,   587,     0,   588,   589,     0,     0,
     590,     0,     0,   591,   973,   592,   974,   593,   594,     0,
       0,     0,     0,     0,   595,     0,   596,     0,     0,   597,
       0,     0,     0,   598,     0,   599,   600,   601,   602,     0,
       0,     0,     0,     0,     0,   603,   604,   605,     0,   606,
     607,   608,   609,     0,     0,   610,     0,     0,   611,   612,
     613,   614,   615,     0,   616,     0,     0,     0,     0,     0,
       0,     0,     0,   617,   618,   619,     0,   620,   621,   622,
       0,   623,     0,     0,   624,     0,   625,     0,     0,     0,
       0,     0,     0,   626,   627,     0,     0,   628,     0,   629,
       0,   630,   631,     0,     0,     0,   632,   633,   634,   635,
     636,   637,   638,     0,     0,   640,   641,   642,     0,   644,
     645,   646,   647,   648,   649,     0,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
       0,   674,   675,   676,   677,   678,   679,   680,     0,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,     0,   724,   725,   726,   727,   728,   729,   730,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,  3288,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,  3289,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,  3290,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,  3291,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
    1419,  1420,     0,   448,   449,     0,     0,  3292,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,  5628,  1019,  5629,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,  3293,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,     0,   724,   725,   726,   727,   728,   729,   730,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,  1393,  1394,   252,  1395,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,     0,   416,   417,   418,   419,     0,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   426,   427,
       0,     0,   428,   429,     0,   430,     0,   431,     0,   432,
     433,   434,   435,   436,   437,   438,   439,   440,     0,     0,
     441,   442,     0,     0,   443,   444,   445,   446,   447,     0,
       0,     0,   448,   449,     0,     0,     0,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
    1396,     0,     0,  1397,     0,     0,     0,   457,   458,   459,
       0,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,     0,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     482,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   514,     0,
       0,   515,   516,   517,   518,     0,   519,     0,   520,   521,
     522,   523,   524,     0,   525,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,     0,     0,   555,
     556,     0,     0,   557,   558,   559,   560,   561,   562,     0,
       0,   563,   564,   565,   566,     0,   567,   568,     0,     0,
     569,   570,   571,   572,     0,  1398,   573,   574,     0,   575,
     576,   577,   578,     0,     0,     0,     0,     0,   579,   580,
       0,     0,     0,   581,   582,   583,     0,     0,   584,   585,
       0,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   593,   594,     0,     0,     0,
       0,     0,   595,     0,   596,     0,     0,   597,     0,     0,
       0,   598,     0,   599,   600,   601,   602,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,  1399,     0,   610,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,     0,     0,
       0,   617,   618,   619,     0,   620,   621,   622,     0,   623,
       0,     0,   624,     0,   625,     0,     0,     0,     0,     0,
       0,   626,   627,     0,     0,   628,     0,   629,     0,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   674,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
       0,   724,   725,   726,   727,   728,   729,   730,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,  1546,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,  1547,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,  1548,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,  1165,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,   447,     0,     0,
       0,   448,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,   472,     0,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   514,     0,     0,
     515,   516,   517,   518,     0,   519,     0,   520,   521,   522,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,  1549,   531,     0,     0,     0,   532,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,     0,     0,   555,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,   241,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,   581,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,   623,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,     0,
     724,   725,   726,   727,   728,   729,   730,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,  2540,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,  2541,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,  1906,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,  1907,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
    2543,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,     0,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,  1571,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,  1572,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1165,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,     0,   724,   725,
     726,   727,   728,   729,   730,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
    1751,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,     0,   416,
     417,   418,   419,     0,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   426,   427,     0,     0,   428,   429,
       0,   430,     0,   431,     0,   432,   433,   434,   435,   436,
     437,   438,   439,   440,     0,     0,   441,   442,     0,     0,
     443,   444,   445,   446,   447,     0,     0,     0,   448,   449,
       0,     0,  1752,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,   831,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,     0,   472,     0,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   482,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   514,     0,     0,   515,   516,   517,
     518,     0,   519,     0,   520,   521,   522,   523,   524,     0,
     525,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,   532,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,     0,     0,   555,   556,     0,     0,   557,
     558,   559,   560,   561,   562,     0,     0,   563,   564,   565,
     566,     0,   567,   568,     0,     0,   569,   570,   571,   572,
       0,     0,   573,   574,     0,   575,   576,   577,   578,     0,
       0,     0,     0,     0,   579,   580,     0,     0,     0,   581,
     582,   583,     0,  1753,   584,   585,     0,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   593,   594,     0,     0,     0,     0,     0,   595,     0,
     596,     0,     0,   597,     0,     0,     0,   598,     0,   599,
     600,   601,   602,     0,     0,     0,     0,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   610,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,     0,     0,     0,   617,   618,   619,
       0,   620,   621,   622,     0,   623,     0,     0,   624,     0,
     625,     0,     0,     0,     0,     0,     0,   626,   627,     0,
       0,   628,     0,   629,     0,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,   639,     0,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   674,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,     0,   724,   725,   726,
     727,   728,   729,   730,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,  1546,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,  3948,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,  1165,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,   448,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,   472,     0,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   514,     0,     0,   515,   516,   517,   518,
       0,   519,     0,   520,   521,   522,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,   532,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,     0,     0,   555,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
     241,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,   581,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,     0,     0,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,   623,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,     0,   724,   725,   726,   727,
     728,   729,   730,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,  1164,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,  1165,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,     0,   416,   417,   418,
     419,     0,   420,   421,     0,     0,     0,     0,   422,   423,
     424,   425,   426,   427,     0,     0,   428,   429,     0,   430,
       0,   431,     0,   432,   433,   434,   435,   436,   437,   438,
     439,   440,     0,     0,   441,   442,     0,     0,   443,   444,
     445,   446,   447,     0,     0,     0,   448,   449,     0,     0,
       0,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,     0,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,     0,
     472,     0,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   482,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,     0,     0,
     490,   491,   492,   493,   494,     0,   495,   496,     0,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,   507,     0,   508,     0,   509,   510,     0,   511,   512,
     513,     0,   514,     0,     0,   515,   516,   517,   518,     0,
     519,     0,   520,   521,   522,   523,   524,     0,   525,   526,
       0,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,     0,   532,     0,   533,   534,   535,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,     0,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,   551,   552,   553,
     554,     0,     0,   555,   556,     0,     0,   557,   558,   559,
     560,   561,   562,     0,     0,   563,   564,   565,   566,     0,
     567,   568,     0,     0,   569,   570,   571,   572,     0,   241,
     573,   574,     0,   575,   576,   577,   578,     0,     0,     0,
       0,     0,   579,   580,     0,     0,     0,   581,   582,   583,
       0,     0,   584,   585,     0,   586,   587,     0,   588,   589,
       0,     0,   590,     0,     0,   591,     0,   592,     0,  1166,
     594,     0,     0,     0,     0,     0,   595,     0,   596,     0,
       0,   597,     0,     0,     0,   598,     0,   599,   600,   601,
     602,     0,     0,     0,     0,     0,     0,   603,   604,   605,
       0,   606,   607,   608,   609,     0,     0,   610,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,     0,     0,     0,   617,   618,   619,     0,   620,
     621,   622,     0,   623,     0,     0,   624,     0,   625,     0,
       0,     0,     0,     0,     0,   626,   627,     0,     0,   628,
       0,   629,     0,   630,   631,     0,     0,     0,   632,   633,
     634,   635,   636,   637,   638,   639,     0,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,     0,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,     0,   674,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,     0,   724,   725,   726,   727,   728,
     729,   730,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,  1164,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,  1165,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,   447,     0,     0,     0,   448,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,   472,
       0,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,     0,   508,     0,   509,   510,     0,   511,   512,   513,
       0,   514,     0,     0,   515,   516,   517,   518,     0,   519,
       0,   520,   521,   522,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,   532,     0,   533,   534,   535,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,   551,   552,   553,   554,
       0,     0,   555,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   563,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,   241,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,   581,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,   588,   589,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,     0,     0,     0,     0,   603,   604,   605,     0,
     606,   607,   608,   609,     0,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,   623,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,     0,   724,   725,   726,   727,   728,   729,
     730,   244,   245,     0,   246,   247,   248,   249,   250,  1600,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,   361,   362,     0,   363,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
    1165,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,     0,     0,
       0,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
       0,   413,   414,   415,     0,   416,   417,   418,   419,     0,
     420,   421,     0,     0,     0,     0,   422,   423,   424,   425,
     426,   427,     0,     0,   428,   429,     0,   430,     0,   431,
       0,   432,   433,   434,   435,   436,   437,   438,   439,   440,
       0,     0,   441,   442,     0,     0,   443,   444,   445,   446,
     447,     0,     0,     0,   448,   449,     0,     0,     0,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   457,
     458,   459,     0,   460,     0,   461,     0,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,     0,   472,     0,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   482,   483,   484,     0,     0,   485,     0,     0,
       0,   486,   487,     0,   488,   489,     0,     0,   490,   491,
     492,   493,   494,     0,   495,   496,     0,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
       0,   508,     0,   509,   510,     0,   511,   512,   513,     0,
     514,     0,     0,   515,   516,   517,   518,     0,   519,     0,
     520,   521,   522,   523,   524,     0,   525,   526,     0,     0,
       0,   527,   528,   529,   530,     0,     0,     0,   531,     0,
       0,     0,   532,     0,   533,   534,   535,   536,     0,   537,
     538,   539,   540,   541,     0,     0,     0,     0,     0,   542,
     543,   544,     0,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,   551,   552,   553,   554,     0,
       0,   555,   556,     0,     0,   557,   558,   559,   560,   561,
     562,     0,     0,   563,   564,   565,   566,     0,   567,   568,
       0,     0,   569,   570,   571,   572,     0,   241,   573,   574,
       0,   575,   576,   577,   578,     0,     0,     0,     0,     0,
     579,   580,     0,     0,     0,   581,   582,   583,     0,     0,
     584,   585,     0,   586,   587,     0,   588,   589,     0,     0,
     590,     0,     0,   591,     0,   592,     0,   593,   594,     0,
       0,     0,     0,     0,   595,     0,   596,     0,     0,   597,
       0,     0,     0,   598,     0,   599,   600,   601,   602,     0,
       0,     0,     0,     0,     0,   603,   604,   605,     0,   606,
     607,   608,   609,     0,     0,   610,     0,     0,   611,   612,
     613,   614,   615,     0,   616,     0,     0,     0,     0,     0,
       0,     0,     0,   617,   618,   619,     0,   620,   621,   622,
       0,   623,     0,     0,   624,     0,   625,     0,     0,     0,
       0,     0,     0,   626,   627,     0,     0,   628,     0,   629,
       0,   630,   631,     0,     0,     0,   632,   633,   634,   635,
     636,   637,   638,   639,     0,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,     0,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
       0,   674,   675,   676,   677,   678,   679,   680,     0,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,     0,   724,   725,   726,   727,   728,   729,   730,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,  1674,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,  1675,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,  1438,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,     0,   724,   725,   726,   727,   728,   729,   730,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,  3075,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,  1165,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,     0,   416,   417,   418,   419,     0,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   426,   427,
       0,     0,   428,   429,     0,   430,     0,   431,     0,   432,
     433,   434,   435,   436,   437,   438,   439,   440,     0,     0,
     441,   442,     0,     0,   443,   444,   445,   446,   447,     0,
       0,     0,   448,   449,     0,     0,     0,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
       0,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,     0,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     482,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   514,     0,
       0,   515,   516,   517,   518,     0,   519,     0,   520,   521,
     522,   523,   524,     0,   525,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,     0,     0,   555,
     556,     0,     0,   557,   558,   559,   560,   561,   562,     0,
       0,   563,   564,   565,   566,     0,   567,   568,     0,     0,
     569,   570,   571,   572,     0,   241,   573,   574,     0,   575,
     576,   577,   578,     0,     0,     0,     0,     0,   579,   580,
       0,     0,     0,   581,   582,   583,     0,     0,   584,   585,
       0,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   593,   594,     0,     0,     0,
       0,     0,   595,     0,   596,     0,     0,   597,     0,     0,
       0,   598,     0,   599,   600,   601,   602,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   610,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,     0,     0,
       0,   617,   618,   619,     0,   620,   621,   622,     0,   623,
       0,     0,   624,     0,   625,     0,     0,     0,     0,     0,
       0,   626,   627,     0,     0,   628,     0,   629,     0,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   674,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
       0,   724,   725,   726,   727,   728,   729,   730,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,  1165,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,   447,     0,     0,
       0,   448,   449,     0,  3359,     0,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,   472,     0,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   514,     0,     0,
     515,   516,   517,   518,     0,   519,     0,   520,   521,   522,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,   532,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,     0,     0,   555,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,   241,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,   581,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,   623,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,     0,
     724,   725,   726,   727,   728,   729,   730,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,  1546,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,  1165,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,   241,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1165,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,  4004,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,     0,   724,   725,
     726,   727,   728,   729,   730,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,  1165,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,     0,   416,
     417,   418,   419,     0,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   426,   427,     0,     0,   428,   429,
       0,   430,     0,   431,     0,   432,   433,   434,   435,   436,
     437,   438,   439,   440,     0,     0,   441,   442,     0,     0,
     443,   444,   445,   446,   447,     0,     0,     0,   448,   449,
       0,     0,     0,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,     0,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,     0,   472,     0,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   482,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   514,     0,     0,   515,   516,   517,
     518,     0,   519,     0,   520,   521,   522,   523,   524,     0,
     525,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,   532,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,     0,     0,   555,   556,     0,     0,   557,
     558,   559,   560,   561,   562,     0,     0,   563,   564,   565,
     566,     0,   567,   568,     0,     0,   569,   570,   571,   572,
       0,   241,   573,   574,     0,   575,   576,   577,   578,     0,
       0,     0,     0,     0,   579,   580,     0,     0,     0,   581,
     582,   583,     0,     0,   584,   585,     0,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   593,   594,     0,     0,     0,     0,     0,   595,     0,
     596,     0,     0,   597,     0,     0,     0,   598,     0,   599,
     600,   601,   602,     0,     0,     0,     0,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   610,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,     0,     0,     0,   617,   618,   619,
       0,   620,   621,   622,     0,   623,     0,     0,   624,     0,
     625,     0,     0,     0,     0,     0,     0,   626,   627,     0,
       0,   628,     0,   629,     0,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,   639,     0,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   674,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,     0,   724,   725,   726,
     727,   728,   729,   730,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,  5549,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,  5550,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,   448,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,   472,     0,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   514,     0,     0,   515,   516,   517,   518,
       0,   519,     0,   520,   521,   522,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,   532,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,     0,     0,   555,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
       0,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,   581,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,     0,     0,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,   623,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,     0,   724,   725,   726,   727,
     728,   729,   730,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,     0,   416,   417,   418,
     419,     0,   420,   421,     0,     0,     0,     0,   422,   423,
     424,   425,   426,   427,     0,     0,   428,   429,     0,   430,
       0,   431,     0,   432,   433,   434,   435,   436,   437,   438,
     439,   440,     0,     0,   441,   442,     0,     0,   443,   444,
     445,   446,   447,     0,     0,     0,   448,   449,     0,     0,
       0,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,     0,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,     0,
     472,     0,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   482,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,     0,     0,
     490,   491,   492,   493,   494,     0,   495,   496,     0,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,   507,     0,   508,     0,   509,   510,     0,   511,   512,
     513,     0,   514,     0,     0,   515,   516,   517,   518,     0,
     519,     0,   520,   521,   522,   523,   524,     0,   525,   526,
       0,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,     0,   532,     0,   533,   534,   535,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,  1019,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,   551,   552,   553,
     554,     0,     0,   555,   556,     0,     0,   557,   558,   559,
     560,   561,   562,     0,     0,   563,   564,   565,   566,     0,
     567,   568,     0,     0,   569,   570,   571,   572,     0,     0,
     573,   574,     0,   575,   576,   577,   578,     0,     0,     0,
       0,     0,   579,   580,     0,     0,     0,   581,   582,   583,
       0,     0,   584,   585,     0,   586,   587,     0,   588,   589,
       0,     0,   590,     0,     0,   591,     0,   592,     0,   593,
     594,     0,     0,     0,     0,     0,   595,     0,   596,     0,
       0,   597,     0,     0,     0,   598,     0,   599,   600,   601,
     602,     0,     0,     0,     0,     0,     0,   603,   604,   605,
       0,   606,   607,   608,   609,     0,     0,   610,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,     0,     0,     0,   617,   618,   619,     0,   620,
     621,   622,     0,   623,     0,     0,   624,     0,   625,     0,
       0,     0,     0,     0,     0,   626,   627,     0,     0,   628,
       0,   629,     0,   630,   631,     0,     0,     0,   632,   633,
     634,   635,   636,   637,   638,   639,     0,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,     0,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,     0,   674,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,     0,   724,   725,   726,   727,   728,
     729,   730,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,   447,     0,     0,     0,   448,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,   472,
       0,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,     0,   508,     0,   509,   510,     0,   511,   512,   513,
       0,   514,     0,     0,   515,   516,   517,   518,     0,   519,
       0,   520,   521,   522,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,   532,     0,   533,   534,   535,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,   551,   552,   553,   554,
       0,     0,   555,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   563,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,     0,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,   581,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,   588,   589,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,     0,     0,     0,     0,   603,   604,   605,     0,
     606,   607,   608,   609,     0,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,  1133,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,   623,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,     0,   724,   725,   726,   727,   728,   729,
     730,   244,   245,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,  1203,     0,     0,   252,     0,     0,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,  1204,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,   361,   362,     0,   363,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,     0,     0,
       0,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
       0,   413,   414,   415,     0,   416,   417,   418,   419,     0,
     420,   421,     0,     0,     0,     0,   422,   423,   424,   425,
     426,   427,     0,     0,   428,   429,     0,   430,     0,   431,
       0,   432,   433,   434,   435,   436,   437,   438,   439,   440,
       0,     0,   441,   442,     0,     0,   443,   444,   445,   446,
     447,     0,     0,     0,   448,   449,     0,     0,     0,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   457,
     458,   459,     0,   460,     0,   461,     0,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,     0,   472,     0,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   482,   483,   484,     0,     0,   485,     0,     0,
       0,   486,   487,     0,   488,   489,     0,     0,   490,   491,
     492,   493,   494,     0,   495,   496,     0,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
       0,   508,     0,   509,   510,     0,   511,   512,   513,     0,
     514,     0,     0,   515,   516,   517,   518,     0,   519,     0,
     520,   521,   522,   523,   524,     0,   525,   526,     0,     0,
       0,   527,   528,   529,   530,     0,     0,     0,   531,     0,
       0,     0,   532,     0,   533,   534,   535,   536,     0,   537,
     538,   539,   540,   541,     0,     0,     0,     0,     0,   542,
     543,   544,     0,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,   551,   552,   553,   554,     0,
       0,   555,   556,     0,     0,   557,   558,   559,   560,   561,
     562,     0,     0,   563,   564,   565,   566,     0,   567,   568,
       0,     0,   569,   570,   571,   572,     0,     0,   573,   574,
       0,   575,   576,   577,   578,     0,     0,     0,     0,     0,
     579,   580,     0,     0,     0,   581,   582,   583,     0,     0,
     584,   585,     0,   586,   587,     0,   588,   589,     0,     0,
     590,     0,     0,   591,     0,   592,     0,   593,   594,     0,
       0,     0,     0,     0,   595,     0,   596,     0,     0,   597,
       0,     0,     0,   598,     0,   599,   600,   601,   602,     0,
       0,     0,     0,     0,     0,   603,   604,   605,     0,   606,
     607,   608,   609,     0,     0,   610,     0,     0,   611,   612,
     613,   614,   615,     0,   616,     0,     0,     0,     0,     0,
       0,     0,     0,   617,   618,   619,     0,   620,   621,   622,
       0,   623,     0,     0,   624,     0,   625,     0,     0,     0,
       0,     0,     0,   626,   627,     0,     0,   628,     0,   629,
       0,   630,   631,     0,     0,     0,   632,   633,   634,   635,
     636,   637,   638,   639,     0,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,     0,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
       0,   674,   675,   676,   677,   678,   679,   680,     0,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,     0,   724,   725,   726,   727,   728,   729,   730,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,  1398,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,     0,   724,   725,   726,   727,   728,   729,   730,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,  2499,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,     0,   416,   417,   418,   419,     0,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   426,   427,
       0,     0,   428,   429,     0,   430,     0,   431,     0,   432,
     433,   434,   435,   436,   437,   438,   439,   440,     0,     0,
     441,   442,     0,     0,   443,   444,   445,   446,   447,     0,
       0,     0,   448,   449,     0,     0,     0,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
       0,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,     0,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     482,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   514,     0,
       0,   515,   516,   517,   518,     0,   519,     0,   520,   521,
     522,   523,   524,     0,   525,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,     0,     0,   555,
     556,     0,     0,   557,   558,   559,   560,   561,   562,     0,
       0,   563,   564,   565,   566,     0,   567,   568,     0,     0,
     569,   570,   571,   572,     0,     0,   573,   574,     0,   575,
     576,   577,   578,     0,     0,     0,     0,     0,   579,   580,
       0,     0,     0,   581,   582,   583,     0,     0,   584,   585,
       0,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   593,   594,     0,     0,     0,
       0,     0,   595,     0,   596,     0,     0,   597,     0,     0,
       0,   598,     0,   599,   600,   601,   602,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   610,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,     0,     0,
       0,   617,   618,   619,     0,   620,   621,   622,     0,   623,
       0,     0,   624,     0,   625,     0,     0,     0,     0,     0,
       0,   626,   627,     0,     0,   628,     0,   629,     0,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   674,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
       0,   724,   725,   726,   727,   728,   729,   730,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,  2637,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,   447,     0,     0,
       0,   448,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,   472,     0,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   514,     0,     0,
     515,   516,   517,   518,     0,   519,     0,   520,   521,   522,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,   532,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,     0,     0,   555,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,     0,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,   581,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,   623,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,     0,
     724,   725,   726,   727,   728,   729,   730,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,  3272,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,     0,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,   244,   245,     0,   246,
     247,   248,   249,   250,  3295,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,     0,   724,   725,
     726,   727,   728,   729,   730,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,  3324,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,     0,   416,
     417,   418,   419,     0,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   426,   427,     0,     0,   428,   429,
       0,   430,     0,   431,     0,   432,   433,   434,   435,   436,
     437,   438,   439,   440,     0,     0,   441,   442,     0,     0,
     443,   444,   445,   446,   447,     0,     0,     0,   448,   449,
       0,     0,     0,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,     0,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,     0,   472,     0,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   482,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   514,     0,     0,   515,   516,   517,
     518,     0,   519,     0,   520,   521,   522,   523,   524,     0,
     525,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,   532,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,     0,     0,   555,   556,     0,     0,   557,
     558,   559,   560,   561,   562,     0,     0,   563,   564,   565,
     566,     0,   567,   568,     0,     0,   569,   570,   571,   572,
       0,     0,   573,   574,     0,   575,   576,   577,   578,     0,
       0,     0,     0,     0,   579,   580,     0,     0,     0,   581,
     582,   583,     0,     0,   584,   585,     0,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   593,   594,     0,     0,     0,     0,     0,   595,     0,
     596,     0,     0,   597,     0,     0,     0,   598,     0,   599,
     600,   601,   602,     0,     0,     0,     0,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   610,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,     0,     0,     0,   617,   618,   619,
       0,   620,   621,   622,     0,   623,     0,     0,   624,     0,
     625,     0,     0,     0,     0,     0,     0,   626,   627,     0,
       0,   628,     0,   629,     0,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,   639,     0,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   674,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,     0,   724,   725,   726,
     727,   728,   729,   730,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,   448,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,   472,     0,   473,   474,   475,  3390,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   514,     0,     0,   515,   516,   517,   518,
       0,   519,     0,   520,   521,   522,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,   532,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,     0,     0,   555,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
       0,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,   581,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,     0,     0,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,   623,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,     0,   724,   725,   726,   727,
     728,   729,   730,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,     0,   416,   417,   418,
     419,     0,   420,   421,     0,     0,     0,     0,   422,   423,
     424,   425,   426,   427,     0,     0,   428,   429,     0,   430,
       0,   431,     0,   432,   433,   434,   435,   436,   437,   438,
     439,   440,     0,     0,   441,   442,     0,     0,   443,   444,
     445,   446,   447,     0,     0,     0,   448,   449,     0,     0,
       0,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,     0,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,     0,
     472,     0,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   482,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,     0,     0,
     490,   491,   492,   493,   494,     0,   495,   496,     0,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,   507,     0,   508,     0,   509,   510,     0,   511,   512,
     513,     0,   514,     0,     0,   515,   516,   517,   518,     0,
     519,     0,   520,   521,   522,   523,   524,     0,   525,   526,
       0,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,     0,   532,     0,   533,   534,   535,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,     0,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,   551,   552,   553,
     554,     0,     0,   555,   556,     0,     0,   557,   558,   559,
     560,   561,   562,     0,     0,   563,   564,   565,   566,     0,
     567,   568,     0,     0,   569,   570,   571,   572,     0,     0,
     573,   574,     0,   575,   576,   577,   578,     0,     0,     0,
       0,     0,   579,   580,     0,     0,     0,   581,   582,   583,
       0,     0,   584,   585,     0,   586,   587,     0,   588,   589,
       0,     0,   590,     0,     0,   591,     0,   592,     0,   593,
     594,     0,     0,     0,     0,     0,   595,     0,   596,     0,
       0,   597,     0,     0,     0,   598,     0,   599,   600,   601,
     602,     0,     0,     0,     0,     0,     0,   603,   604,   605,
       0,   606,   607,   608,   609,     0,     0,   610,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,     0,     0,     0,   617,   618,   619,     0,   620,
     621,   622,     0,   623,     0,     0,   624,     0,   625,     0,
       0,     0,     0,     0,     0,   626,   627,     0,     0,   628,
       0,   629,     0,   630,   631,     0,     0,     0,   632,   633,
     634,   635,   636,   637,   638,   639,     0,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,     0,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,     0,   674,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,     0,   724,   725,   726,   727,   728,
     729,   730,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,  2245,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,  2246,
     446,   447,     0,     0,     0,   448,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,   472,
       0,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,     0,   508,     0,   509,   510,     0,   511,   512,   513,
       0,   514,     0,     0,   515,   516,   517,   518,     0,   519,
       0,   520,   521,   522,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,   532,     0,   533,   534,   535,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,   551,   552,   553,   554,
       0,     0,   555,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   563,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,     0,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,   581,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,   588,   589,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,     0,     0,     0,     0,   603,   604,   605,     0,
     606,   607,   608,   609,     0,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,   623,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,     0,   724,   725,   726,   727,   728,   729,
     730,   244,   245,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,   361,   362,     0,   363,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,     0,     0,
       0,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
       0,   413,   414,   415,     0,   416,   417,   418,   419,     0,
     420,   421,     0,     0,     0,     0,   422,   423,   424,   425,
     426,   427,     0,     0,   428,   429,     0,   430,     0,   431,
       0,   432,   433,   434,   435,   436,   437,   438,   439,   440,
       0,     0,   441,   442,     0,     0,   443,   444,   445,   446,
     447,     0,     0,     0,   448,   449,     0,     0,     0,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   457,
     458,   459,     0,   460,     0,   461,     0,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,     0,   472,     0,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   482,   483,   484,     0,     0,   485,     0,     0,
       0,   486,   487,     0,   488,   489,     0,     0,   490,   491,
     492,   493,   494,     0,   495,   496,     0,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
       0,   508,     0,   509,   510,     0,   511,   512,   513,     0,
     514,     0,     0,   515,   516,   517,   518,     0,   519,     0,
     520,   521,   522,   523,   524,     0,   525,   526,     0,     0,
       0,   527,   528,   529,   530,     0,     0,     0,   531,     0,
       0,     0,   532,     0,   533,   534,   535,   536,     0,   537,
     538,   539,   540,   541,     0,     0,     0,     0,     0,   542,
     543,   544,     0,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,   551,   552,   553,   554,     0,
       0,   555,   556,     0,     0,   557,   558,   559,   560,   561,
     562,     0,     0,   563,   564,   565,   566,     0,   567,   568,
       0,     0,   569,   570,   571,   572,     0,     0,   573,   574,
       0,   575,   576,   577,   578,     0,     0,     0,     0,     0,
     579,   580,     0,     0,     0,   581,   582,   583,     0,     0,
     584,   585,     0,   586,   587,     0,   588,   589,     0,     0,
     590,     0,     0,   591,     0,   592,     0,   593,   594,     0,
       0,     0,     0,     0,   595,     0,   596,     0,     0,   597,
       0,     0,     0,   598,     0,   599,   600,   601,   602,     0,
       0,     0,     0,     0,     0,   603,   604,   605,     0,   606,
     607,   608,   609,     0,     0,   610,     0,     0,   611,   612,
     613,   614,   615,     0,   616,     0,     0,     0,     0,     0,
       0,     0,     0,   617,   618,   619,     0,   620,   621,   622,
       0,   623,     0,     0,   624,     0,   625,     0,     0,     0,
       0,     0,     0,   626,   627,     0,     0,   628,     0,   629,
       0,   630,   631,     0,     0,     0,  5299,   633,   634,   635,
     636,   637,   638,   639,     0,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,     0,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
       0,   674,   675,   676,   677,   678,   679,   680,     0,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,     0,   724,   725,   726,   727,   728,   729,   730,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
    1577,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,     0,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,     0,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,     0,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,  1578,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,     0,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,     0,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,     0,   724,   725,   726,   727,   728,   729,   730,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,  1577,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,     0,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,     0,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,     0,   416,   417,   418,   419,     0,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   426,   427,
       0,     0,   428,   429,     0,   430,     0,   431,     0,   432,
     433,   434,   435,   436,   437,   438,   439,   440,     0,     0,
     441,   442,     0,     0,   443,   444,   445,   446,   447,     0,
       0,     0,   448,   449,     0,     0,     0,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
       0,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,     0,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     482,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   514,     0,
       0,   515,   516,   517,   518,     0,   519,     0,   520,   521,
     522,   523,   524,     0,   525,   526,     0,     0,     0,   527,
     528,     0,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,     0,     0,   555,
     556,     0,     0,   557,   558,   559,   560,   561,   562,     0,
       0,   563,   564,   565,   566,     0,   567,   568,     0,     0,
     569,   570,   571,   572,     0,     0,   573,   574,     0,   575,
     576,   577,   578,     0,     0,     0,     0,     0,   579,   580,
       0,     0,     0,   581,   582,   583,     0,     0,   584,   585,
       0,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   593,   594,     0,     0,     0,
       0,     0,   595,     0,   596,     0,     0,   597,     0,     0,
       0,   598,     0,   599,   600,   601,   602,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   610,     0,     0,     0,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,     0,     0,
       0,   617,   618,   619,     0,     0,   621,   622,     0,   623,
       0,     0,   624,     0,   625,     0,     0,     0,     0,     0,
       0,   626,   627,     0,     0,   628,     0,   629,     0,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   674,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
       0,   724,   725,   726,   727,   728,   729,   730,   244,   245,
       0,   246,   247,   248,   249,   250,  1562,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,  1563,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
       0,   334,   335,     0,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,     0,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,   961,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,  1564,     0,     0,
       0,   448,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,   472,     0,   473,   474,   475,
       0,   476,     0,     0,   478,   479,   480,     0,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,     0,   496,     0,   497,   498,   499,     0,     0,     0,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   514,     0,     0,
     515,   516,   517,   518,     0,   519,     0,   520,   521,   522,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,     0,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,     0,     0,   555,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
       0,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,   241,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,   581,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,   623,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
       0,     0,   640,   641,   642,     0,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,     0,
     724,   725,   726,   727,   728,   729,   730,   244,   245,     0,
     246,   247,   248,   249,   250,  5382,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,  5383,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,     0,
     334,   335,     0,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,     0,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,   961,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,  5384,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,     0,   478,   479,   480,     0,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
       0,   496,     0,   497,   498,   499,     0,     0,     0,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,     0,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,     0,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,   241,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,     0,
       0,   640,   641,   642,     0,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,   724,
     725,   726,   727,   728,   729,   730,   244,   245,     0,   246,
     247,   248,   249,   250,  2307,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,     0,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,     0,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,   961,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,  2308,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,     0,   478,   479,   480,     0,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,     0,
     496,     0,   497,   498,   499,     0,     0,     0,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,     0,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,     0,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,     0,   724,   725,
     726,   727,   728,   729,   730,   244,   245,     0,   246,   247,
     248,   249,   250,  3155,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,     0,   334,   335,
       0,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,     0,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,   961,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,     0,   416,
     417,   418,   419,     0,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   426,   427,     0,     0,   428,   429,
       0,   430,     0,   431,     0,   432,   433,   434,   435,   436,
     437,   438,   439,   440,     0,     0,   441,   442,     0,     0,
     443,   444,   445,   446,  3156,     0,     0,     0,   448,   449,
       0,     0,     0,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,     0,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,     0,   472,     0,   473,   474,   475,     0,   476,     0,
       0,   478,   479,   480,     0,     0,   482,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,     0,   496,
       0,   497,   498,   499,     0,     0,     0,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   514,     0,     0,   515,   516,   517,
     518,     0,   519,     0,   520,   521,   522,   523,   524,     0,
     525,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,     0,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,     0,     0,   555,   556,     0,     0,   557,
     558,   559,   560,   561,   562,     0,     0,     0,   564,   565,
     566,     0,   567,   568,     0,     0,   569,   570,   571,   572,
       0,   241,   573,   574,     0,   575,   576,   577,   578,     0,
       0,     0,     0,     0,   579,   580,     0,     0,     0,   581,
     582,   583,     0,     0,   584,   585,     0,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   593,   594,     0,     0,     0,     0,     0,   595,     0,
     596,     0,     0,   597,     0,     0,     0,   598,     0,   599,
     600,   601,   602,     0,     0,     0,     0,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   610,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,     0,     0,     0,   617,   618,   619,
       0,   620,   621,   622,     0,   623,     0,     0,   624,     0,
     625,     0,     0,     0,     0,     0,     0,   626,   627,     0,
       0,   628,     0,   629,     0,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,     0,     0,   640,
     641,   642,     0,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   674,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,     0,   724,   725,   726,
     727,   728,   729,   730,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,     0,   334,   335,     0,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,     0,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,   961,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,     0,     0,     0,     0,   448,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,   472,     0,   473,   474,   475,     0,   476,     0,     0,
     478,   479,   480,     0,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,     0,   496,     0,
     497,   498,   499,     0,     0,     0,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   514,     0,     0,   515,   516,   517,   518,
       0,   519,     0,   520,   521,   522,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,     0,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,     0,     0,   555,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,     0,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
     241,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,   581,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,     0,     0,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,   623,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,     0,     0,   640,   641,
     642,     0,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,     0,   724,   725,   726,   727,
     728,   729,   730,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,     0,     0,   254,   255,   256,   257,   258,   259,     0,
    -568,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,     0,     0,     0,
       0,   269,  5236,     0,   270,   271,     0,   272,   273,     0,
       0,     0,     0,   276,   277,   278,  5237,   280,   281,     0,
     282,   283,     0,   284,   285,     0,   287,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,     0,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,     0,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,     0,     0,     0,   320,   321,   322,     0,  -538,  -538,
     323,     0,  -538,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,     0,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
    5238,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,     0,   362,     0,     0,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,  5239,     0,
     370,     0,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,     0,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,  5240,     0,     0,   382,     0,
     383,     0,     0,     0,   385,     0,     0,   386,  5241,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
    -523,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,     0,   416,   417,   418,
     419,     0,   420,   421,     0,     0,     0,     0,   422,   423,
     424,   425,   426,   427,     0,     0,   428,   429,     0,   430,
       0,   431,     0,   432,   433,   434,   435,   436,   437,   438,
     439,   440,     0,     0,   441,   442,     0,     0,   443,   444,
     445,   446,   447,     0,     0,     0,     0,   449,     0,     0,
       0,   450,     0,   451,   452,     0,   453,   454,  5242,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,     0,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,     0,
       0,     0,     0,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   482,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,     0,     0,
     490,   491,   492,   493,   494,     0,   495,   496,     0,   497,
       0,   499,  -523,     0,   500,   501,   502,   503,   504,   505,
     506,   507,     0,     0,     0,   509,   510,     0,   511,   512,
     513,  5243,   514,     0,     0,     0,   516,   517,   518,     0,
     519,     0,   520,   521,     0,   523,   524,     0,   525,   526,
       0,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,     0,     0,     0,     0,   534,     0,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,     0,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,     0,   551,   552,   553,
     554,     0,     0,     0,   556,     0,     0,   557,   558,   559,
     560,   561,   562,     0,     0,   563,   564,   565,   566,     0,
     567,   568,     0,     0,   569,   570,   571,   572,     0,     0,
     573,   574,     0,   575,   576,   577,   578,     0,     0,     0,
       0,     0,   579,   580,     0,     0,     0,     0,   582,   583,
       0,     0,   584,   585,     0,   586,   587,     0,     0,     0,
       0,     0,   590,     0,     0,   591,     0,   592,     0,   593,
     594,     0,     0,     0,     0,     0,   595,     0,   596,     0,
       0,   597,     0,     0,     0,   598,     0,   599,   600,   601,
     602,     0,     0,  -523,     0,     0,     0,   603,   604,   605,
       0,   606,     0,   608,   609,     0,     0,   610,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,     0,     0,     0,   617,   618,   619,     0,   620,
     621,   622,     0,     0,     0,     0,   624,     0,   625,     0,
       0,     0,     0,     0,     0,   626,   627,     0,     0,   628,
       0,   629,     0,   630,   631,     0,     0,     0,   632,   633,
     634,   635,   636,   637,   638,   639,     0,   640,   641,   642,
       0,   644,   645,   646,   647,   648,   649,     0,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,     0,   674,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,     0,     0,   725,   726,   727,   728,
     729,   730,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
       0,     0,   254,   255,   256,   257,   258,   259,     0,  -568,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,     0,     0,     0,     0,
     269,  5236,     0,   270,   271,     0,   272,   273,     0,     0,
       0,     0,   276,   277,   278,  5237,   280,   281,     0,   282,
     283,     0,   284,   285,     0,   287,     0,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
       0,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,     0,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
       0,     0,     0,   320,   321,   322,     0,  -559,     0,   323,
       0,  -559,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,     0,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,  5238,
     344,   345,   346,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,     0,   362,     0,     0,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,  5239,     0,   370,
       0,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,     0,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,  5240,     0,     0,   382,     0,   383,
       0,     0,     0,   385,     0,     0,   386,  5241,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,  -523,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,   447,     0,     0,     0,     0,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,  5242,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,     0,
       0,     0,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,     0,
     499,  -523,     0,   500,   501,   502,   503,   504,   505,   506,
     507,     0,     0,     0,   509,   510,     0,   511,   512,   513,
    5243,   514,     0,     0,     0,   516,   517,   518,     0,   519,
       0,   520,   521,     0,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,     0,     0,     0,   534,     0,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,     0,   551,   552,   553,   554,
       0,     0,     0,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   563,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,     0,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,     0,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,     0,     0,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
    -559,     0,  -523,     0,     0,     0,   603,   604,   605,     0,
     606,     0,   608,   609,     0,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,     0,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,     0,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,     0,     0,   725,   726,   727,   728,   729,
     730,   244,   245,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,     0,
       0,   254,   255,   256,   257,   258,   259,     0,  -568,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,     0,     0,     0,     0,   269,
    5236,     0,   270,   271,     0,   272,   273,     0,     0,     0,
       0,   276,   277,   278,  5237,   280,   281,     0,   282,   283,
       0,   284,   285,     0,   287,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,     0,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,     0,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,     0,
       0,     0,   320,   321,   322,     0,  -556,     0,   323,     0,
    -556,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,     0,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,  5238,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,     0,   362,     0,     0,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,  5239,     0,   370,     0,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
       0,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,  5240,     0,     0,   382,     0,   383,     0,
       0,     0,   385,     0,     0,   386,  5241,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,  -523,     0,
       0,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
       0,   413,   414,   415,     0,   416,   417,   418,   419,     0,
     420,   421,     0,     0,     0,     0,   422,   423,   424,   425,
     426,   427,     0,     0,   428,   429,     0,   430,     0,   431,
       0,   432,   433,   434,   435,   436,   437,   438,   439,   440,
       0,     0,   441,   442,     0,     0,   443,   444,   445,   446,
     447,     0,     0,     0,     0,   449,     0,     0,     0,   450,
       0,   451,   452,     0,   453,   454,  5242,     0,     0,   456,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   457,
     458,   459,     0,   460,     0,   461,     0,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,     0,     0,     0,
       0,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   482,   483,   484,     0,     0,   485,     0,     0,
       0,   486,   487,     0,   488,   489,     0,     0,   490,   491,
     492,   493,   494,     0,   495,   496,     0,   497,     0,   499,
    -523,     0,   500,   501,   502,   503,   504,   505,   506,   507,
       0,     0,     0,   509,   510,     0,   511,   512,   513,  5243,
     514,     0,     0,     0,   516,   517,   518,     0,   519,     0,
     520,   521,     0,   523,   524,     0,   525,   526,     0,     0,
       0,   527,   528,   529,   530,     0,     0,     0,   531,     0,
       0,     0,     0,     0,     0,   534,     0,   536,     0,   537,
     538,   539,   540,   541,     0,     0,     0,     0,     0,   542,
     543,   544,     0,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,     0,   551,   552,   553,   554,     0,
       0,     0,   556,     0,     0,   557,   558,   559,   560,   561,
     562,     0,     0,   563,   564,   565,   566,     0,   567,   568,
       0,     0,   569,   570,   571,   572,     0,     0,   573,   574,
       0,   575,   576,   577,   578,     0,     0,     0,     0,     0,
     579,   580,     0,     0,     0,     0,   582,   583,     0,     0,
     584,   585,     0,   586,   587,     0,     0,     0,     0,     0,
     590,     0,     0,   591,     0,   592,     0,   593,   594,     0,
       0,     0,     0,     0,   595,     0,   596,     0,     0,   597,
       0,     0,     0,   598,     0,   599,   600,   601,   602,  -556,
       0,  -523,     0,     0,     0,   603,   604,   605,     0,   606,
       0,   608,   609,     0,     0,   610,     0,     0,   611,   612,
     613,   614,   615,     0,   616,     0,     0,     0,     0,     0,
       0,     0,     0,   617,   618,   619,     0,   620,   621,   622,
       0,     0,     0,     0,   624,     0,   625,     0,     0,     0,
       0,     0,     0,   626,   627,     0,     0,   628,     0,   629,
       0,   630,   631,     0,     0,     0,   632,   633,   634,   635,
     636,   637,   638,   639,     0,   640,   641,   642,     0,   644,
     645,   646,   647,   648,   649,     0,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
       0,   674,   675,   676,   677,   678,   679,   680,     0,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,     0,     0,   725,   726,   727,   728,   729,   730,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,     0,     0,
     254,   255,   256,   257,   258,   259,     0,  -568,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,     0,     0,     0,     0,   269,  5236,
       0,   270,   271,     0,   272,   273,     0,     0,     0,     0,
     276,   277,   278,  5237,   280,   281,     0,   282,   283,     0,
     284,   285,     0,   287,     0,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,     0,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,     0,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,     0,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,  5493,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,     0,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,  5238,   344,   345,
     346,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
       0,   362,     0,     0,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,  5239,     0,   370,     0,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,     0,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,  5240,     0,     0,   382,     0,   383,     0,     0,
       0,   385,     0,     0,   386,  5241,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,  -523,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,     0,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,  5242,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,     0,     0,     0,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,     0,   499,  -523,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
       0,     0,   509,   510,     0,   511,   512,   513,  5243,   514,
       0,     0,     0,   516,   517,   518,     0,   519,     0,   520,
     521,     0,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,     0,     0,     0,   534,     0,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,     0,   551,   552,   553,   554,     0,     0,
       0,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,     0,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,     0,     0,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
    -523,     0,     0,     0,   603,   604,   605,     0,   606,     0,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
       0,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,     0,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,     0,     0,   725,   726,   727,   728,   729,   730,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,     0,     0,   254,
     255,   256,   257,   258,   259,     0,  -568,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,     0,     0,     0,     0,   269,  5236,     0,
     270,   271,     0,   272,   273,     0,     0,     0,     0,   276,
     277,   278,  5237,   280,   281,     0,   282,   283,     0,   284,
     285,     0,   287,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,     0,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,     0,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,     0,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,  -561,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,     0,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,  5238,   344,   345,   346,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,     0,
     362,     0,     0,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,  5239,     0,   370,     0,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,     0,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,  5240,     0,     0,   382,     0,   383,     0,     0,     0,
     385,     0,     0,   386,  5241,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,  -523,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,     0,   416,   417,   418,   419,     0,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   426,   427,
       0,     0,   428,   429,     0,   430,     0,   431,     0,   432,
     433,   434,   435,   436,   437,   438,   439,   440,     0,     0,
     441,   442,     0,     0,   443,   444,   445,   446,   447,     0,
       0,     0,     0,   449,     0,     0,     0,   450,     0,   451,
     452,     0,   453,   454,  5242,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
       0,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,     0,     0,     0,     0,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     482,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,     0,   499,  -523,     0,
     500,   501,   502,   503,   504,   505,   506,   507,     0,     0,
       0,   509,   510,     0,   511,   512,   513,  5243,   514,     0,
       0,     0,   516,   517,   518,     0,   519,     0,   520,   521,
       0,   523,   524,     0,   525,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
       0,     0,     0,   534,     0,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,     0,   551,   552,   553,   554,     0,     0,     0,
     556,     0,     0,   557,   558,   559,   560,   561,   562,     0,
       0,   563,   564,   565,   566,     0,   567,   568,     0,     0,
     569,   570,   571,   572,     0,     0,   573,   574,     0,   575,
     576,   577,   578,     0,     0,     0,     0,     0,   579,   580,
       0,     0,     0,     0,   582,   583,     0,     0,   584,   585,
       0,   586,   587,     0,     0,     0,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   593,   594,     0,     0,     0,
       0,     0,   595,     0,   596,     0,     0,   597,     0,     0,
       0,   598,     0,   599,   600,   601,   602,     0,     0,  -523,
       0,     0,     0,   603,   604,   605,     0,   606,     0,   608,
     609,     0,     0,   610,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,     0,     0,
       0,   617,   618,   619,     0,   620,   621,   622,     0,     0,
       0,     0,   624,     0,   625,     0,     0,     0,     0,     0,
       0,   626,   627,     0,     0,   628,     0,   629,     0,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,     0,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   674,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
       0,     0,   725,   726,   727,   728,   729,   730,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,     0,     0,   254,   255,
     256,   257,   258,   259,     0,  -568,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,     0,     0,     0,     0,   269,  5236,     0,   270,
     271,     0,   272,   273,     0,     0,     0,     0,   276,   277,
     278,  5237,   280,   281,     0,   282,   283,     0,   284,   285,
       0,   287,     0,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,     0,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,     0,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,     0,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,  5554,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,     0,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,  5238,   344,   345,   346,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,     0,   362,
       0,     0,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,  5239,     0,   370,     0,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,     0,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
    5240,     0,     0,   382,     0,   383,     0,     0,     0,   385,
       0,     0,   386,  5241,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,  -523,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,   447,     0,     0,
       0,     0,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,  5242,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,     0,     0,     0,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,     0,   499,  -523,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,     0,     0,
     509,   510,     0,   511,   512,   513,  5243,   514,     0,     0,
       0,   516,   517,   518,     0,   519,     0,   520,   521,     0,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,     0,
       0,     0,   534,     0,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,     0,   551,   552,   553,   554,     0,     0,     0,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,     0,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,     0,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,     0,     0,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,  -523,     0,
       0,     0,   603,   604,   605,     0,   606,     0,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,     0,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,     0,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,     0,
       0,   725,   726,   727,   728,   729,   730,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,     0,     0,   254,   255,   256,
     257,   258,   259,     0,  -568,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,     0,     0,     0,     0,   269,  5236,     0,   270,   271,
       0,   272,   273,     0,     0,     0,     0,   276,   277,   278,
    5237,   280,   281,     0,   282,   283,     0,   284,   285,     0,
     287,     0,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,     0,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,     0,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,     0,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,  5594,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,     0,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,  5238,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,     0,   362,     0,
       0,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,  5239,     0,   370,     0,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,     0,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,  5240,
       0,     0,   382,     0,   383,     0,     0,     0,   385,     0,
       0,   386,  5241,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,  -523,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
       0,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,  5242,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,     0,     0,     0,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,     0,   499,  -523,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,     0,     0,   509,
     510,     0,   511,   512,   513,  5243,   514,     0,     0,     0,
     516,   517,   518,     0,   519,     0,   520,   521,     0,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,     0,     0,
       0,   534,     0,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
       0,   551,   552,   553,   554,     0,     0,     0,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,     0,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,     0,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,     0,     0,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,  -523,     0,     0,
       0,   603,   604,   605,     0,   606,     0,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,     0,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,     0,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,     0,     0,
     725,   726,   727,   728,   729,   730,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,     0,     0,   254,   255,   256,   257,
     258,   259,     0,  -568,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   269,  5236,     0,   270,   271,     0,
     272,   273,     0,     0,     0,     0,   276,   277,   278,  5237,
     280,   281,     0,   282,   283,     0,   284,   285,     0,   287,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,     0,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,     0,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,     0,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,  -542,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,  5238,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,     0,   362,     0,     0,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,  5239,     0,   370,     0,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,     0,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,  5240,     0,
       0,   382,     0,   383,     0,     0,     0,   385,     0,     0,
     386,  5241,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,  -523,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,     0,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,  5242,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,     0,     0,     0,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,     0,   499,  -523,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,     0,     0,   509,   510,
       0,   511,   512,   513,  5243,   514,     0,     0,     0,   516,
     517,   518,     0,   519,     0,   520,   521,     0,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,     0,
     534,     0,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,     0,
     551,   552,   553,   554,     0,     0,     0,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
       0,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,     0,     0,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,  -523,     0,     0,     0,
     603,   604,   605,     0,   606,     0,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,     0,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,     0,     0,   725,
     726,   727,   728,   729,   730,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,     0,     0,   254,   255,   256,   257,   258,
     259,     0,  -568,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,     0,
       0,     0,     0,   269,  5236,     0,   270,   271,     0,   272,
     273,     0,     0,     0,     0,   276,   277,   278,  5237,   280,
     281,     0,   282,   283,     0,   284,   285,     0,   287,     0,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,     0,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,     0,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,     0,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,     0,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
       0,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,  5238,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,     0,   362,     0,     0,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
    5239,     0,   370,     0,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,     0,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,  5240,     0,     0,
     382,     0,   383,     0,     0,     0,   385,     0,     0,   386,
    5241,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,  -523,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,     0,   416,
     417,   418,   419,     0,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   426,   427,     0,     0,   428,   429,
       0,   430,     0,   431,     0,   432,   433,   434,   435,   436,
     437,   438,   439,   440,     0,     0,   441,   442,     0,     0,
     443,   444,   445,   446,   447,     0,     0,     0,     0,   449,
       0,     0,     0,   450,     0,   451,   452,     0,   453,   454,
    5242,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,     0,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,     0,     0,     0,     0,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   482,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,     0,   499,  -523,     0,   500,   501,   502,   503,
     504,   505,   506,   507,     0,     0,     0,   509,   510,     0,
     511,   512,   513,  5243,   514,     0,     0,     0,   516,   517,
     518,     0,   519,     0,   520,   521,     0,   523,   524,     0,
     525,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,     0,     0,     0,   534,
       0,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,     0,   551,
     552,   553,   554,     0,     0,     0,   556,     0,     0,   557,
     558,   559,   560,   561,   562,     0,     0,   563,   564,   565,
     566,     0,   567,   568,     0,     0,   569,   570,   571,   572,
       0,     0,   573,   574,     0,   575,   576,   577,   578,     0,
       0,     0,     0,     0,   579,   580,     0,     0,     0,     0,
     582,   583,     0,     0,   584,   585,     0,   586,   587,     0,
       0,     0,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   593,   594,     0,     0,     0,     0,     0,   595,     0,
     596,     0,     0,   597,     0,     0,     0,   598,     0,   599,
     600,   601,   602,     0,     0,  -523,     0,     0,     0,   603,
     604,   605,     0,   606,     0,   608,   609,     0,     0,   610,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,     0,     0,     0,   617,   618,   619,
       0,   620,   621,   622,     0,     0,     0,     0,   624,     0,
     625,     0,     0,     0,     0,     0,     0,   626,   627,     0,
       0,   628,     0,   629,     0,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,   639,     0,   640,
     641,   642,     0,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   674,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,     0,     0,   725,   726,
     727,   728,   729,   730,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,     0,     0,   254,   255,   256,   257,   258,   259,
       0,  -568,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,     0,     0,
       0,     0,   269,  5236,     0,   270,   271,     0,   272,   273,
       0,     0,     0,     0,   276,   277,   278,  5237,   280,   281,
       0,   282,   283,     0,   284,   285,     0,   287,     0,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,     0,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
       0,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,     0,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,     0,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,     0,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,  5238,   344,   345,   346,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,     0,   362,     0,     0,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,  5239,
       0,   370,     0,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,     0,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,  5240,     0,     0,   382,
       0,   383,     0,     0,     0,   385,     0,     0,   386,  5241,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,  -523,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,     0,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,  5242,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,     0,     0,     0,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,     0,   499,  -523,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,     0,     0,   509,   510,     0,   511,
     512,   513,  5243,   514,     0,     0,     0,   516,   517,   518,
       0,   519,     0,   520,   521,     0,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,     0,     0,     0,   534,     0,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,     0,   551,   552,
     553,   554,     0,     0,     0,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
       0,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,     0,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,     0,
       0,     0,     0,   590,     0,     0,  5496,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,  -523,     0,     0,     0,   603,   604,
     605,     0,   606,     0,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,     0,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,     0,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,     0,     0,   725,   726,   727,
     728,   729,   730,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,     0,     0,   254,   255,   256,   257,   258,   259,     0,
       0,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,     0,     0,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,     0,
       0,     0,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,     0,   287,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,     0,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,     0,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,     0,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,     0,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,     0,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,     0,   362,     0,     0,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,     0,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,     0,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,     0,   385,     0,     0,   386,     0,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,     0,   416,   417,   418,
     419,     0,   420,   421,     0,     0,     0,     0,   422,   423,
     424,   425,   426,   427,     0,     0,   428,   429,     0,   430,
       0,   431,     0,   432,   433,   434,   435,   436,   437,   438,
     439,   440,     0,     0,   441,   442,     0,     0,   443,   444,
     445,   446,   447,     0,     0,     0,     0,   449,     0,     0,
       0,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,     0,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,     0,
       0,     0,     0,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   482,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,     0,     0,
     490,   491,   492,   493,   494,     0,   495,   496,     0,   497,
       0,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,   507,     0,     0,     0,   509,   510,     0,   511,   512,
     513,     0,   514,     0,     0,     0,   516,   517,   518,     0,
     519,     0,   520,   521,     0,   523,   524,     0,   525,   526,
       0,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,     0,     0,     0,     0,   534,     0,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,     0,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,     0,   551,   552,   553,
     554,     0,     0,     0,   556,     0,     0,   557,   558,   559,
     560,   561,   562,     0,     0,   563,   564,   565,   566,     0,
     567,   568,     0,     0,   569,   570,   571,   572,     0,     0,
     573,   574,     0,   575,   576,   577,   578,     0,     0,     0,
       0,     0,   579,   580,     0,     0,     0,     0,   582,   583,
       0,     0,   584,   585,     0,   586,   587,     0,     0,     0,
       0,     0,   590,     0,     0,   591,     0,   592,     0,   593,
     594,     0,     0,     0,     0,     0,   595,     0,   596,     0,
       0,   597,     0,     0,     0,   598,     0,   599,   600,   601,
     602,     0,     0,     0,     0,     0,     0,   603,   604,   605,
       0,   606,     0,   608,   609,     0,     0,   610,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,     0,     0,     0,   617,   618,   619,     0,   620,
     621,   622,     0,     0,     0,     0,   624,     0,   625,     0,
       0,     0,     0,     0,     0,   626,   627,     0,     0,   628,
       0,   629,     0,   630,   631,     0,     0,     0,   632,   633,
     634,   635,   636,   637,   638,   639,     0,   640,   641,   642,
       0,   644,   645,   646,   647,   648,   649,     0,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,  2656,   674,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,     0,     0,   725,   726,   727,   728,
     729,   730,     0,     0,     0,  2657,  2658,  2659,  2660,  2661,
    2662,  2663,  2664,  2665,  2666,  2667,  2668,  2669,  2670,  2671,
    2672,  2673,  2674,  2675,  2676,     0,  2677,  2678,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2679,  2680,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2681,  2682,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2683,     0,  2684,  2685,  2686,  2687,  2688,     0,     0,
    2689,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2690,     0,     0,     0,     0,  2691,  2692,  2693,  2694,  2695,
    2696,  2697,  2698,  2699,  2700,  2701,  2702,  2703,  2704,  2705,
    2706,  2707,  2708,  2709,  2710,  2711,  2712,  2713,  2714,  2715,
    2716,  2717,  2718,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2719
};

static const yytype_int16 yycheck[] =
{
       6,    44,   900,     0,   913,     0,   115,    57,  1206,    15,
      43,    44,    18,     0,  1194,  1096,    22,  1047,  1048,  1359,
    1359,  1207,    97,    21,  1736,    31,  1308,  1259,  1199,   116,
    2535,  1664,    38,    43,  2266,    41,  1489,  1067,     6,    60,
      46,    39,  1187,    49,  1172,    43,   815,    53,  2266,    55,
    2259,    60,  1167,  1452,  1452,  2573,  2780,  1172,  1167,  1222,
    1281,  1282,  1879,  1172,    19,  2493,  2494,   227,  1910,    64,
    3277,  3126,  1413,    59,  1157,    30,  3003,    64,  2223,  1708,
      35,  3333,   776,  1301,  1537,  2557,  2808,  2223,  3440,  1310,
    2812,    97,  1222,  2765,  2566,  1221,  2899,  3195,  1375,  3548,
    1819,  1322,  1323,  1324,  2616,  2617,  1189,  1328,  3036,  1819,
    3928,  1192,  2444,  2618,  1785,  1196,  3780,  2449,  2531,  2532,
    1711,  2304,  1538,  1714,  1785,  1716,   121,  1785,   116,  1839,
    3948,  3949,  2299,  3386,  2606,    22,  2097,  2098,  2610,  3928,
    2765,  3068,   745,   746,  1065,  2340,  1367,  1857,  2805,  2110,
    2111,  2112,    21,  2540,  3122,  2248,  2813,  3831,  2187,  3045,
    1614,  3364,    49,  1720,  2805,  1722,  1723,  1724,  3449,  1821,
      39,  2504,  2813,  1825,  2972,  1074,  2765,  1631,  2765,  2782,
    1728,  1729,  1730,  2907,   121,  2813,   192,  1839,     9,  1799,
    1644,   885,   886,  2765,   888,  1375,  1650,  2604,  2605,  1851,
    1099,  1100,  1101,  1102,  1103,  2765,  1105,   901,    29,  3449,
    4600,  2304,  1172,    34,  4600,   221,  4541,   223,  3698,    21,
     226,   227,   228,   229,  1172,  1457,  1172,  3991,   759,   760,
      35,    52,   763,  2435,    21,  2437,    21,   243,    18,    19,
      52,    59,    11,    22,    71,  2555,    18,    19,  2450,    21,
       5,  2453,    71,    73,  2456,   223,    73,  2543,   226,    35,
     928,   929,   930,   125,    68,   933,   934,  2756,    77,   937,
    3055,   939,   940,   941,  2584,   943,  2586,  2587,   156,    71,
     125,   144,    18,    19,    18,    19,  2893,  4479,   197,   125,
     194,    64,    18,    19,    18,    19,  2528,  3901,  3902,  2531,
    2532,  3905,  1385,    21,  4502,   192,   197,   197,   156,   249,
      62,   156,  1544,    19,    31,  2798,  2799,  2800,   160,  3923,
     156,    39,   176,  1266,  1267,    43,   156,    18,    19,    18,
      19,   109,  2815,   263,  1944,   125,    18,    19,   194,    48,
     204,   246,   229,    18,    19,    18,    19,    23,  1246,  1017,
     156,   236,   131,    21,   194,   246,   243,  2840,   176,    35,
      70,  2844,   180,  2568,   769,   194,   156,   162,    73,   156,
      18,    19,    70,    49,    21,  2580,   194,  2860,  2861,   156,
      73,  4314,  3329,  2866,   126,    61,    62,   158,    18,    19,
      18,    19,    39,   231,  1274,  1275,  1276,    18,    19,  2882,
    2883,    18,    19,   156,    81,  1285,  2611,   103,  2891,   372,
     125,   235,   156,   326,   315,   156,  2888,  1125,   239,   200,
     193,   156,    48,  3830,   230,    65,  2909,  4727,    78,   285,
      18,    19,    18,    19,    47,  2767,  1316,  2642,   194,  1319,
    3889,   372,   156,    18,    19,   285,   111,  4421,  2954,    43,
     366,   500,  4629,   185,    33,    18,    19,   571,  1338,  1339,
     285,   197,  1342,   194,   571,  3187,   103,    18,    19,   231,
    3919,  3920,   130,   197,   282,    18,    19,    18,    19,   276,
    1360,  1361,  3735,    18,    19,  1365,  1366,   377,   156,   111,
     246,    12,   176,    18,    19,   571,   638,   379,   125,   455,
    1380,    37,    87,   379,   636,   401,   371,   636,  4112,   421,
    5279,  1409,   330,   194,   634,   246,   368,   455,   653,   127,
      19,  5030,    18,    19,    25,    23,  5035,   128,  1297,   285,
    2762,  1440,  1441,    18,    19,   127,   571,   571,   194,   315,
    1570,   276,  1311,   500,  2762,   406,   194,    37,  4421,    22,
     542,  1581,  1697,    21,   285,  4229,   315,  3229,    18,    19,
    3729,   388,   276,    61,    62,  3493,    65,   239,    35,   388,
     502,  4976,   400,   163,   428,   212,   235,   249,  3722,  3723,
    4453,   150,  3304,   241,    73,   246,  3091,   432,  3732,  3733,
     387,   680,   141,   753,   243,    62,   388,    52,    21,  4415,
    1745,   818,   691,   216,   263,    21,   386,   824,   276,   389,
     428,   235,    73,   235,   386,   276,   256,   389,    18,    19,
     150,   449,   150,  1532,    18,    19,  4824,  1230,   432,   285,
     130,   623,    48,   282,  3139,  2780,   130,  5042,   419,  4455,
     248,    18,    19,  3365,   417,    22,   510,  4436,   403,  5158,
     386,    74,   386,   389,  4318,   389,   248,   469,   131,   501,
     386,   403,   386,   389,   372,   389,   818,   168,   625,   376,
     249,  3143,   824,   585,  3179,  3180,   608,  1586,    67,  1760,
    1761,   823,   534,   219,   194,  1379,  2315,   368,  2317,   824,
     492,   823,   293,   455,   823,   386,   275,   456,   389,  3171,
    3172,  3173,  3174,   823,   386,   819,   571,   389,  1607,   198,
    2942,   386,  1611,   386,   389,   822,   389,  1616,   387,   387,
     392,  3928,  3055,  1417,  2942,  5050,   387,  4247,   192,   219,
     890,   368,   400,  5502,  1265,  3942,  4913,   160,   386,   745,
     746,   389,   818,  1437,   428,   608,    77,   753,   259,   755,
    3678,   204,  1651,  1652,   131,  3227,   386,   256,   386,   389,
     642,   389,  3234,   565,   285,   386,   642,   231,   389,   386,
     578,   727,   389,  1994,   823,   546,   464,  3449,   799,   158,
     605,  2180,  2180,   818,   565,   517,  4390,   144,  1496,   727,
     799,  2190,  1460,  3103,  3299,   344,  4400,   658,   386,   464,
     386,   389,  4776,   389,  4408,   602,  3038,   708,  3314,   815,
     487,   386,   235,   729,   389,  2036,  2999,   619,   275,  3622,
    3038,  3624,  5122,   386,  3342,   293,   389,   987,  5026,  5027,
     603,  2541,   542,  2543,   636,   386,  5161,  2508,   389,   535,
     263,  4445,   427,   386,   542,   386,   389,  2508,   389,   627,
    2508,   386,  5044,  1456,   389,   693,   819,   562,   745,   746,
    3069,   386,   441,  1268,   389,   582,   796,   647,  3201,   611,
     622,  3258,   485,  3260,  4807,   647,   582,  3079,   571,   810,
     614,  2438,  2439,   823,   890,   770,   892,  1047,  3071,   753,
     386,   897,   716,   389,   889,  1055,  1056,  2118,  3825,   634,
    3045,   386,   889,   698,   389,   818,  2999,  1510,  3413,  3045,
    3415,   647,   552,   647,   823,  1075,  2945,  1520,   823,   823,
     634,   647,   818,   647,   600,   931,   386,   636,   612,   389,
     936,   262,   823,   823,  3881,  1010,  3408,  3722,   747,  3411,
    4347,   602,  2903,   821,   594,   823,  3418,    18,    19,   625,
     608,  3423,  3424,  3425,  3426,  3427,   647,  3446,   647,  1902,
     823,   823,  3434,   819,   432,   647,   634,  3439,  2785,   823,
    3442,  2116,   647,   821,   647,   823,   821,  5302,  3071,   819,
    3266,   987,   824,   738,   739,   821,   386,   993,  1948,   389,
    3199,   821,   386,   823,   823,   389,   823,  3944,   818,   647,
     819,   818,   771,  1009,  1010,   823,  3613,   722,  4261,   386,
     636,   823,   389,   818,   469,   821,   818,   647,   794,   647,
     824,  2654,   819,   796,   646,  1185,   647,   819,   655,   656,
     647,   821,  1038,  1976,   821,   571,  3519,  4855,   823,   818,
     630,  1047,    18,    19,   821,  4143,   823,   819,   828,  1055,
    1056,   823,   823,   552,  1052,  1065,  1216,   510,   695,   647,
    1591,   647,  4826,   819,   633,    18,    19,  1065,   821,  1075,
     823,  1158,   647,   562,  3279,  5273,  3559,   821,  3561,   823,
     821,   571,   823,   819,   647,  2756,   821,  2720,   819,   823,
    1199,  1200,  3575,  2325,  3577,  2756,   647,   823,  2756,   823,
    1980,   562,   600,   633,   647,   633,   647,   821,   608,  3592,
    4279,  4280,   647,  1200,   608,   823,   823,  1123,  1124,  4263,
    4640,   510,   647,   944,  4376,  3330,   636,  1133,   819,    18,
      19,   584,   823,  3338,  3444,   823,  1211,   819,  3343,   823,
     651,   823,   818,   500,   819,  3628,   819,   819,   823,   613,
     823,   647,   246,   821,   823,  1150,  2766,  1163,   819,   582,
     472,  4641,   647,  1150,  1159,   582,  3008,   546,  2048,   160,
    1158,   819,  2052,   108,   642,  5561,  3694,   634,   282,  1185,
      18,    19,   276,  1258,   219,  1006,   263,   647,  1194,   819,
      85,  1012,   790,   823,  2074,   823,   400,  5587,   819,  1187,
     373,  1207,   823,   429,   387,  1211,   823,  1213,  1214,  1206,
    1216,  1206,  1218,  2445,   636,  4418,   255,  1223,  3450,  1206,
    1226,  1227,  1159,    13,  1230,   366,  2412,  5552,   547,  4436,
    4511,  1237,  3450,   819,  2114,   823,  1123,   823,   276,   611,
     292,  1247,  1248,  1249,   819,     9,  1252,   647,   823,  1255,
    2590,  2590,  1258,   647,  1260,   481,   819,  1263,  1264,  1227,
     823,  1259,   860,   812,   813,   814,   815,    31,   819,   174,
     647,  4511,  3875,  3876,   415,   371,  1436,  2046,   400,  1329,
     823,   640,   823,   483,  2314,   293,   221,   209,   823,   455,
    1450,  1297,   562,   387,   811,   565,   197,  3009,   823,  1386,
     753,  2382,   819,  3775,    57,  1311,  3811,    18,    19,   628,
     565,   484,  1307,  2493,  2494,   386,    18,    19,   389,  4247,
    1307,   176,    18,    19,   655,   656,  1486,   823,    18,    19,
    2963,   486,   315,   125,  1052,  4303,   708,   112,   823,  2467,
     115,   611,   123,  1230,    52,   652,  5164,  1065,   249,   387,
     140,   565,  2467,  1359,   160,    18,    19,  3862,  2467,   563,
     282,    18,    19,   823,  1414,  1415,  2765,  2765,  1418,  1375,
    4256,  1421,  1422,  1423,    18,    19,  1426,  1427,  1428,  1429,
    1430,  1431,  1432,  1433,  4443,   352,  1392,  4446,  4992,  1395,
    4994,    18,    19,   432,   160,  1416,    18,    19,   293,  4071,
    2526,   823,   454,  1478,  2530,  1052,   823,  1416,  3041,  3042,
     386,  2537,  1943,   389,  2335,  4767,  4768,   748,   749,   602,
    4218,   243,  2343,   823,   432,  3832,   571,  1958,   194,   823,
    1436,  3460,  3144,   386,    18,    19,   389,  1443,  1444,  1445,
    1446,   563,  1448,  1449,  1450,   377,  4071,  1453,  1454,  1455,
    1456,   179,  1458,  1459,  2223,   681,   355,  1463,   393,  1457,
    5278,  1536,  2625,  2626,  3982,  3983,   247,   571,   403,  1475,
    2164,  1065,  1478,  4130,  3503,   410,  2375,  1445,  1553,  3866,
    1486,  1449,  4071,  1489,  4071,  1453,  2385,  1493,  1494,  4130,
    2389,  3824,  1490,  2392,    23,  2625,  2626,   386,    71,  4071,
     389,  3668,  4130,  1509,  1510,  3714,    35,  2467,   602,  5183,
     501,  4071,   824,  1519,  1520,  2183,  1522,  1523,    11,  2467,
      49,  2467,  1597,  3080,  3081,  3734,   603,   510,  4000,  2982,
    1536,  1537,    61,    62,   156,  5199,   571,  1612,   377,  1545,
     158,  1259,  4199,  3710,  2943,  2943,  1544,  1553,   386,  1582,
    1710,   389,  3369,  1541,    18,    19,  3266,  3752,  4199,   464,
    3270,   727,  1568,  2979,   602,  4070,  1164,  3115,  3159,  1456,
    1576,  4199,  1582,   428,  5392,   497,   647,  1737,    65,   514,
    3763,  2922,  4637,   635,  1582,  4788,  1592,  1593,  1594,  1595,
    1596,  1597,  1598,  3795,  2197,  3048,    18,    19,    18,    19,
      18,    19,  1608,  1690,  1610,  3162,  1612,  3164,  3165,  1615,
    2831,  1771,  1259,   122,   158,   368,   125,  1692,   818,   237,
    2897,  1490,  1509,  1510,  1592,  1593,  1594,   723,  1596,    44,
    5419,  3047,  1519,  1520,   642,  1522,   636,  2858,   742,  2765,
     432,  1462,  1610,   371,  3827,  2927,  2928,  1615,  3367,   278,
     582,  1726,  2346,   434,  3107,  4068,  4069,  3367,  3368,  3620,
     368,  4914,  3623,  3117,  3118,  1671,  1672,    18,    19,  4391,
    3763,   647,   571,   818,   167,   386,   611,  4182,   389,   188,
    1686,   369,   237,  4742,   386,   125,  1692,   389,  4360,   125,
     386,    18,    19,   389,   647,   501,   386,   596,   122,   389,
      21,    77,    71,  4186,  1710,    18,    19,   200,  1595,  1697,
     219,  1598,  4640,  4185,    21,  5067,  3368,  2897,  5167,  2937,
    1726,  3750,   162,   386,   209,  4977,   389,   406,   614,   386,
     652,  1737,   389,   122,  3827,   501,    18,    19,   238,  1457,
     562,  4073,   386,   565,   191,   389,   713,   714,   715,   671,
    5332,   369,   823,  5571,  1749,   153,   432,   612,   647,   386,
    1766,   469,   389,  1758,   386,  1771,   164,   389,   549,   256,
     753,   271,  1490,    71,   258,  3446,   582,    18,    19,  4877,
      77,   290,  1788,  1789,   571,  3446,   125,  3497,  3446,  4294,
     125,  4594,   500,   332,    40,    19,   165,   282,   703,   704,
     575,   483,   386,   578,   139,   389,   287,    18,    19,   647,
    1457,   794,  4317,   243,   369,   388,   582,  3846,   614,  5171,
     614,    18,    19,   823,  4329,   369,  1544,    18,    19,  4334,
    3229,  3229,    18,    19,   139,   156,  4068,  4069,  3680,  4511,
    3072,  3073,  3074,  1490,   197,   122,  3377,   823,   368,   400,
    1883,   680,   481,    18,    19,    18,    19,   634,   546,  3407,
     588,  3409,   691,   372,  1582,     0,   290,   165,   349,   216,
     823,  3419,  3420,  3421,  3422,   746,   604,   364,  5130,    21,
    3428,  3429,  3430,  3431,  3432,  3433,   262,  3435,  3436,  3437,
    3438,   823,  4820,    18,    19,  3443,   203,  1544,  1904,  1905,
    1886,   290,   741,   742,   811,     9,   245,    80,   198,    82,
     231,   188,   819,   784,  1920,   138,   263,    13,    18,    19,
    3001,   446,   386,   822,  4648,   389,   419,   447,   546,  5511,
    5512,   371,    18,    19,   823,   371,   647,   823,   824,   354,
     237,   629,  3971,  3474,  2104,   647,    18,    19,   372,     7,
    1956,   647,   125,  1959,  1960,  1961,   743,   647,   355,    53,
     636,   492,  2122,  1969,   386,   412,   386,   389,   386,   389,
      64,   389,    18,    19,   277,   148,   476,   280,  3377,   658,
    5240,  5241,   818,   372,   647,   823,   470,   385,  1582,  4321,
     647,   546,  1960,  1961,   240,  4327,   331,   614,    18,    19,
      18,    19,   546,   647,   228,   228,    18,    19,   533,   362,
    2890,   629,   497,   290,   187,    18,    19,  4739,  1905,   388,
     647,   360,  5374,  3104,  4053,   647,   331,   823,   824,   823,
     569,  3112,   197,  1920,   565,   386,    18,    19,   389,   532,
    2046,  2047,    18,    19,   140,   137,   823,   534,    18,    19,
    3449,  3449,   141,    18,    19,    13,   595,    18,    19,   386,
     152,   542,   389,   647,  2224,   552,   363,  3097,  4421,  1956,
     100,   600,   369,   386,   629,  3474,   389,    18,    19,   400,
     138,  4564,   186,   536,   593,   629,   144,   156,   619,   231,
     388,    18,    19,   586,   414,   372,  4509,  4510,  2104,  2149,
    4453,    18,    19,  2263,   386,    18,    19,   389,   819,   399,
     574,  4256,  2162,  3742,  3743,  2165,  2122,   570,  2139,   160,
    4256,   823,   231,   819,   220,   282,   429,  3760,    18,    19,
    2139,   571,   562,   823,   455,   565,   160,    18,    19,    18,
      19,   438,  2163,  5204,   167,   386,  5207,  2142,   389,   372,
     562,  2311,  5079,   565,  2163,  2142,   643,   571,    18,    19,
     823,    21,  4345,  4346,  2170,    25,   823,  2327,  4351,   593,
     228,   492,   570,  2179,   571,   386,   212,   200,   389,   823,
      18,    19,   140,   647,   293,    13,    18,    19,   282,   386,
     194,  2197,   389,  2268,  2269,   386,   823,  4429,   389,   596,
     386,  3792,   819,   389,   593,  3796,   823,  2901,   238,   571,
     108,  4429,  5419,   370,   128,   591,  2222,  2223,  2224,   509,
    3673,   386,   258,   386,   389,   647,   389,   647,   258,   647,
    2924,   212,  2926,  2239,  4195,   819,  4197,  2243,   614,  5499,
    5500,   271,   246,  4596,   565,  2251,   235,  3479,  2254,   546,
      18,    19,  4345,  4346,  3653,   344,   186,  2263,  4351,  3712,
     137,   386,  2268,  2269,   389,    86,   439,   186,    13,   167,
     125,  4088,  4784,  4785,   263,   152,  3045,  4509,  4510,   655,
     656,   285,    18,    19,   105,   343,   386,   818,  2448,   389,
      18,    19,  2179,  2299,  2303,  2301,   647,  2303,   619,  3640,
     386,   598,   200,   389,   563,  2311,   220,   162,  3761,   230,
    2197,  2386,   140,   455,   386,   636,   593,   389,   732,   428,
     647,  2327,    18,    19,   354,  2335,  2486,  2325,    18,    19,
    2328,    13,   629,  2343,   647,  2222,   266,  2335,    77,  5400,
     386,    19,   432,   389,    13,  2343,   122,   266,    13,    38,
     492,   387,   227,  2359,   229,  3695,   448,    46,  3698,  3698,
      18,    19,  4834,   453,  2251,   647,   386,  2254,   386,   389,
     732,   389,   748,   749,   386,    18,    19,   389,   622,   293,
    2386,   625,   239,   386,  2390,  2391,   389,   479,    18,    19,
    2411,  4233,   249,   216,  1749,   140,   419,   819,    77,   819,
     212,   819,  2411,  1758,   386,   495,   647,   389,    18,    19,
     386,   400,   188,   389,  3635,  4933,   386,  4935,  2578,   389,
    4892,   386,  3505,   565,   389,   386,    18,    19,   389,    64,
     526,   527,   111,   529,   530,   531,   647,    18,    19,    74,
     263,  4650,  2448,  4626,   591,   386,   476,  2445,   389,   368,
     647,  2484,   548,   100,    89,  2615,   647,   508,   140,   386,
     249,   647,   389,   141,   667,   167,   669,   614,   819,   386,
    2476,   140,   389,   386,   680,   140,   389,   619,   127,   158,
    2486,  2514,   647,   272,   647,   691,  3649,  2493,  2494,    18,
      19,  3831,   819,  2499,   636,  2504,   386,   818,  2504,   389,
     821,  2476,   823,  2390,  2391,   386,   819,   386,   389,   532,
     389,   234,   235,   141,   290,   137,   371,    19,   548,   818,
    3650,   419,   647,   262,  2499,    33,   386,  2533,   680,   389,
     152,  2564,   818,  4626,  2540,   392,   822,   819,   261,   691,
    2546,  2547,  2548,  2549,  2550,  2551,  2552,   647,   386,  3722,
    2556,   389,  2558,   824,   386,   606,   235,   389,  3731,   300,
     301,   647,  2568,   586,  2570,  2571,   582,  2573,  5623,  2575,
    2576,    19,  2578,  2579,  2580,   647,   230,  3486,   819,  2585,
      61,    62,  2588,   179,  2590,   787,   788,  2542,   790,  2595,
      71,   238,  2598,  2599,  3675,   103,   372,   235,  2553,   650,
     235,   647,   819,  2609,  2559,  2611,   823,  2325,   819,  2615,
    2328,   258,  2499,   455,   122,  5127,  5128,  2335,   386,  3959,
    3959,   389,   819,   212,   271,  2343,  2632,   647,   819,   647,
     365,   366,    32,   819,  2589,   647,  2642,  2643,  2593,   141,
      26,   563,   321,   819,   647,  2600,  2601,   823,  2808,   212,
     386,   819,  2812,   389,  5126,   823,   819,    26,   386,   819,
     339,   389,   194,   823,  5388,   647,   344,   565,   197,   235,
    4380,   647,  4071,  4071,  5102,    12,   818,   647,  2325,    79,
     188,  2328,   647,   819,   363,   565,   647,   823,   586,   818,
     386,    61,    62,   389,   819,    82,   386,   636,    84,   389,
     639,    71,  2777,   444,   445,   818,   647,   354,  5213,   241,
      18,    19,  2599,   611,    84,    84,   344,  4534,  3627,   819,
     647,   810,   811,   812,   813,   814,   815,  2445,   386,   627,
     647,   389,   823,   819,   647,  4292,  4293,   245,   125,    18,
      19,  2335,   818,   386,   819,  2632,   389,   819,   823,  2343,
     818,  2757,    18,    19,   154,  2761,   386,   647,     7,   389,
     571,   148,    26,    26,    77,  4933,   647,  4935,   647,   365,
     366,  2777,   158,   819,   819,   371,   386,    26,   823,   389,
    2786,  2787,   290,    18,    19,   818,  2836,   647,   212,   819,
    2785,   818,   160,   161,   386,  2955,   818,   389,  2445,   819,
     187,   819,  2808,   818,  4257,   386,  2812,   819,   389,   647,
      61,    62,  5536,    77,    77,   647,   819,   593,   818,  2787,
      84,    84,  4104,   818,    23,   503,   504,  1139,  1140,   476,
    1142,   965,  1144,   201,   968,    84,    35,   819,   818,   973,
     818,  3264,   344,   819,   978,   158,   214,   717,   718,   819,
      49,   237,  3275,  3276,   819,  4137,  4138,   386,   819,   818,
     389,   818,    61,    62,   372,  3764,   818,   546,   237,   818,
    2757,   818,   819,  2948,  2761,   503,   504,   716,   819,   647,
     818,  4163,   666,   667,   563,   669,   254,  2893,   396,  4229,
    5395,  2897,   819,   818,   158,   144,   819,   636,   818,   267,
     823,   548,   819,   818,   319,   320,   819,  3816,  3817,   324,
     325,   647,  4049,   177,   177,   818,   655,   656,   197,   647,
     184,   184,   818,   455,   237,  5157,   294,  4064,  4149,   819,
     819,   818,  2938,  2939,   823,  2930,   322,  4898,   819,  5157,
     819,   824,  2948,  2930,  4089,  4071,  4074,   818,  3642,  2955,
     818,   647,   819,   322,  4664,  4665,   823,   647,  4144,  4074,
     492,  4360,  4360,   563,   828,  4074,  2972,  4515,  4516,  4517,
    4518,  2977,   818,   237,   237,  2981,  2982,  5186,   818,  5211,
    5212,   819,    21,   369,   848,   818,  4207,   819,   237,   647,
     358,   818,   588,  5211,  5212,   150,   151,   861,   862,   122,
     369,   503,   504,   819,   647,  3011,   122,   823,   604,   748,
     749,   818,  4447,   818,   414,  4450,  4451,   647,   655,   656,
     818,  3027,  3028,   764,   765,   819,   819,  3187,   818,   823,
     823,   819,  3053,   565,   819,   823,   436,   647,   823,  3045,
     818,  3036,  3048,   120,  3053,   818,  3055,   212,   819,  3055,
     363,   819,   823,   819,   818,   647,   369,   823,   322,   322,
    3055,   100,   818,  2625,  2626,   188,   647,  3100,  3055,    47,
      48,   818,   188,   322,  3072,  3073,  3074,   477,   386,   492,
      37,   389,   135,   819,   818,   593,  3136,   619,  3138,   819,
    3100,   819,   818,   823,  3254,   480,   219,  1346,  1347,   363,
     363,  3107,  3100,   219,   636,   369,   369,   386,  1648,  1649,
     389,   819,  4511,  4511,   818,   823,   418,   156,   647,   818,
     369,   818,  3128,   819,  3011,   438,  5598,  3133,   653,   819,
     808,   809,   810,   811,   812,   813,   814,   815,   538,   384,
    3027,  3028,  5614,    12,  3304,   562,   819,   818,   818,   226,
     823,   386,   565,   480,   389,   194,   818,   818,   115,   819,
     546,   819,   819,   823,   377,   122,   823,   290,  5640,  4622,
     380,   819,   818,   212,   290,   823,   819,   546,   217,   122,
     197,  3187,   810,   811,   812,   813,   814,   815,   696,   819,
     231,   818,  3201,   818,  4647,  3201,  3202,  3203,   819,   238,
     818,   450,   823,   141,  3364,  3365,   619,   246,    59,   819,
    4396,   819,   246,   819,   818,   823,  4246,   823,  3224,   258,
     819,  4407,   179,   636,   823,  4362,   194,   819,   818,   141,
    4367,   188,   271,   546,  4371,   818,   563,   276,   819,   108,
      64,   568,   818,   629,   818,   188,   285,   819,  3254,   372,
      74,   823,  3258,   818,  3260,   194,   372,   334,   127,  3265,
     629,   338,   219,   818,  3270,    89,   574,    64,   345,   197,
     819,   818,  3530,  3279,   823,   141,   219,    74,   818,   122,
     818,  3287,   546,   546,   611,   598,   818,   818,   818,   620,
     156,  3451,    89,  3551,   818,    12,  4636,   546,  3304,   819,
     627,  4641,  4641,   823,  3310,   818,   808,   809,   810,   811,
     812,   813,   814,   815,   819,   354,   629,    64,   823,   819,
     818,   492,   818,   823,  3330,   176,   653,    74,   818,   180,
     819,   200,  3338,   290,   823,   818,  3342,  3343,   377,   647,
     819,   818,    89,   194,   823,   188,    33,   290,   387,   426,
     818,   818,  3358,   819,  3072,  3073,  3074,   823,  3364,  3365,
     819,   818,   748,   819,   823,   629,   629,   823,   647,   193,
     246,   818,   500,   819,   243,    37,   219,   823,   818,   748,
     629,   818,  3100,   819,   227,    21,   229,   823,   819,  3395,
     818,   108,   823,   819,   565,  4532,   193,   823,   355,   818,
     818,   600,   199,   141,  3410,   818,   344,   492,   818,   818,
     127,   235,   647,   490,   371,   372,   802,   286,   377,  3506,
     819,   818,   621,   622,   823,  3072,  3073,  3074,   818,   372,
     819,   819,   344,   802,   823,   823,   819,   476,   235,   263,
     823,   818,   500,   212,   824,  3451,   193,   290,   619,   620,
     823,   166,   199,   115,   141,   818,   276,   194,   819,  5092,
     122,   500,   823,   542,   100,   636,   263,    13,   819,   819,
     593,  3358,   823,   823,   103,   562,   166,   593,   344,   330,
     565,  3479,   199,   222,   748,   748,  3492,  4256,   235,  3495,
     819,  3497,   542,   122,   823,   211,   819,    43,  3493,   748,
     823,   819,  3497,   287,   542,   823,  3100,  3502,  3503,   548,
    3497,   157,   122,  3508,   824,   125,   263,   179,   235,   818,
     156,  4707,  4708,   823,  4710,   823,   188,   818,    96,   372,
     824,  4813,   818,    48,   619,   156,   156,   197,   802,   802,
     111,   819,   818,   160,   821,   160,  4717,  4718,    94,   822,
     419,   636,    98,   802,   631,   160,   823,   219,   194,   188,
     249,   293,   249,   602,    48,   503,   504,   195,   160,   286,
     383,   171,   649,    21,   532,   614,   212,   428,   188,   193,
     696,   217,   100,   518,   708,     7,   263,   263,   275,    71,
      13,   503,   504,   417,   819,   634,   633,   636,  5310,   819,
     140,    10,   238,   400,   823,  3492,   344,  3613,  3495,   219,
     246,   819,   824,   819,   571,  3690,   245,    37,   575,   819,
     417,   578,   258,   819,   819,  3631,   819,  3885,   290,   498,
     141,   588,   819,   501,   122,   271,   593,   503,   504,   596,
     276,   818,   300,   301,   275,   666,   377,   818,  4557,   285,
     593,   708,   100,   614,   141,   562,   100,   344,   697,   515,
    3918,   290,  3668,   823,    50,    30,  3672,  3673,  3926,   282,
     417,    30,   389,  3679,    31,  3933,   287,   823,   365,   366,
     290,   582,   823,  3678,  3690,   823,   486,    71,  3694,  3695,
     732,   571,  3698,   355,   563,   115,   565,   273,   823,   249,
     188,   823,   122,  3698,  3710,   367,  3712,   253,   156,   371,
     372,  3698,   657,  3722,  3723,   822,  3722,  3723,   354,   823,
     238,   518,  3731,  3732,  3733,  3731,  3732,  3733,   824,   812,
     599,   219,   252,   818,   560,  3785,   181,   122,   194,   823,
     258,   377,   611,   372,   192,   194,   194,   141,   194,    88,
     593,   387,   823,   271,   441,  3761,   823,    21,   823,   179,
     378,  3479,   372,   558,   212,   503,   504,   396,   188,   217,
     645,   518,  3778,   136,  3780,  4961,   156,  4963,  4964,   818,
     819,   498,   821,   231,   823,   331,   444,   445,  5350,   828,
     238,   819,  3679,    48,   238,   728,   786,   372,   246,   219,
     455,   518,   290,   188,   653,   728,   603,  4993,   727,   636,
     258,   571,   823,    87,   258,  3824,   503,   504,  3824,   502,
    3826,     7,   818,   271,   110,  3831,   582,   271,   276,   516,
     158,  4912,  3479,   344,   219,   400,   354,   285,   707,    74,
     476,   400,   400,  5183,   136,   261,   563,   141,   565,   395,
     261,   568,   582,   810,   811,   249,   603,   344,   400,   377,
    3866,   818,   400,   136,   500,   523,   524,   525,  3874,    48,
     290,   809,   810,   811,   812,   813,   814,   815,   400,   400,
     584,   400,   599,   400,   372,   618,   603,  5067,   500,   618,
     709,   823,   823,   491,   611,   819,   808,   809,   810,   811,
     812,   813,   814,   815,   627,   290,   354,   819,   818,   571,
     354,    21,   548,   575,   818,   823,   578,    27,   609,    57,
     447,   171,  5102,   377,   716,  5487,   588,     7,    35,   377,
     111,   593,   613,   377,   596,   355,   653,   377,     7,   387,
    3946,   591,   808,   809,   810,   811,   812,   813,   814,   815,
     344,   818,   372,  3959,    64,   249,  3962,  3963,   476,   200,
     819,    71,   819,   197,   593,    75,   602,    77,   823,   819,
     811,   517,   122,   819,   819,   125,  3982,  3983,   614,    89,
    3986,   819,  3988,   593,  5546,  3991,  5548,   372,   819,   819,
     707,  5171,   503,   504,    77,   818,   689,   819,   634,   796,
     636,   819,  5564,   819,    64,   819,   823,   819,  5290,   819,
      93,   819,   823,   559,    74,   125,   503,   504,  4927,   823,
     819,   819,   824,   122,   192,   819,   125,   818,   476,    89,
     548,   819,   476,   521,   721,   824,   815,   824,   188,   819,
    4835,   818,   818,  4049,   822,  4840,  5608,  5609,   823,   796,
     344,   158,   500,   824,   287,   162,   823,   287,  4064,     7,
    4066,   697,   287,   287,  5296,   287,   422,   696,   287,   219,
     808,   809,   810,   811,   812,   813,   814,   815,  4084,   796,
     797,   819,   823,   823,   160,   582,   377,  4093,    15,   188,
    5372,   634,   236,   203,    21,   202,   614,   823,   823,   823,
     548,   582,    27,   141,   548,   593,   764,   765,   582,   503,
     504,   400,    39,    13,   823,   222,    43,   160,   210,   377,
     219,   808,   809,   810,   811,   812,   813,   814,   815,   197,
      57,    58,   197,   193,   255,   582,    63,   432,   194,    64,
     290,   582,    35,   197,   824,   824,    71,   819,   810,   811,
      75,   571,    77,   263,   602,   575,   818,   824,   578,   824,
     824,   614,   823,    60,    89,   613,   614,   427,   588,   513,
     614,   607,   819,   593,  4969,   235,   596,   125,  4973,    56,
     287,   823,   265,   819,   404,   821,   634,   823,   636,    66,
     138,   290,   828,   194,  5374,   401,   144,  4084,   825,    76,
     125,   403,   789,   263,   789,   228,   403,   144,   593,   503,
     504,   103,  4218,    90,    91,    92,   571,   571,   571,  5559,
    5559,   341,   372,  4229,   331,   668,   823,   379,   824,   106,
      60,  4391,   477,   263,   263,  3533,  5031,  3535,   263,   597,
     492,  5036,   263,  5583,  5583,   818,   402,   706,   500,   697,
    4256,  4257,  4247,   377,  4263,   365,   366,  4263,  4418,   342,
     672,   371,  5602,  5602,   672,   158,   249,   377,   641,   162,
     160,   160,   160,   372,   160,   382,   160,   160,   160,   160,
     228,   160,  5622,  5622,   160,   368,   160,   160,    21,    77,
     160,   160,   160,    26,    27,    28,   160,   808,   809,   810,
     811,   812,   813,   814,   815,    93,   344,   417,   819,   202,
     160,   418,  4318,   565,   160,   160,   160,   160,   160,  5505,
     160,   808,   809,   810,   811,   812,   813,   814,   815,   222,
      63,   160,   819,   160,   160,   442,   160,   160,   263,   160,
     400,   160,   160,   160,    77,   160,   134,   430,   160,   160,
      83,    84,   160,  4386,    87,   160,  4362,   417,  4364,   160,
     467,  4367,   160,   160,   160,  4371,   160,   619,   620,   160,
     160,   819,   708,   821,  4380,   823,   286,    19,   111,   464,
     828,  5279,   653,   377,   636,  4391,   496,   791,   818,   154,
     810,   811,   125,   819,   287,   343,   129,   245,   819,   824,
     819,   819,   819,   654,   511,   819,   245,   571,  4414,   819,
     571,   824,  4418,   819,   808,   809,   810,   811,   812,   813,
     814,   815,  5620,   156,   372,   158,   457,   458,   459,   460,
     461,   462,   463,   823,   571,   542,   546,   492,   331,   582,
     365,   366,   824,   593,   818,   500,   371,   824,   824,   532,
     582,   823,   377,  4459,  4460,   562,   333,   818,   565,   197,
     384,   730,   212,   823,   732,   503,   504,   818,   818,   432,
     372,   197,   614,   350,  4480,   611,   823,   265,   108,   335,
       7,   156,   554,   818,   818,    12,   818,    14,    12,   382,
     403,   500,   417,   603,   593,     7,  4502,   403,   231,    26,
      27,    28,   235,   823,    73,   343,   532,   491,   532,   242,
     565,   377,  4480,   532,   808,   809,   810,   811,   812,   813,
     814,   815,   532,   263,   532,   418,  4532,  4414,   818,   262,
     818,    58,   263,   614,   591,   366,    63,   167,  4544,  4534,
     823,   563,   275,   636,   823,   655,   656,   563,   582,   442,
      77,   450,   372,   819,   342,   582,    83,    84,  5467,   818,
      87,   377,   819,   377,   619,   620,   818,   823,   212,    96,
     200,   496,  4459,    19,   467,  5605,   818,   365,   366,  4739,
     368,   636,   818,   571,   111,  3883,  3884,   818,   321,   818,
    3888,   818,   818,   785,   471,   705,   819,   472,   125,    62,
     818,   818,   129,   818,  5502,   235,   339,   818,  4717,  4718,
     137,   488,   247,   413,   247,   720,  4622,   144,   511,   729,
      21,   546,  4628,   751,   819,   152,  3924,    48,  4788,   819,
    4636,   158,  3930,  3931,  3932,  4641,  4642,  3935,   748,   749,
     494,  4647,   430,   819,   818,  4640,   823,   819,   687,   542,
     687,   285,  5561,   823,   819,    12,   286,  4544,   160,   546,
     823,   394,   384,   812,   231,   192,   642,   400,  4674,    56,
     403,   282,   818,   550,    35,   160,   197,   258,   603,    66,
     819,   258,   823,  4689,   819,  4845,   796,   794,   795,    76,
     567,   798,   799,   800,   801,   390,   819,   819,    48,   217,
     819,    62,   497,    90,    91,    92,   160,   160,   235,   823,
     160,   403,    48,   160,   818,   242,  5614,   818,   228,   106,
     103,  4727,   455,   245,   278,  4731,   792,   824,   368,   111,
     655,   656,   111,  4739,   162,   262,   818,   400,   729,   818,
     818,   818,  5640,   818,   532,   818,   440,   125,   819,   482,
     582,   112,   565,   228,   115,   383,   818,   810,   285,   492,
     377,   515,   123,   818,   377,   372,   245,   819,   819,   819,
     808,   809,   810,   811,   812,   813,   814,   815,   636,   819,
     705,   142,  4788,   819,   414,   400,   819,   197,   210,   419,
     582,   432,    21,   377,   321,   269,   824,   246,   197,   819,
     258,   258,   258,   697,   729,   538,   539,   540,   541,   823,
     823,   828,   339,   546,   160,   126,   343,   828,  4824,    21,
    4826,  4827,   828,   748,   749,  4820,   277,    48,   189,   403,
     563,    48,   565,   566,    48,  4910,   160,   153,    48,  4845,
     812,   477,    35,   818,   205,    35,   625,   608,  4854,   776,
     125,   729,   263,    64,   781,   263,   203,  4863,   263,    35,
     387,   372,   186,   818,   372,   372,   415,   394,   498,   602,
      77,   796,   377,   377,    21,   824,   403,   201,   818,   487,
     819,   819,   823,   515,   811,   819,   619,   819,   518,   819,
     214,   819,   823,   819,   265,   427,   819,   819,   341,   260,
     827,   794,   795,   636,  4910,   798,   799,   800,   801,   823,
      48,  4917,   819,   377,   387,   175,   285,   384,   279,   210,
      21,   147,   565,   450,   819,   258,   258,  4933,  4971,  4935,
     160,   120,   823,   563,   405,   120,    48,    48,   568,   819,
      48,   377,   266,   267,   620,   387,   333,   818,   619,   372,
     636,   818,   367,   818,  5366,   482,   586,    15,   885,   886,
      21,   888,   889,   350,   823,    81,   510,   818,   143,   599,
     294,   823,   372,   228,   901,   194,   823,   372,   819,    21,
      48,   611,   819,   341,   819,   346,   347,   348,   377,   173,
    4996,   724,   353,   384,   263,   356,   824,   627,   194,    21,
     160,   823,   276,   162,   318,   636,   673,   397,   818,    48,
     819,   538,   539,   540,   541,   748,   749,   797,  5430,   546,
    5026,  5027,    21,   653,   472,   818,   149,   112,   162,   608,
    4917,   636,   819,  5445,   819,   818,   563,   823,   362,   566,
     136,   819,   819,  5093,   819,   818,  5458,   408,   409,   818,
     818,   818,   818,   573,   136,   136,   818,   377,   158,   537,
     819,   653,   691,   823,   483,   483,   678,   691,   691,   802,
     997,    48,    48,   434,  5117,   602,   818,   707,   554,   534,
     155,   633,    32,  5089,   825,   818,    64,   384,   821,    64,
     819,    19,   416,   481,   819,   633,  5102,    32,   702,   197,
     384,   488,   384,   819,   134,  5517,   143,   483,   553,   636,
     228,  1038,   639,   691,   701,  5527,  5122,   688,     6,   464,
    5532,   377,   246,   377,   821,  1052,   154,    48,   171,   130,
     633,   608,  5138,   154,   292,   230,   821,   825,  1065,   124,
     231,   702,    54,   574,   821,   143,   818,   508,   372,   154,
     574,  5184,   215,   823,  5566,   821,  5568,   500,    54,   154,
     194,   194,   194,   550,   454,   574,  5326,   797,   125,  5329,
     635,   823,   377,   698,  5247,  3657,   196,  5183,  5590,  5185,
     567,  3400,  3404,  3398,  4826,  4829,  5192,  5193,  3402,    15,
    3416,  4834,  4062,  5199,  4839,  3859,  5277,   724,  4852,  5159,
    1267,  5453,  4854,  1794,  5454,  5049,  5640,  5598,  5214,  5369,
      46,  4218,  1113,  5625,  5626,  3044,  2977,   578,  5630,  5145,
    5226,   748,   749,  5145,  5145,  5145,  5145,  5145,  5145,  5610,
    5145,  5237,  5514,  5423,  5145,  5145,  5242,    63,     4,  5514,
    5500,  5449,  5145,  5145,  5448,   606,  5145,  4071,  2530,  2537,
    5247,  1221,  5247,  3653,  4511,    21,  4534,  4360,  3503,  2758,
    5247,  3508,  3502,  4313,  5397,  5315,  4952,  5273,  4724,  5476,
    5409,  5407,  2508,    39,  5117,   802,  2625,  4091,  4380,  3497,
    4381,  4433,  3902,  3935,  3934,  5419,  4436,  4753,   649,  5184,
    3609,  2545,  5031,  4973,  3265,  5121,  5036,  4731,  5296,  4969,
    4983,  1955,  4407,  4530,  4076,  2626,  3182,  3481,  1235,  3175,
    4805,  2626,  2398,  2625,  3965,  1119,  1768,  3033,  2400,  3296,
    5326,  1930,  3027,  5329,  1731,  1905,  4234,  3679,  3395,    64,
    2306,  3008,  1259,  1039,  2479,  1038,  5342,  2170,  4555,  2936,
    2102,  2897,  5088,  1270,  1271,  1392,  5067,  5374,  3055,  1311,
    5467,  5390,  1279,  1280,  1281,  1282,  1283,  1284,  5561,  5587,
      18,    19,  3055,  5369,  5407,  1292,  1293,  3055,  1295,  1296,
    3055,  4937,  4667,  1300,  1301,  3986,  5192,  1304,  1305,  1306,
    1307,  1285,  1309,  1310,  5390,  4291,  5193,  1133,  4676,  1671,
    1317,  1318,  5089,  1320,  1321,  1322,  1323,  1324,  3738,  3959,
    1327,  1328,  1329,  1330,  1331,  1332,  1333,  1334,  1335,  4893,
    1337,  5062,  4967,  1340,  1341,    16,  2486,  2180,  1345,  5579,
    2943,  3678,  1349,  1350,  1351,  1206,  5476,  5145,  1498,  4644,
    1206,  1669,  4253,  3676,  4627,  1362,  1363,  1364,  4636,  3678,
    1367,  1767,  1206,  1370,  1371,  1372,  1373,  1374,  1206,  1202,
    1008,  1629,  1379,  2383,  1203,  2384,  2965,  3358,   116,   117,
     118,   119,   120,  2278,  1391,  1392,  3682,  4341,  4714,  5622,
    2279,  5602,  1399,  5387,  1401,  1402,  5466,  4596,  4453,  4641,
    3202,  4940,  4698,  1395,  3410,  5382,  1413,  1414,  1415,  2328,
    1417,  1418,  1580,  3100,  1421,  1422,  1423,    43,  5145,  1426,
    1427,  1428,  1429,  1430,  1431,  1432,  1433,  2343,    43,  1024,
    1437,    39,  1490,  5519,  1578,  1442,  2323,  3011,  2321,  3170,
    5526,  1172,  5240,  5241,  2777,  2769,  1726,  4907,  2778,  1027,
    1457,  1195,  5072,  1540,    11,    11,  4079,  4470,  5398,  1267,
    1267,  4531,  4847,  1267,  3976,    -1,    -1,    -1,    -1,    -1,
      -1,  5145,    -1,  5559,    -1,    -1,    -1,    -1,    -1,  5565,
      -1,    -1,    -1,  1490,  5570,   223,   224,   225,   226,    -1,
      -1,    -1,    -1,  5579,    -1,    -1,    -1,  5583,  5296,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5240,  5241,    -1,  5602,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5614,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5622,  1544,    -1,    -1,
      -1,    -1,    -1,    -1,  1551,  5620,    -1,    -1,    -1,    -1,
      -1,  5349,  5350,  5620,  5640,    -1,   116,   117,   118,   119,
     120,    -1,    -1,    -1,    -1,    -1,  5240,  5241,  5366,  5296,
      -1,    -1,    -1,    -1,    -1,  1582,    -1,  1584,    -1,    -1,
    1587,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   334,    -1,   336,   337,
     338,    -1,    -1,    -1,    -1,    -1,    -1,   345,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5349,  5350,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5430,    -1,    -1,    -1,    -1,    -1,    -1,  5366,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5445,   386,    -1,
      -1,   389,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5458,  1668,    -1,   223,   224,   225,   226,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5349,  5350,    -1,    -1,    -1,
    1687,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   426,  5487,
      -1,    -1,  5366,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5499,  5500,  5430,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5445,  5517,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5527,
      -1,  5458,    -1,    -1,  5532,    -1,    -1,    -1,    -1,  1746,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5546,    -1,
    5548,   489,   490,    -1,    -1,    -1,  5430,    -1,    -1,    -1,
    5487,    -1,    -1,    -1,    -1,    -1,  5564,    -1,  5566,    -1,
    5568,  5445,  5499,  5500,   334,    -1,   336,   337,   338,    -1,
      -1,    -1,    -1,    -1,  5458,   345,    -1,    -1,    -1,    -1,
    5517,    -1,  5590,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5527,    -1,    -1,    -1,    -1,  5532,    -1,    -1,    -1,    -1,
    5608,  5609,    -1,  5487,    -1,    -1,    -1,    -1,    -1,  5546,
      -1,  5548,    -1,    -1,    -1,  5499,  5500,  5625,  5626,    -1,
      -1,    -1,  5630,    -1,    -1,    -1,    -1,  5564,    -1,  5566,
      -1,  5568,    -1,  5517,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5527,    -1,    -1,    -1,    -1,  5532,    -1,
      -1,    -1,    -1,  5590,    -1,    -1,   426,    -1,    -1,    -1,
      -1,    -1,  5546,    -1,  5548,   781,    -1,    -1,    -1,    -1,
      -1,  5608,  5609,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5564,    -1,  5566,   631,  5568,    -1,    -1,    -1,  5625,  5626,
      -1,    -1,    -1,  5630,    -1,   811,    -1,    -1,    -1,   647,
     648,   649,    -1,    -1,    -1,    -1,  5590,    -1,    -1,    -1,
      -1,   827,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   489,
     490,    -1,    -1,    -1,  5608,  5609,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5625,  5626,    -1,    -1,    -1,  5630,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1982,    -1,    -1,    -1,  1986,
      -1,    -1,    -1,   889,    -1,    -1,    -1,  1994,  1798,  1996,
    1800,  1801,    -1,    -1,    -1,  1805,  1806,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1820,    -1,    -1,  1823,  1824,    -1,  1826,    -1,    -1,  1829,
    1830,  1831,  1832,    -1,    -1,    -1,  1836,    -1,    -1,  2036,
      -1,  1841,    -1,    -1,    -1,    -1,  1846,  1847,  1848,  1849,
    1850,    -1,    -1,    -1,  1854,  1855,    -1,    -1,    -1,    -1,
    1860,    -1,  1862,  1863,  1864,    -1,  1866,  1867,    -1,  1869,
      -1,    -1,  1872,    -1,    -1,  1875,  1876,  1877,    -1,    -1,
      -1,   631,    -1,  2080,  2081,  2082,    -1,    -1,    -1,    -1,
      -1,    14,    -1,    -1,    17,    -1,    -1,    -1,   648,   649,
      -1,   997,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2118,    -1,    -1,    -1,    -1,  2123,    50,    51,    -1,
      -1,    -1,    -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,
      63,    64,  1038,    -1,    -1,  2142,    -1,    -1,    -1,    -1,
      -1,    -1,  2149,    -1,    -1,    -1,    79,  2154,   994,  2156,
      -1,    -1,    -1,    -1,    -1,  2162,    -1,  2164,  2165,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   121,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   131,   132,
      -1,    -1,    -1,    -1,    -1,    -1,  1052,    -1,    -1,    -1,
     143,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   170,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,   210,    -1,  1125,
      -1,    -1,   215,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     233,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,
      -1,   244,    -1,    -1,    -1,    -1,    -1,    -1,  2325,    -1,
      -1,  2328,    -1,    -1,    -1,    -1,    -1,    -1,  2335,  2336,
      -1,   264,    -1,  2340,    -1,    -1,  2343,    -1,    -1,  2346,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,
      -1,    -1,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1270,  1271,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1279,  1280,    -1,    -1,  1283,  1284,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1292,  1293,    -1,  1295,
    1296,    -1,    -1,    -1,  1300,    -1,    -1,    -1,  1304,  1305,
    1306,  1307,    -1,  1309,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1317,  1318,  1259,  1320,  1321,    -1,    -1,    -1,    -1,
      -1,  1327,    -1,    -1,  1330,  1331,  1332,  1333,  1334,  1335,
      -1,  1337,    -1,    -1,  1340,  1341,    -1,    -1,  2445,  1345,
      -1,    -1,    -1,  1349,  1350,  1351,    -1,    -1,   381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1362,  1363,  1364,    -1,
      -1,    -1,    -1,    -1,  1370,  1371,  1372,  1373,  1374,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   414,    -1,    -1,    -1,  1391,  1392,    -1,    -1,    -1,
      -1,    -1,   425,  1399,    -1,  1401,  1402,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   447,    -1,    -1,   450,    -1,   452,
      -1,  2528,   455,    -1,  2531,  2532,    -1,    -1,    -1,    -1,
      -1,    -1,   465,   466,    -1,    -1,  1442,    -1,    -1,    -1,
      -1,    -1,   475,    -1,   477,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   486,    -1,    -1,    -1,    -1,    -1,   492,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,    -1,    -1,
      -1,    -1,   505,   506,   507,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   538,    -1,    -1,    -1,    -1,
      -1,  1457,   545,    -1,    -1,    -1,    -1,    -1,    -1,  2429,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   565,    -1,    -1,    -1,    -1,    -1,    -1,  2646,
      -1,    -1,    -1,    -1,  1490,  1551,    -1,    -1,    -1,    -1,
    1496,    -1,    -1,    -1,    -1,    -1,   589,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1511,    -1,    -1,   601,    -1,
      -1,    -1,   605,    -1,    -1,    -1,    -1,    -1,  1584,    -1,
     613,  1587,    -1,    -1,    -1,    -1,   619,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1544,    -1,
      -1,    -1,    -1,   636,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   644,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2538,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   675,    26,    27,    28,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2565,    -1,    -1,    -1,    -1,
      -1,    -1,  1668,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2582,    -1,    -1,    -1,    -1,    -1,    -1,   712,
      63,  1687,    -1,    -1,    -1,    -1,  2793,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    77,  2802,  2803,    -1,    -1,    -1,
      83,    84,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,
    2620,  2621,    -1,    -1,    -1,    -1,  2823,  2824,  2628,  2826,
      -1,    -1,  2829,  2830,  2831,  2832,  2833,    -1,   111,  2836,
      21,    -1,    -1,    -1,    -1,    26,    27,    28,  2845,    -1,
    1746,    -1,   125,  2850,    -1,  2852,   129,  2854,  2855,    -1,
    2857,  2858,    -1,    -1,    -1,  2862,  2863,  2864,    -1,    -1,
      -1,  2868,  2869,  2870,    -1,  2872,    -1,  2874,    -1,  2876,
      -1,  2878,    63,  2880,    -1,   158,    -1,    -1,  2885,    -1,
      -1,    -1,  1728,  1729,  1730,   818,    77,    -1,    -1,    -1,
      -1,    -1,    83,    84,  2901,    -1,    87,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2922,    -1,  2924,    -1,  2926,
     111,    -1,    -1,  2930,    -1,    -1,    -1,    -1,    -1,  2936,
    2937,    -1,    -1,    -1,   125,    -1,    -1,    -1,   129,    -1,
      14,    -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   235,    -1,    -1,    -1,    -1,    -1,    32,   242,
      -1,    -1,    36,    -1,    -1,   156,    -1,   158,    -1,  2779,
      -1,    -1,    -1,    -1,    -1,    -1,    50,    51,    -1,   262,
      -1,    -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,    63,
      64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3022,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   321,    -1,
     231,    -1,    -1,    -1,   235,    -1,    -1,   121,    -1,    -1,
      -1,   242,    -1,    -1,    -1,    -1,   339,   131,   132,    -1,
      -1,    -1,    -1,    -1,    -1,  3072,  3073,  3074,    -1,   143,
     144,   262,    -1,    -1,    -1,    -1,  1982,    -1,    -1,    -1,
    1986,    -1,   156,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1996,    -1,    -1,  3100,    -1,    -1,   170,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,    -1,    -1,    -1,    -1,   190,    -1,    -1,  3126,
     403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3136,
     321,  3138,    -1,    -1,   208,    -1,   210,    -1,    -1,    -1,
      -1,   215,    -1,    -1,   218,    -1,    -1,    -1,   339,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,    -1,
     244,    -1,    -1,    -1,  2080,  2081,  2082,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3195,    -1,
     264,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,
      -1,    -1,    -1,   394,    -1,    -1,    -1,   281,    -1,   400,
      -1,   285,   403,    -1,    -1,    -1,    -1,  2123,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2142,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2154,    -1,
    2156,    -1,    -1,    -1,    -1,   538,   539,   540,   541,    -1,
      -1,    -1,    -1,   546,   455,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     563,    -1,    -1,   566,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   492,    -1,    -1,    -1,    -1,    -1,   381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   602,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     414,    -1,    -1,    -1,    -1,    -1,    -1,   538,   539,   540,
     541,   425,    -1,    -1,    -1,   546,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   563,   447,   565,   566,   450,    -1,   452,    -1,
      -1,   455,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   465,   466,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   475,  3212,   477,  3214,    -1,  2252,  2253,    -1,    -1,
      -1,   602,   486,    -1,    -1,    -1,    -1,    -1,   492,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   500,    -1,   619,    -1,
    2336,   505,   506,   507,  2340,    -1,    -1,    -1,    -1,    -1,
      -1,   724,    -1,    -1,    -1,   636,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   538,   748,   749,    -1,    -1,    -1,
      -1,   545,  3479,    -1,    -1,    -1,    -1,    -1,    -1,  2325,
      -1,    -1,  2328,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   565,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2354,    -1,
    3517,    -1,    -1,    -1,    -1,   589,    -1,    -1,  3525,   802,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   601,    -1,    -1,
      -1,   605,    -1,   724,    -1,    -1,    -1,    -1,    -1,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3562,  3563,   748,   749,    -1,
      -1,    -1,   636,    -1,    -1,    -1,    -1,    -1,    -1,  3379,
     644,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3588,    -1,    -1,    -1,    -1,   660,   661,   662,   663,
      -1,  3598,    -1,  3600,    -1,  3602,    -1,    -1,    -1,  2445,
      -1,   675,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   802,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   818,  3635,    -1,
     821,    -1,    -1,  3640,    -1,  3642,    -1,    -1,   712,    -1,
      -1,    -1,    -1,    -1,    -1,  3455,  3456,  3457,  3458,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3676,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   752,  2525,
      -1,    -1,    -1,  2529,    -1,    -1,    -1,    -1,  2534,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3713,    -1,  3715,    -1,
      -1,    -1,    -1,    -1,  2560,  2561,  2562,  2563,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2646,    -1,    -1,    -1,   818,  3752,  2592,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2616,  2617,    -1,    -1,    -1,    -1,    -1,    -1,  3785,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3865,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2793,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2802,  2803,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2823,  2824,    -1,
    2826,    -1,    -1,  2829,  2830,  2831,  2832,  2833,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2845,
      -1,    -1,    -1,    -1,  2850,    -1,  2852,    -1,  2854,  2855,
      -1,  2857,    -1,    -1,    -1,    -1,  2862,  2863,  2864,    -1,
      -1,    -1,  2868,  2869,  2870,    -1,  2872,    -1,  2874,    -1,
    2876,    -1,  2878,    -1,  2880,    -1,    -1,    -1,    -1,  2885,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      26,    27,    28,    -1,  2930,    -1,    -1,    -1,    -1,    -1,
    2936,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    61,    62,    63,    -1,    -1,
      -1,  4068,  4069,    -1,    -1,    71,    -1,    -1,    -1,    -1,
      -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,    -1,
      -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     7,    -1,    -1,    -1,    -1,    12,    -1,
      14,  4108,    -1,    17,    -1,   111,    -1,    -1,    -1,    -1,
      -1,    -1,    26,    27,    28,    -1,  3022,    -1,    -1,   125,
      -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4141,    -1,  4143,    -1,    -1,  4146,
    4147,    -1,  4149,    -1,    58,    -1,    -1,    61,    62,    63,
      64,    -1,   158,  4160,    -1,    69,    -1,    71,  4165,    -1,
      -1,  4168,    -1,    77,  4171,  4172,    -1,    -1,    -1,    83,
      84,    -1,    -1,    87,    -1,    -1,    -1,  3023,    -1,    -1,
      -1,    -1,    96,    -1,    -1,    -1,  4193,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,
    4207,    -1,    -1,    -1,    -1,    -1,    34,    35,    -1,    -1,
      -1,   125,    40,    -1,    42,   129,    44,    45,    -1,    -1,
    3126,    -1,    -1,   137,   138,    -1,  3072,  3073,  3074,   235,
     144,    -1,    -1,    -1,    62,    -1,   242,    -1,   152,    -1,
    4050,  4051,    -1,    -1,   158,    -1,  4253,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   169,   262,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3115,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,
      -1,  4288,  4289,    -1,   112,    -1,    -1,   115,    -1,  3195,
      -1,    -1,    -1,  4300,    -1,   123,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   142,   321,    -1,    -1,    -1,   233,
      -1,   235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,   159,    -1,   339,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   187,
      -1,   189,    -1,    -1,    -1,  4372,    -1,    -1,    -1,  3215,
      -1,   285,    -1,    -1,    -1,    -1,    -1,   205,   206,    -1,
      -1,    -1,  3228,    -1,  3230,  3231,  3232,  3233,   394,  3235,
    3236,    -1,    -1,    -1,    -1,    -1,    -1,   403,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   321,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,
      -1,    -1,    -1,    -1,    -1,   339,    -1,    -1,    -1,   343,
      -1,    -1,   260,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3305,
     288,   289,    -1,   291,    -1,    -1,    -1,   381,    -1,    -1,
    4477,  4478,  3318,   387,    -1,    -1,   482,    -1,    -1,    -1,
     394,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   403,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   327,
     328,   329,  4509,  4510,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   346,   347,
     348,   435,    -1,    -1,    -1,   353,    -1,    -1,   356,    -1,
      -1,    -1,   538,   539,   540,   541,   450,   451,   452,    -1,
     546,    -1,    -1,    -1,    -1,    -1,   374,   375,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   563,    -1,    -1,
     566,  3407,    -1,  3409,    -1,    -1,    -1,    -1,   482,    -1,
      -1,    -1,    -1,  3419,  3420,  3421,  3422,    -1,    -1,    -1,
     408,   409,  3428,  3429,  3430,  3431,  3432,  3433,    -1,  3435,
    3436,  3437,  3438,    -1,    -1,  3441,   602,  3443,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   434,    -1,    -1,    -1,
      -1,  3517,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3525,
    4430,  4431,    -1,    -1,   538,   539,   540,   541,    -1,    -1,
    4637,    -1,   546,  3479,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   563,
      -1,  4658,   566,  4660,    -1,    -1,  3562,  3563,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   496,    -1,
      -1,    -1,   500,    -1,    -1,   589,    -1,    -1,    -1,    -1,
      -1,    -1,  3588,    -1,   512,    -1,    -1,    -1,   602,    -1,
      -1,    -1,  3598,    -1,  3600,    -1,  3602,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   724,    -1,
      -1,    -1,   636,    -1,    -1,   639,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   748,   749,   572,    -1,    -1,   575,    -1,    -1,
     578,   579,   580,   581,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4769,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3676,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       7,    -1,    -1,    -1,    -1,    12,    -1,    14,    -1,    -1,
      17,    -1,    -1,   621,   622,  4802,   802,    -1,    -1,    26,
      27,    28,    -1,    -1,    -1,    -1,    -1,  3713,    -1,  3715,
     724,   725,   726,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   649,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    58,    -1,    -1,   748,   749,    63,    64,    -1,    -1,
      -1,    -1,    69,    -1,    -1,    -1,  3752,    -1,    -1,    -1,
      77,    -1,    -1,    -1,    -1,    -1,    83,    84,    -1,    -1,
      87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    96,
    4877,    -1,    -1,  4880,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   111,    -1,  4893,    -1,   802,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,
      -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     137,   138,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   152,    -1,    -1,    -1,    -1,
      -1,   158,    -1,  4940,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   169,    -1,    -1,    -1,    -1,    -1,  3794,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3865,
      -1,    -1,    -1,    -1,    -1,   192,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3833,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   823,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,   235,    -1,
      -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5062,    -1,    -1,   285,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5093,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   321,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   339,    -1,    -1,    -1,   343,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5140,    -1,    -1,    -1,    -1,  5145,    -1,
      -1,    -1,    -1,    -1,  5151,    -1,    -1,    -1,  3994,    -1,
      -1,    -1,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,
     387,    -1,    -1,    -1,    -1,    -1,  5173,   394,    -1,  4979,
    4980,  4981,    -1,    -1,    -1,    -1,   403,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4108,    -1,    -1,    -1,    -1,    -1,   435,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4067,    -1,   450,   451,   452,    -1,  5234,    -1,    -1,
      -1,    -1,    -1,  5240,  5241,  4141,    -1,  4143,    -1,    -1,
    4146,  4147,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4160,   482,    -1,    -1,    -1,  4165,
      -1,    -1,  4168,    -1,    -1,  4171,  4172,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5283,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4193,    -1,  5296,
      -1,    -1,    -1,    -1,    -1,    -1,    35,    36,    -1,  5109,
      -1,    -1,  5112,  5113,  5114,  5115,    -1,    -1,  5315,    -1,
      -1,   538,   539,   540,   541,    -1,    -1,    -1,    -1,   546,
      -1,    -1,    61,    62,    -1,    -1,    -1,    -1,  5335,    -1,
    5337,    -1,    -1,    72,    73,    -1,   563,    -1,    -1,   566,
    5347,    -1,  5349,  5350,    -1,    -1,    -1,  4253,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    97,  5366,
      99,    -1,   589,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,    -1,    -1,    -1,    -1,   602,    -1,    -1,    -1,    -1,
      -1,    -1,  4288,  4289,    -1,    -1,    -1,    -1,    -1,    -1,
    5200,    -1,    -1,    -1,  4300,    -1,    -1,    -1,    -1,  5209,
    5210,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5218,   636,
      -1,    -1,   639,    -1,    -1,    -1,    -1,    -1,   157,   158,
      -1,  5428,    -1,  5430,   163,    -1,    -1,   166,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   176,  5445,  5446,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5458,    -1,    -1,    -1,  4301,  4302,    -1,  4304,   198,
      -1,   200,    -1,    -1,    -1,    -1,  4372,    -1,    -1,  5476,
     209,    -1,   211,    -1,    -1,    -1,    -1,    -1,    -1,  5486,
    5487,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5499,  5500,    -1,    -1,    -1,   724,   725,   726,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5517,    -1,    -1,    -1,    -1,    -1,    -1,  5524,    -1,    -1,
    5527,   748,   749,    -1,    -1,  5532,    -1,    -1,    -1,    -1,
      -1,    -1,  5539,    -1,    -1,    -1,    -1,    -1,    -1,  5546,
      -1,  5548,    -1,   282,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5564,    -1,  5566,
      -1,  5568,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4477,  4478,    -1,  4420,   802,   315,    -1,    -1,    -1,
      -1,    -1,    -1,  5590,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5608,  5609,    -1,    -1,    -1,    -1,    -1,  5615,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5623,    -1,  5625,  5626,
      -1,    34,    35,  5630,    -1,    -1,    -1,    40,    -1,    42,
      -1,    44,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   380,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    62,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   407,  4515,
    4516,  4517,  4518,    -1,    -1,    -1,    -1,    -1,    -1,   418,
     419,    -1,   421,   422,   423,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4542,    -1,    -1,   112,
      -1,    -1,   115,    -1,   443,    -1,    -1,    -1,    -1,    -1,
     123,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,
      -1,  4637,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   159,    -1,    -1,    -1,
      -1,    -1,  4658,    -1,  4660,    -1,    -1,    -1,   497,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   510,    -1,    -1,   187,    -1,   189,    -1,    -1,    -1,
      -1,   194,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   205,   206,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   542,    -1,    -1,    -1,   546,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   562,    -1,    -1,   565,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,  4685,
      -1,    -1,    -1,    -1,    -1,    -1,   585,   260,    -1,    -1,
      -1,  4697,  4698,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4769,    -1,    -1,   279,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   288,   289,    -1,   291,    -1,
      -1,    -1,    -1,    -1,   623,    -1,    -1,    -1,    -1,    -1,
      -1,   630,    -1,    -1,    -1,    -1,  4802,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   327,   328,   329,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   346,   347,   348,    -1,    -1,  4784,  4785,
     353,    -1,    -1,   356,    -1,    -1,    -1,    34,    35,    -1,
      -1,    -1,    -1,    40,    -1,    42,    -1,    44,    45,    -1,
      -1,   374,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4877,  4818,    -1,  4880,    62,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4829,    -1,    -1,    -1,  4893,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   408,   409,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4851,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   753,   754,    -1,    -1,    -1,    -1,
      -1,   434,    -1,    -1,    -1,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,    -1,  4940,    -1,   123,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   142,   795,    -1,    -1,   798,
     799,   800,   801,    -1,   803,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   159,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   496,    -1,    -1,    -1,   500,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   512,
     187,  4947,   189,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   205,   206,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4978,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5062,    -1,    -1,   572,
     247,    -1,   575,    -1,    -1,   578,   579,   580,   581,    -1,
      -1,    -1,    -1,   260,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   288,   289,    -1,   291,    -1,    -1,    -1,   621,   622,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5140,    -1,   649,    -1,    -1,    -1,
     327,   328,   329,    -1,    -1,  5091,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   346,
     347,   348,    -1,    -1,    -1,    -1,   353,  5173,    -1,   356,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5127,  5128,    -1,    -1,    -1,    -1,   374,   375,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   408,   409,    -1,    -1,    -1,    -1,    -1,  5234,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   434,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5283,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   496,
      -1,    -1,    -1,   500,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   512,    -1,    -1,    -1,  5335,
      -1,  5337,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5347,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5296,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5320,  5321,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   572,    -1,    -1,   575,    -1,
      -1,   578,   579,   580,   581,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5428,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   621,   622,    -1,    -1,    -1,    -1,
    5446,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   649,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5486,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    13,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,  5524,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,  5539,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,  5615,
     125,   126,   127,    -1,   129,    -1,    -1,  5623,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,   192,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,   587,   588,   589,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
     615,   616,   617,   618,   619,   620,    -1,    -1,   623,   624,
      -1,   626,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,    -1,
     675,   676,   677,   678,   679,   680,    -1,   682,   683,   684,
     685,   686,   687,   688,    -1,   690,   691,   692,   693,   694,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,    -1,   797,   798,   799,   800,   801,   802,   803,    -1,
      -1,    -1,    -1,    -1,    -1,   810,   811,    -1,    -1,    -1,
      -1,   816,    -1,   818,    -1,    -1,    -1,   822,    -1,    -1,
      -1,   826,   827,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,    -1,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
     492,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,    -1,   565,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
      -1,   593,   594,   595,   596,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,   615,   616,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,   636,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,    -1,   675,   676,   677,   678,   679,   680,    -1,
     682,   683,   684,   685,   686,   687,   688,    -1,   690,   691,
     692,   693,   694,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,   794,   795,    -1,   797,   798,   799,   800,   801,
     802,   803,    -1,    -1,    -1,    -1,    -1,    -1,   810,   811,
      -1,    -1,    -1,    -1,   816,    -1,   818,    -1,    -1,    -1,
     822,    -1,    -1,    -1,   826,   827,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    46,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,   268,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,   583,   584,   585,    -1,   587,   588,
     589,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,   615,   616,   617,   618,
     619,   620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,    -1,   675,   676,   677,   678,
     679,   680,    -1,   682,   683,   684,   685,   686,   687,   688,
      -1,   690,   691,   692,   693,   694,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,   794,   795,    -1,   797,   798,
     799,   800,   801,   802,   803,    -1,    -1,    -1,    -1,    -1,
      -1,   810,   811,    -1,    -1,    -1,    -1,   816,    -1,   818,
      -1,    -1,    -1,   822,    -1,    -1,    -1,   826,   827,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   795,
      -1,   797,   798,   799,   800,   801,   802,   803,    -1,    -1,
      -1,    -1,    -1,    -1,   810,   811,   812,    -1,    -1,    -1,
     816,    -1,   818,    -1,    -1,    -1,   822,    -1,    -1,    -1,
     826,   827,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,   587,   588,   589,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,   615,   616,   617,   618,   619,   620,    -1,    -1,
     623,   624,    -1,   626,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,    -1,   675,   676,   677,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,    -1,   690,   691,   692,
     693,   694,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,   794,   795,    -1,   797,   798,   799,   800,   801,   802,
     803,    -1,    -1,    -1,    -1,    -1,    -1,   810,   811,   812,
      -1,    -1,    -1,   816,    -1,   818,    -1,    -1,    -1,   822,
      -1,    -1,    -1,   826,   827,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,   794,   795,    -1,   797,   798,   799,
     800,   801,   802,   803,    -1,    -1,    -1,    -1,    -1,    -1,
     810,   811,    -1,    -1,    -1,    -1,   816,    -1,   818,    -1,
      -1,    -1,   822,    -1,    -1,    -1,   826,   827,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
     197,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
     587,   588,   589,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,    -1,   675,   676,
     677,   678,   679,   680,    -1,   682,   683,   684,   685,   686,
     687,   688,    -1,   690,   691,   692,   693,   694,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,   794,   795,    -1,
     797,   798,   799,   800,   801,   802,   803,    -1,    -1,    -1,
      -1,    -1,    -1,   810,   811,    -1,    -1,    -1,    -1,   816,
      -1,   818,    -1,    -1,    -1,   822,    -1,    -1,    -1,   826,
     827,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,   615,   616,   617,   618,   619,   620,    -1,    -1,   623,
     624,    -1,   626,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
      -1,   675,   676,   677,   678,   679,   680,    -1,   682,   683,
     684,   685,   686,   687,   688,    -1,   690,   691,   692,   693,
     694,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
     794,   795,    -1,   797,   798,   799,   800,   801,   802,   803,
      -1,    -1,    -1,    -1,    -1,    -1,   810,   811,    -1,    -1,
      -1,    -1,   816,    -1,   818,    -1,    -1,    -1,   822,    -1,
      -1,    -1,   826,   827,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,   615,   616,   617,   618,   619,   620,
      -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,    -1,   675,   676,   677,   678,   679,   680,
      -1,   682,   683,   684,   685,   686,   687,   688,    -1,   690,
     691,   692,   693,   694,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,   794,   795,    -1,   797,   798,   799,   800,
     801,   802,   803,    -1,    -1,    -1,    -1,    -1,    -1,   810,
     811,    -1,    -1,    -1,    -1,   816,    -1,   818,    -1,    -1,
      -1,   822,    -1,    -1,    -1,   826,   827,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,    -1,    -1,    -1,    -1,
      -1,    -1,   810,   811,    -1,    -1,    -1,    -1,   816,    -1,
     818,    -1,    -1,    -1,   822,    -1,    -1,    -1,   826,   827,
       5,     6,    -1,     8,     9,    10,    11,    12,    13,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,   587,   588,   589,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
     615,   616,   617,   618,   619,   620,    -1,    -1,   623,   624,
      -1,   626,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,    -1,
     675,   676,   677,   678,   679,   680,    -1,   682,   683,   684,
     685,   686,   687,   688,    -1,   690,   691,   692,   693,   694,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,    -1,   797,   798,   799,   800,   801,   802,   803,    -1,
      -1,    -1,    -1,    -1,    -1,   810,   811,    -1,    -1,    -1,
      -1,   816,    -1,   818,    -1,    -1,    -1,   822,    -1,    -1,
      -1,   826,   827,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,    -1,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
      -1,   593,   594,   595,   596,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,   615,   616,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,    -1,   675,   676,   677,   678,   679,   680,    -1,
     682,   683,   684,   685,   686,   687,   688,    -1,   690,   691,
     692,   693,   694,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,   794,   795,    -1,   797,   798,   799,   800,   801,
     802,   803,    -1,    -1,    -1,    -1,    -1,    -1,   810,   811,
      -1,    -1,    -1,    -1,   816,    -1,   818,    -1,    -1,    -1,
     822,    -1,    -1,    -1,   826,   827,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,
     589,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,   615,   616,   617,   618,
     619,   620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,    -1,   675,   676,   677,   678,
     679,   680,    -1,   682,   683,   684,   685,   686,   687,   688,
      -1,   690,   691,   692,   693,   694,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,   794,   795,    -1,   797,   798,
     799,   800,   801,   802,   803,    -1,    -1,    -1,    -1,    -1,
      -1,   810,   811,    -1,    -1,    -1,    -1,   816,    -1,   818,
      -1,    -1,    -1,   822,    -1,    -1,    -1,   826,   827,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   795,
      -1,   797,   798,   799,   800,   801,   802,   803,    -1,    -1,
      -1,    -1,    -1,    -1,   810,   811,    -1,    -1,    -1,    -1,
     816,    -1,   818,    -1,    -1,    -1,   822,    -1,    -1,    -1,
     826,   827,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,   365,    -1,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,   587,   588,   589,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,   615,   616,   617,   618,   619,   620,    -1,    -1,
     623,   624,    -1,   626,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,    -1,   675,   676,   677,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,    -1,   690,   691,   692,
     693,   694,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,   794,   795,    -1,   797,   798,   799,   800,   801,   802,
     803,    -1,    -1,    -1,    -1,    -1,    -1,   810,   811,    -1,
      -1,    -1,    -1,   816,    -1,   818,    -1,    -1,    -1,   822,
      -1,    -1,    -1,   826,   827,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,   794,   795,    -1,   797,   798,   799,
     800,   801,   802,   803,    -1,    -1,    -1,    -1,    -1,    -1,
     810,   811,    -1,    -1,    -1,    -1,   816,    -1,   818,    -1,
      -1,    -1,   822,    -1,    -1,    -1,   826,   827,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
     587,   588,   589,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,    -1,   675,   676,
     677,   678,   679,   680,    -1,   682,   683,   684,   685,   686,
     687,   688,    -1,   690,   691,   692,   693,   694,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,   794,   795,    -1,
     797,   798,   799,   800,   801,   802,   803,    -1,    -1,    -1,
      -1,    -1,    -1,   810,   811,    -1,    -1,    -1,    -1,   816,
      -1,   818,    -1,    -1,    -1,   822,    -1,    -1,    -1,   826,
     827,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,   615,   616,   617,   618,   619,   620,    -1,    -1,   623,
     624,    -1,   626,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
      -1,   675,   676,   677,   678,   679,   680,    -1,   682,   683,
     684,   685,   686,   687,   688,    -1,   690,   691,   692,   693,
     694,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
     794,   795,    -1,   797,   798,   799,   800,   801,   802,   803,
      -1,    -1,    -1,    -1,    -1,    -1,   810,   811,    -1,    -1,
      -1,    -1,   816,    -1,   818,    -1,    -1,    -1,   822,    -1,
      -1,    -1,   826,   827,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,   492,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,   565,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,   619,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,   636,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,   699,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,   794,   795,    -1,   797,   798,   799,   800,
     801,   802,   803,   804,    -1,    -1,    -1,    -1,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,   818,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   827,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,   145,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,   699,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   795,
      -1,   797,   798,   799,   800,   801,   802,   803,   804,    -1,
      -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,   818,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   827,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,   699,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,   794,   795,    -1,   797,   798,   799,   800,
     801,   802,   803,   804,    -1,    -1,    -1,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,   818,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,   827,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,    -1,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,    -1,   453,   454,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,   472,   473,   474,    -1,    -1,
      -1,   478,   479,   480,    -1,   482,    -1,   484,   485,    -1,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,
      -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,   635,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,    -1,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,   794,   795,    -1,
      -1,   798,   799,   800,   801,   802,   803,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,   823,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    37,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   822,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,   593,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   822,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   391,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   822,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   822,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   822,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   822,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   822,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   822,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   822,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,   819,    20,    -1,   822,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   822,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   822,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,   492,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,   565,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,   619,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,   636,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
     818,   819,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,   819,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,   819,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,   199,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,   263,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,   275,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,   492,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,   565,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,   619,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,   636,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
     818,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
     699,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,   794,   795,    -1,   797,   798,
     799,   800,   801,   802,   803,   804,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,   818,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,   794,   795,    -1,   797,   798,
     799,   800,   801,   802,   803,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,   818,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,   794,   795,    -1,   797,   798,   799,
     800,   801,   802,   803,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,   818,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,   794,   795,    -1,   797,   798,   799,   800,
     801,   802,   803,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,   818,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,   794,   795,    -1,   797,   798,   799,   800,   801,
     802,   803,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,   818,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,   794,   795,    -1,   797,   798,   799,   800,   801,   802,
     803,     5,     6,    -1,     8,     9,    10,    11,    12,   812,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
     794,   795,    -1,   797,   798,   799,   800,   801,   802,   803,
       5,     6,    -1,     8,     9,    10,    11,    12,   812,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,    -1,   797,   798,   799,   800,   801,   802,   803,     5,
       6,    -1,     8,     9,    10,    11,    12,   812,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   795,
      -1,   797,   798,   799,   800,   801,   802,   803,     5,     6,
      -1,     8,     9,    10,    11,    12,   812,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,   794,   795,    -1,
     797,   798,   799,   800,   801,   802,   803,    -1,    -1,    -1,
      -1,    -1,    -1,     5,     6,   812,     8,     9,    10,    11,
      12,    13,    14,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    99,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,   130,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,   144,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,   210,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,   285,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,    -1,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,   440,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
     492,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,   505,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,   586,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,   608,   609,   610,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,    -1,    -1,   709,   710,   711,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,   794,   795,    -1,   797,   798,   799,   800,   801,
     802,   803,     5,     6,    -1,     8,     9,    10,    11,    12,
      13,    14,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    99,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,   130,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,   144,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,   210,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,   285,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,    -1,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,   440,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,   492,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,   505,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,   586,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,   608,   609,   610,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,    -1,    -1,   709,   710,   711,    -1,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,   794,   795,    -1,   797,   798,   799,   800,   801,   802,
     803,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      14,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    99,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,   130,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
     144,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,   210,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,   285,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
      -1,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,   440,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,   492,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,   505,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,   586,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,   608,   609,   610,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,    -1,    -1,   709,   710,   711,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
     794,   795,    -1,   797,   798,   799,   800,   801,   802,   803,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,    -1,    -1,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,   520,   521,   522,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,   593,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,    -1,   797,   798,   799,   800,   801,   802,   803,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    18,    19,    20,    21,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
     386,    -1,    -1,   389,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,   647,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   795,
      -1,   797,   798,   799,   800,   801,   802,   803,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,   160,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,   501,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,   794,   795,    -1,
     797,   798,   799,   800,   801,   802,   803,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,   199,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,   263,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,   794,   795,    -1,   797,   798,
     799,   800,   801,   802,   803,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,   593,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,   794,   795,    -1,   797,   798,   799,
     800,   801,   802,   803,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,   794,   795,    -1,   797,   798,   799,   800,
     801,   802,   803,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,   104,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,   794,   795,    -1,   797,   798,   799,   800,   801,
     802,   803,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,   104,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,   794,   795,    -1,   797,   798,   799,   800,   801,   802,
     803,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
     794,   795,    -1,   797,   798,   799,   800,   801,   802,   803,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    37,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,    -1,   797,   798,   799,   800,   801,   802,   803,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   795,
      -1,   797,   798,   799,   800,   801,   802,   803,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,   371,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,   794,   795,    -1,
     797,   798,   799,   800,   801,   802,   803,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,   371,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,   794,   795,    -1,   797,   798,
     799,   800,   801,   802,   803,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,   794,   795,    -1,   797,   798,   799,
     800,   801,   802,   803,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    95,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,   172,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,   794,   795,    -1,   797,   798,   799,   800,
     801,   802,   803,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,   521,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,   794,   795,    -1,   797,   798,   799,   800,   801,
     802,   803,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,   794,   795,    -1,   797,   798,   799,   800,   801,   802,
     803,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
     794,   795,    -1,   797,   798,   799,   800,   801,   802,   803,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,    -1,   797,   798,   799,   800,   801,   802,   803,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   795,
      -1,   797,   798,   799,   800,   801,   802,   803,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,   794,   795,    -1,
     797,   798,   799,   800,   801,   802,   803,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,   794,   795,    -1,   797,   798,
     799,   800,   801,   802,   803,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,   794,   795,    -1,   797,   798,   799,
     800,   801,   802,   803,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,   417,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,   794,   795,    -1,   797,   798,   799,   800,
     801,   802,   803,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,   794,   795,    -1,   797,   798,   799,   800,   801,
     802,   803,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,   794,   795,    -1,   797,   798,   799,   800,   801,   802,
     803,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
     794,   795,    -1,   797,   798,   799,   800,   801,   802,   803,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,    -1,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,    -1,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,    -1,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,    -1,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,    -1,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,    -1,   797,   798,   799,   800,   801,   802,   803,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,    -1,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,    -1,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,    -1,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,    -1,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,    -1,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   795,
      -1,   797,   798,   799,   800,   801,   802,   803,     5,     6,
      -1,     8,     9,    10,    11,    12,    13,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
      -1,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,    -1,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,    -1,   421,   422,   423,    -1,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,    -1,   449,    -1,   451,   452,   453,    -1,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
      -1,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
      -1,    -1,   709,   710,   711,    -1,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,   794,   795,    -1,
     797,   798,   799,   800,   801,   802,   803,     5,     6,    -1,
       8,     9,    10,    11,    12,    13,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,    -1,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,    -1,   421,   422,   423,    -1,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
      -1,   449,    -1,   451,   452,   453,    -1,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,    -1,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,    -1,
      -1,   709,   710,   711,    -1,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,   797,
     798,   799,   800,   801,   802,   803,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,    -1,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,    -1,   421,   422,   423,    -1,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,    -1,
     449,    -1,   451,   452,   453,    -1,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,    -1,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,    -1,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,   794,   795,    -1,   797,   798,
     799,   800,   801,   802,   803,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
      -1,   421,   422,   423,    -1,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,    -1,   449,
      -1,   451,   452,   453,    -1,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,    -1,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,    -1,    -1,   709,
     710,   711,    -1,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,   794,   795,    -1,   797,   798,   799,
     800,   801,   802,   803,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,    -1,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,    -1,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,    -1,
     421,   422,   423,    -1,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,    -1,   449,    -1,
     451,   452,   453,    -1,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,    -1,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,    -1,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,    -1,    -1,   709,   710,
     711,    -1,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,   794,   795,    -1,   797,   798,   799,   800,
     801,   802,   803,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,   150,   151,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
      -1,   453,   454,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
     472,   473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,
     482,    -1,   484,   485,    -1,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,   541,
     542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,   794,   795,    -1,    -1,   798,   799,   800,   801,
     802,   803,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,   150,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,    -1,
     453,   454,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,
     473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,
      -1,   484,   485,    -1,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
      -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
     633,    -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,    -1,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,   794,   795,    -1,    -1,   798,   799,   800,   801,   802,
     803,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,   150,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,    -1,
      -1,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,    -1,   453,
     454,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,   473,
     474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,
     484,   485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,    -1,   539,   540,   541,   542,    -1,
      -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,   633,
      -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
      -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
     794,   795,    -1,    -1,   798,   799,   800,   801,   802,   803,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,    -1,   453,   454,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,   472,   473,   474,
      -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,
     485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,
      -1,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
     635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
      -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,    -1,    -1,   798,   799,   800,   801,   802,   803,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,    -1,   453,   454,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,   472,   473,   474,    -1,
      -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,   485,
      -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
      -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,    -1,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,    -1,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   795,
      -1,    -1,   798,   799,   800,   801,   802,   803,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,    -1,   453,   454,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,   472,   473,   474,    -1,    -1,
      -1,   478,   479,   480,    -1,   482,    -1,   484,   485,    -1,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,
      -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,   635,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,    -1,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,   794,   795,    -1,
      -1,   798,   799,   800,   801,   802,   803,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
      -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,    -1,   453,   454,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,
     478,   479,   480,    -1,   482,    -1,   484,   485,    -1,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,
      -1,   509,    -1,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
      -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,    -1,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,    -1,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,    -1,
     798,   799,   800,   801,   802,   803,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,   454,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,   794,   795,    -1,    -1,   798,
     799,   800,   801,   802,   803,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,    -1,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,    -1,   453,   454,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,   472,   473,   474,    -1,    -1,    -1,   478,   479,
     480,    -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,
      -1,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,
     540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
      -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,    -1,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,   794,   795,    -1,    -1,   798,   799,
     800,   801,   802,   803,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,    -1,   453,   454,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,   472,   473,   474,    -1,    -1,    -1,   478,   479,   480,
      -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,
      -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,    -1,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,   794,   795,    -1,    -1,   798,   799,   800,
     801,   802,   803,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
      -1,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,    -1,   478,   479,   480,    -1,
     482,    -1,   484,   485,    -1,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,   541,
     542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   232,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,   794,   795,    -1,    -1,   798,   799,   800,   801,
     802,   803,    -1,    -1,    -1,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   444,   445,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     710,   711,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   731,    -1,   733,   734,   735,   736,   737,    -1,    -1,
     740,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     750,    -1,    -1,    -1,    -1,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   793
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     381,   414,   425,   447,   450,   452,   455,   465,   466,   475,
     477,   486,   492,   500,   505,   506,   507,   538,   545,   565,
     589,   601,   605,   613,   619,   636,   644,   660,   661,   662,
     663,   675,   712,   752,   818,   830,   831,   834,   835,   836,
     837,   838,   840,   845,   848,   901,   902,   903,   904,   906,
     909,   932,   954,   961,   962,  1201,  1202,  1204,  1206,  1208,
    1211,  1213,  1214,  1215,  1216,  1217,  1219,  1220,  1255,  1256,
    1264,  1265,  1268,  1281,  1283,  1287,  1290,  1291,  1295,  1297,
    1302,  1306,  1312,  1313,  1314,  1315,  1316,  1317,  1318,  1323,
    1324,  1450,  1483,  1484,  1485,  1486,  1487,  1488,  1489,  1490,
    1491,  1492,  1493,  1494,  1495,  1496,  1497,  1498,  1499,  1507,
    1508,  1529,  1530,  1534,  1538,  1544,  1545,  1546,  1547,  1548,
    1549,  1550,  1551,  1552,  1553,  1554,  1555,  1556,  1557,  1558,
    1559,  1560,  1561,  1562,  1563,  1564,  1565,  1566,  1567,  1568,
    1569,  1570,  1571,  1572,  1573,  1574,  1575,  1576,  1577,  1578,
    1579,  1580,  1581,  1582,  1583,  1584,  1585,  1586,  1587,  1588,
    1600,  1601,  1603,  1607,  1616,  1626,  1630,  1632,  1633,  1703,
    1705,  1707,  1729,  1736,  1738,  1739,  1740,  1742,  1746,  1748,
    1785,  1791,  1792,  1793,  1794,  1830,  1837,  1838,  1840,  1841,
      12,   108,   127,   200,   243,   286,   419,   498,   563,   565,
     599,   611,   707,  1804,  1805,  1806,  1809,   282,   370,  1296,
    1786,   571,  1678,   235,     5,     6,     8,     9,    10,    11,
      12,    15,    20,    23,    25,    26,    27,    28,    29,    30,
      32,    36,    40,    43,    44,    45,    47,    49,    50,    53,
      56,    57,    59,    60,    61,    63,    65,    66,    67,    68,
      69,    70,    72,    73,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    87,    88,    90,    91,    92,
      93,    94,    98,   103,   106,   110,   111,   112,   115,   120,
     121,   126,   127,   129,   135,   136,   137,   138,   139,   143,
     146,   147,   148,   152,   154,   155,   157,   158,   159,   162,
     163,   165,   166,   167,   168,   169,   170,   173,   174,   175,
     176,   177,   180,   181,   183,   184,   185,   186,   187,   190,
     191,   195,   196,   198,   202,   204,   205,   206,   207,   209,
     211,   215,   216,   218,   221,   222,   226,   227,   228,   229,
     232,   233,   234,   237,   242,   243,   244,   248,   252,   253,
     255,   256,   260,   262,   265,   266,   269,   272,   273,   279,
     280,   282,   284,   286,   287,   295,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   315,   316,   317,   319,   320,   321,   322,
     324,   325,   330,   331,   332,   333,   334,   335,   338,   339,
     341,   343,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   356,   357,   360,   361,   362,   363,   364,   368,   369,
     373,   375,   376,   378,   379,   380,   383,   393,   394,   395,
     397,   399,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   412,   414,   415,   416,   418,   420,   421,   422,
     423,   424,   426,   427,   428,   431,   435,   436,   438,   439,
     442,   443,   444,   445,   446,   448,   449,   451,   452,   453,
     456,   457,   458,   459,   460,   461,   462,   463,   465,   467,
     468,   470,   471,   472,   474,   477,   478,   479,   480,   482,
     484,   485,   486,   487,   488,   490,   491,   495,   496,   497,
     498,   502,   506,   508,   509,   510,   511,   513,   514,   515,
     516,   517,   523,   524,   525,   527,   530,   533,   535,   537,
     538,   539,   540,   541,   542,   545,   546,   549,   550,   551,
     552,   553,   554,   557,   558,   559,   560,   562,   563,   566,
     567,   568,   569,   572,   573,   575,   576,   577,   578,   584,
     585,   589,   590,   591,   594,   595,   597,   598,   600,   601,
     604,   607,   609,   611,   612,   618,   620,   623,   627,   629,
     630,   631,   632,   639,   640,   641,   643,   644,   645,   646,
     649,   652,   653,   654,   655,   656,   658,   667,   668,   669,
     671,   672,   673,   675,   678,   680,   687,   688,   691,   693,
     695,   696,   700,   701,   702,   703,   704,   705,   706,   707,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   745,   746,   747,   748,   749,   750,
     751,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,   794,   795,   797,   798,   799,   800,   801,   802,
     803,   926,  1675,  1684,  1694,  1695,  1696,  1698,  1699,  1702,
     315,   456,   847,   562,   565,  1732,  1732,   640,  1787,   108,
     199,   286,   389,   498,   518,   563,   568,   599,   603,   611,
     653,   707,   796,   797,  1177,  1178,  1503,  1801,  1805,  1806,
    1807,  1808,  1809,     8,    23,    29,    35,    37,    38,    39,
      41,    54,    55,    61,    62,    69,    72,    96,    97,   102,
     104,   107,   108,   113,   114,   115,   120,   122,   125,   171,
     178,   179,   188,   195,   205,   207,   213,   219,   226,   230,
     241,   245,   271,   279,   290,   318,   323,   334,   338,   340,
     344,   345,   346,   347,   348,   355,   365,   366,   367,   371,
     372,   396,   408,   409,   411,   426,   454,   455,   474,   476,
     483,   484,   490,   543,   544,   551,   555,   556,   561,   571,
     575,   576,   577,   578,   587,   588,   589,   593,   596,   611,
     615,   616,   617,   619,   624,   626,   631,   632,   649,   664,
     665,   670,   676,   677,   679,   682,   683,   684,   685,   686,
     690,   692,   694,   745,   783,   810,   811,   812,   816,   818,
     822,   826,   827,  1150,  1316,  1334,  1335,  1338,  1339,  1340,
    1342,  1346,  1349,  1351,  1352,  1354,  1355,  1356,  1363,  1364,
    1365,  1388,  1389,  1654,  1656,  1659,  1660,  1661,  1662,  1663,
    1664,  1667,  1670,  1672,  1675,  1684,  1796,  1798,   108,   167,
     200,   235,   286,   419,   498,   518,   563,   586,   599,   611,
     627,   653,   707,   797,  1503,  1684,  1296,   103,   535,   963,
      13,    14,    99,   130,   144,   167,   170,   183,   210,   235,
     241,   274,   285,   420,   424,   440,   448,   456,   492,   505,
     506,   557,   586,   608,   610,  1675,  1678,  1685,  1689,  1696,
    1699,  1700,  1702,  1752,  1753,  1673,  1684,   846,   565,   128,
     220,   293,  1509,   406,   658,    87,   427,  1631,   111,   235,
     646,  1634,   243,   562,  1730,  1732,  1296,  1684,  1627,   486,
     611,  1732,  1296,   128,   293,  1510,  1533,   652,  1617,   521,
     951,   955,   956,  1684,    13,   424,  1752,  1787,  1684,    13,
     140,   220,   526,   527,   529,   530,   531,   548,  1325,  1326,
    1327,  1799,    61,    62,   125,   209,   282,   351,   403,   497,
     584,   652,   653,   671,   707,   822,  1152,  1675,  1687,  1695,
    1696,  1698,  1699,  1701,  1704,  1714,  1719,  1720,    35,    36,
      61,    72,    97,    99,   109,   158,   163,   166,   176,   198,
     200,   209,   211,   282,   315,   380,   407,   418,   419,   422,
     423,   443,   497,   510,   546,   565,   630,   753,   754,   795,
     798,   799,   800,   801,   803,  1152,  1263,  1590,  1591,  1593,
    1594,  1595,  1715,   955,   204,   510,   584,  1263,   204,  1263,
    1673,  1684,   565,  1539,   406,   658,   243,  1732,  1737,  1684,
     483,  1519,  1523,   659,  1451,  1452,  1684,    32,    79,   154,
     414,   436,   477,   538,  1833,  1342,  1684,  1675,   400,  1068,
     818,  1797,  1798,   243,   282,  1338,  1313,  1314,  1316,  1450,
       0,   156,   832,   414,   104,   274,   611,  1228,  1678,  1684,
    1688,  1690,  1691,  1774,  1777,   126,   403,   611,  1257,  1258,
    1259,  1260,  1261,  1262,   194,   246,   285,  1328,  1329,  1481,
     387,   602,  1463,  1464,   276,   602,  1464,  1469,  1481,  1315,
    1316,   130,   608,    17,   195,  1604,  1605,  1673,   160,  1232,
    1684,   160,   926,   137,   152,   448,   479,  1741,   212,   926,
    1688,  1684,  1673,   563,   230,  1502,   212,   167,  1210,  1804,
    1732,  1787,  1303,  1304,  1673,   818,   933,   824,   185,   517,
     582,  1500,  1673,  1500,    19,  1788,   230,  1099,   235,   212,
     455,  1688,   235,   716,  1684,   563,   263,   796,  1099,  1099,
     212,   263,   603,  1099,   235,   565,  1800,  1800,  1804,  1809,
     818,   818,   818,  1349,   818,   818,   818,  1338,  1401,   818,
     818,   818,   818,   818,   818,   818,   818,  1337,  1337,   818,
    1137,   818,   818,   818,   571,   818,   818,   818,  1797,   818,
     818,   818,   818,   818,   818,   818,   818,   818,  1338,   818,
     818,   818,  1399,  1400,  1670,  1684,   818,   818,   818,   818,
     818,   818,   818,   818,   818,  1338,  1137,   818,   818,   818,
     818,   818,   818,   818,   818,   818,   818,   818,   818,   818,
     818,   818,   818,  1137,   571,   818,   818,   818,   571,   818,
     818,   818,    37,   219,   571,   818,  1337,  1137,  1137,   818,
     818,   818,   818,   818,   818,   818,   818,   818,   818,   818,
     818,   818,   818,   818,   818,   818,   818,   818,   818,   818,
     818,  1349,  1349,  1349,   619,  1314,  1316,  1338,   822,  1390,
    1688,  1684,   823,    18,    19,    21,   386,   389,   571,   647,
    1336,  1343,  1344,  1683,  1684,   160,   161,   201,   214,   254,
     267,   294,   358,  1347,    33,   141,   249,   275,   344,   365,
     366,   441,   503,   504,   516,   721,   808,   809,   810,   811,
     812,   813,   814,   815,  1345,  1349,    71,   388,   571,  1679,
     259,   651,   818,   824,  1502,  1502,  1502,  1684,   212,  1502,
    1502,   716,  1684,  1502,   563,  1502,  1502,  1502,   212,  1502,
    1732,   841,  1608,   135,   418,  1751,   480,   480,   563,   568,
     611,   627,   653,   653,   384,   818,  1778,   562,   377,  1778,
      67,   510,  1778,   109,   627,  1778,   822,  1778,   377,   582,
     823,   380,    68,   432,   824,  1688,   197,   231,  1251,  1684,
    1678,  1839,  1338,   246,    85,   293,  1636,   194,   194,  1731,
    1732,   197,   315,   794,  1590,  1628,  1684,  1299,  1691,  1298,
    1732,   246,  1511,  1502,  1619,   315,   510,   753,   794,  1618,
    1620,   620,   952,   500,   957,  1751,   377,   197,   377,   582,
    1788,  1334,  1327,   500,   653,   824,    35,   125,   160,   501,
    1153,  1520,  1688,   194,   582,  1520,   255,   432,  1721,  1722,
    1724,  1726,    13,   125,   364,  1689,  1692,  1760,   212,   822,
    1688,    35,   125,  1155,  1156,  1688,   824,   125,   584,  1710,
    1718,  1720,   823,  1711,  1520,   166,   275,   634,  1448,  1599,
     818,   108,   167,   200,   419,   565,   586,   611,   627,  1599,
      13,  1589,  1688,  1468,  1469,   197,   249,  1592,  1596,   198,
      70,   542,   194,   542,   562,    70,   542,    13,    43,    94,
      98,   253,   331,   395,   517,   559,  1540,  1541,  1542,   166,
     222,   542,  1468,  1599,  1599,  1599,  1599,  1599,   211,  1599,
     542,   287,   157,   421,   585,   234,   235,   261,  1176,    73,
     562,   542,   623,   957,   432,   636,  1269,  1270,  1271,   446,
     533,  1276,  1277,  1278,  1276,  1673,  1684,  1839,   818,   823,
    1451,   823,   818,  1453,    37,   219,  1655,  1679,  1832,  1832,
    1832,    96,  1831,  1832,  1832,   156,   824,   818,    48,   156,
    1316,   156,   197,   111,   156,   819,   819,  1328,   819,   821,
    1684,  1337,   818,   138,   228,   372,  1763,  1767,  1768,  1775,
     822,     7,   125,   138,   144,   228,   343,  1762,  1763,  1767,
    1768,  1769,  1770,  1771,  1772,   464,   823,  1780,   160,   160,
     160,   823,   502,   608,  1330,   146,   391,   822,  1479,  1480,
    1482,  1688,   249,  1329,  1481,  1328,    48,    13,   140,  1795,
    1468,   290,   372,   593,  1470,  1471,  1656,  1684,  1795,  1468,
    1463,  1464,  1469,   231,   293,   428,  1536,  1537,  1533,   195,
    1604,   160,   194,  1312,  1507,  1508,  1529,  1534,  1602,  1606,
    1655,  1684,   332,   569,   595,  1203,  1691,  1207,  1684,  1684,
     746,   784,  1688,  1684,  1205,   383,     7,    26,    84,   144,
     237,   322,   369,   450,   629,   748,   802,  1034,  1035,  1048,
    1049,  1050,  1051,  1057,  1059,  1060,  1061,  1062,  1591,     7,
      12,    14,    17,    27,    28,    58,    63,    64,    69,    77,
      83,    84,    87,    96,   111,   125,   129,   137,   138,   144,
     152,   158,   169,   192,   233,   235,   242,   262,   285,   321,
     339,   343,   381,   387,   394,   403,   435,   450,   451,   452,
     482,   538,   539,   540,   541,   546,   563,   566,   589,   602,
     636,   639,   724,   725,   726,   748,   749,   802,  1050,  1100,
    1103,  1105,  1106,  1159,  1233,  1234,  1236,  1237,  1239,  1241,
    1242,  1243,  1244,  1246,  1248,  1684,   171,  1684,   926,   532,
    1810,  1811,  1209,  1500,   249,   823,   235,   263,   400,  1174,
    1309,  1310,  1338,  1397,  1398,  1684,   850,   849,   176,   428,
     823,  1282,    59,   176,   180,   194,   330,   428,  1292,  1293,
    1294,    57,   368,   368,   447,  1789,  1345,  1684,  1684,  1684,
     518,   193,  1684,   708,     7,  1028,  1684,   263,  1691,  1764,
    1776,  1760,  1684,   263,  1684,  1684,  1099,    11,   167,   200,
     419,   586,   913,  1803,  1811,  1817,  1819,  1820,  1825,   200,
     913,  1802,  1811,  1817,  1820,  1825,  1800,  1338,  1338,    13,
     140,  1395,  1446,  1395,  1395,  1395,   633,  1403,  1338,  1338,
    1398,  1398,  1338,  1338,   140,  1395,  1446,   819,   372,   819,
     819,  1338,  1338,  1338,  1338,  1670,   116,   117,   118,   119,
     120,   223,   224,   225,   226,   334,   336,   337,   338,   345,
     426,   489,   490,   631,   648,   649,  1441,  1442,  1338,  1397,
     112,   115,   575,   578,  1443,   140,  1391,  1338,  1338,  1338,
    1338,  1441,  1338,  1398,  1400,    10,   823,   824,   140,  1395,
    1338,  1338,   140,  1395,  1338,  1338,  1398,  1398,  1398,  1338,
    1398,  1342,  1338,  1338,  1338,  1338,  1338,  1338,   819,  1338,
    1395,  1395,  1338,  1338,   140,  1395,  1338,  1442,  1442,  1338,
      46,   268,   583,  1338,  1338,   819,  1671,  1672,  1684,  1395,
    1395,  1338,  1338,  1338,  1395,  1395,  1398,   819,   819,  1338,
    1338,  1338,  1338,  1338,   822,  1367,  1368,  1656,  1663,  1684,
     819,   819,   819,  1349,   140,  1395,  1328,   819,   823,   209,
     282,   497,  1716,   501,  1338,  1335,  1683,  1684,  1338,  1338,
    1338,   179,   371,   588,   604,  1345,    13,    20,  1340,  1348,
    1342,  1342,   818,  1797,  1349,  1342,  1342,  1342,  1342,   275,
     666,  1341,  1342,  1342,   245,  1342,   245,  1342,  1342,  1342,
    1342,  1342,    33,   249,   275,   441,  1688,  1349,  1679,  1679,
    1338,  1360,  1361,  1362,   812,  1684,  1684,   926,  1684,   377,
    1684,   926,  1688,   708,  1057,  1059,  1504,  1505,  1506,   926,
    1684,  1691,  1759,  1500,  1760,  1684,  1684,  1502,   614,   842,
      35,   158,   162,   202,   222,   287,   331,   382,   418,   442,
     467,   511,   542,   794,   795,   798,   799,   800,   801,  1609,
    1613,  1614,  1732,    86,   822,   964,   965,   966,   967,  1684,
    1749,   562,  1684,  1779,  1691,  1688,   200,   419,   565,  1750,
    1759,  1753,    21,  1444,  1445,   186,   362,  1684,  1743,  1684,
    1839,  1511,   515,   823,    50,   282,  1635,    30,    30,  1673,
    1733,  1734,  1500,   822,   839,  1678,    31,   287,   823,   582,
    1300,  1301,  1673,  1500,  1673,  1684,  1623,  1621,  1622,   823,
    1679,    56,    66,    76,    90,    91,    92,   106,   333,   350,
     488,   550,   567,   958,   960,   823,  1747,  1691,  1759,  1750,
     486,  1790,  1789,   197,  1319,  1320,  1481,    13,   364,  1760,
    1684,    71,  1158,  1338,  1691,   732,   571,  1681,   273,   379,
     642,   823,  1725,   823,  1723,   657,  1706,   822,   823,  1684,
     209,   282,   497,   652,   671,  1717,  1520,  1684,  1721,  1711,
    1520,  1712,  1713,  1714,  1719,    13,    35,   125,   192,   377,
     483,   708,  1338,  1728,   249,  1597,  1679,  1338,   812,  1099,
     926,   926,   926,  1673,   926,  1691,  1673,   287,   349,   542,
    1599,  1684,   926,  1599,  1691,  1592,   926,  1599,   252,   560,
     181,   194,  1543,   823,  1597,  1592,   194,   194,   900,  1592,
    1596,  1596,  1592,  1599,  1599,   379,   642,    88,   823,  1266,
     823,   900,   125,  1338,  1524,  1525,  1526,  1523,  1452,  1454,
    1684,    21,   823,   378,  1835,   558,  1836,   645,   258,   470,
    1834,  1684,  1338,   277,   280,   429,  1069,  1070,  1691,   136,
     819,   156,   833,   819,   728,    48,   786,   455,  1218,  1218,
     787,   788,   790,  1688,  1775,   653,   728,  1775,   636,  1775,
     455,   727,  1761,   455,  1761,  1761,   455,  1761,  1761,    65,
     256,   364,   534,   552,   643,  1756,  1757,  1691,  1774,   636,
    1225,  1676,  1678,  1676,  1676,  1259,   666,   667,   669,  1331,
    1332,  1333,   571,  1680,  1680,  1688,   823,   502,  1338,  1465,
    1668,  1316,  1317,   376,   823,  1316,  1317,  1468,  1468,   197,
    1501,  1674,  1684,  1536,  1251,  1688,    87,   432,  1094,  1095,
    1098,  1105,  1106,  1107,  1159,   927,  1684,  1684,   194,   368,
     315,   708,     7,   927,   818,   110,  1045,  1520,  1521,  1521,
    1045,  1521,  1521,   582,  1521,  1521,   823,  1102,   158,    74,
      89,   199,   400,   518,  1115,  1117,  1174,  1250,  1521,    64,
      89,   235,  1250,   400,  1521,  1521,  1250,  1521,   400,   400,
    1521,  1521,  1521,  1521,   582,   136,  1521,   261,   400,   563,
      64,    89,   193,   400,   417,  1174,  1250,   261,  1521,   400,
     400,   563,   136,  1521,  1521,  1521,  1521,  1521,  1250,   400,
      48,  1521,  1521,   400,    21,    74,   160,   582,  1174,  1254,
     400,   400,  1521,   584,  1521,  1521,  1521,   139,   331,  1521,
    1521,   400,  1521,   618,   618,  1521,  1521,  1521,  1521,  1103,
      71,  1152,   449,  1068,  1235,   823,   823,   500,   709,  1845,
    1212,   491,   627,  1811,   144,   608,  1289,   125,  1305,  1684,
    1304,  1673,   818,   818,  1310,   819,   823,   457,   458,   459,
     460,   461,   462,   463,   851,   852,   232,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   316,   317,   444,
     445,   710,   711,   731,   733,   734,   735,   736,   737,   740,
     750,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   793,
     864,   865,   866,   867,   868,   869,   870,   871,   872,   873,
     874,   875,   876,   877,   878,   879,   880,   881,   882,   883,
     884,   885,   886,   887,   888,   889,   890,   897,   898,   899,
    1673,   609,  1293,    57,   447,   171,   905,   377,     7,   716,
     111,   377,  1099,  1045,   613,  1029,     7,    19,  1765,  1766,
    1767,  1768,  1769,  1770,  1771,  1772,   125,   823,   908,   591,
     818,   591,   614,  1190,  1191,  1673,   200,  1099,   926,  1684,
     926,   926,  1811,   823,   819,  1395,   819,  1338,   819,   819,
     819,  1338,   150,   633,  1402,    21,    25,   819,   614,   819,
     819,   819,   614,   823,  1398,   819,   812,   819,   823,   823,
     819,   819,   819,   197,   823,   819,   823,  1398,   819,   823,
     823,   823,   811,   823,   819,   819,   818,  1670,  1684,  1395,
     819,   819,   819,  1395,   819,   823,   819,   819,   819,   819,
     823,   819,   249,   819,   823,   823,   819,   823,   823,   819,
     819,   819,   823,   197,   823,  1395,   819,   819,   823,   823,
     823,   819,   197,  1338,   197,  1338,   197,  1338,   197,   819,
     823,   819,   819,   819,   819,   823,    21,   819,   823,   819,
     823,   819,   819,   689,  1373,  1373,   819,   823,  1366,   819,
    1366,   823,  1688,   819,  1373,  1373,  1373,   823,  1395,   819,
    1398,   824,   824,   824,  1688,  1338,   828,   179,   371,   588,
     604,  1797,    19,  1338,   165,  1342,   818,  1338,  1338,  1342,
     818,  1797,  1349,  1342,  1336,   819,   823,   818,   824,   824,
    1673,  1504,  1502,  1102,  1036,  1037,  1038,  1057,   823,    52,
     469,  1252,   192,  1851,  1500,   822,   843,   844,   287,   287,
     287,   287,   422,   287,   287,   823,  1500,  1615,   115,   575,
     578,   959,   969,  1389,  1661,  1670,  1688,   823,   160,   377,
     819,   823,   582,   812,  1684,  1693,  1758,   636,  1754,  1684,
     160,   186,   201,   214,   266,   267,   294,   362,   416,  1744,
    1745,  1447,  1448,  1673,  1678,  1678,  1307,  1308,  1673,   236,
    1445,   823,  1688,   122,   188,   219,   290,   372,   593,  1476,
    1477,  1478,    31,   582,  1629,  1691,  1691,   823,   582,   176,
     428,   612,  1284,  1285,  1286,   400,  1412,  1413,   582,  1625,
      13,  1624,  1624,  1620,   823,   160,   210,   377,   197,  1758,
    1684,   145,   699,   719,   804,   818,   827,  1321,  1322,  1404,
    1406,  1414,  1415,  1416,  1417,  1418,  1419,  1420,  1673,  1797,
    1447,  1319,   582,   582,   582,    35,  1157,  1688,   582,  1520,
    1218,  1218,   432,   453,   495,  1727,  1724,  1722,  1760,  1688,
    1692,   194,   824,   824,   824,   824,   824,  1720,  1338,  1728,
     823,  1718,  1678,   197,  1598,   819,  1684,   614,  1599,   427,
    1468,  1542,  1598,  1599,  1691,    60,  1599,  1673,  1673,  1599,
     513,  1271,   607,  1279,  1278,   819,   823,   819,   823,  1797,
    1655,   404,   194,   824,   819,    73,   818,    73,   818,   401,
    1072,   216,   263,   825,  1521,   403,   732,  1681,  1681,  1761,
    1761,   789,   789,  1766,  1769,    13,   364,  1760,   403,   144,
    1688,  1766,  1681,   103,  1681,  1681,   571,   571,   571,    19,
    1755,   319,   320,   324,   325,  1226,  1227,     5,   403,   738,
     739,  1222,  1223,  1224,  1501,   668,  1332,  1152,  1154,  1480,
     341,    22,   131,  1466,  1467,   823,  1471,  1471,  1501,  1673,
    1684,   197,   823,   824,  1535,  1322,   219,   290,   372,   593,
    1474,  1477,   379,  1095,    84,    77,    93,   265,   342,   368,
     430,   532,   929,   931,    60,   477,   263,   263,   597,  1047,
     108,   221,   393,   403,   410,   514,   611,   911,   912,  1678,
    1033,  1034,  1063,  1476,  1675,  1678,  1033,  1063,  1063,  1684,
    1678,  1852,  1474,  1035,  1521,  1198,  1684,  1174,  1175,  1296,
    1175,    64,   193,   417,  1116,  1173,  1178,  1189,  1198,  1684,
     818,  1684,   125,  1247,  1684,  1684,  1684,  1684,  1684,  1296,
     122,   188,   290,   372,   593,  1475,  1475,  1684,   122,   188,
     219,   290,   372,   593,  1473,    13,  1240,  1440,  1684,  1296,
    1678,  1678,  1678,  1678,  1152,  1521,  1473,  1240,  1684,  1684,
     263,  1440,   263,  1684,  1684,  1688,  1684,  1240,  1521,   186,
     266,   368,  1109,  1475,   125,  1249,  1684,  1475,  1475,  1684,
    1296,  1461,  1462,  1671,   125,  1104,  1473,  1678,  1296,  1684,
    1684,  1673,  1296,  1296,    80,    82,   125,   148,   187,   439,
    1108,  1104,  1104,   125,  1473,  1684,  1473,  1240,   818,   371,
    1688,  1852,  1852,  1474,  1521,  1521,   402,     7,   144,  1100,
    1243,  1244,  1237,  1241,  1244,   717,   718,  1046,  1521,   706,
    1849,   377,   921,  1229,   127,   248,  1673,   672,   672,  1240,
     417,  1436,  1437,  1438,  1684,   249,  1338,   160,   160,   160,
     160,   160,   160,   160,   823,   900,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   823,   900,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,  1096,  1097,  1098,  1673,  1047,
     708,   641,  1673,  1476,   286,    77,   177,   184,   363,  1030,
    1031,  1032,  1048,  1049,  1051,  1052,  1055,  1056,  1057,  1058,
    1059,  1060,  1061,  1062,  1045,  1766,  1765,   791,  1773,   653,
    1764,  1780,  1521,   596,   910,  1389,  1654,    47,   216,   485,
    1193,  1193,   377,    21,   231,   275,   455,   818,  1064,  1065,
    1066,  1067,  1068,  1101,  1103,  1314,  1316,  1516,  1638,  1684,
     926,   818,   472,  1826,     9,    31,  1026,   245,  1338,   819,
    1372,  1373,  1372,  1372,  1372,   574,  1338,  1338,   154,    35,
      62,   112,   115,   123,   142,   189,   205,   260,   279,   346,
     347,   348,   353,   356,   408,   409,   434,   508,   578,   606,
     649,  1126,  1130,  1396,   282,   578,  1153,  1153,  1396,   819,
    1372,   819,   245,   245,  1338,  1338,  1338,   387,  1393,  1338,
    1338,  1338,  1338,  1338,  1342,   819,  1372,   819,  1372,  1338,
    1338,  1338,  1338,  1338,  1338,  1398,  1372,  1372,   245,  1338,
    1338,  1338,   819,  1372,  1338,  1338,  1338,  1338,   197,  1338,
     197,  1338,   197,  1338,  1338,  1372,  1372,  1338,    35,    62,
    1473,  1395,  1372,   818,  1374,  1375,  1376,  1684,   231,   693,
    1370,  1367,   819,  1370,   819,  1349,  1373,  1654,   819,  1372,
     819,   824,  1199,  1340,   819,   823,  1349,  1349,  1441,  1441,
      19,  1338,   165,  1362,  1397,   812,  1684,  1684,  1245,  1246,
    1248,  1476,  1506,  1102,  1691,  1252,  1688,   823,   900,  1614,
    1610,   967,   970,   971,   966,   373,   484,   968,  1750,  1684,
    1759,   824,   824,   582,   654,  1447,   818,  1468,  1412,   823,
    1309,  1310,  1680,   293,   432,   642,  1735,  1734,  1338,  1678,
     582,  1301,  1673,  1286,   818,   500,   619,   620,   818,  1512,
    1513,  1515,  1516,  1517,  1476,   900,   900,   960,   959,   384,
    1750,  1759,   197,   818,  1797,   818,  1322,  1406,  1415,  1416,
    1417,  1418,   730,   823,   100,   238,   258,   271,   354,   476,
     548,  1407,  1408,  1409,  1412,  1445,   212,  1458,  1447,  1760,
    1760,  1760,   732,  1681,  1761,  1761,    78,   594,   432,  1474,
    1708,  1709,  1520,  1713,  1475,  1468,   163,   630,  1759,   372,
    1468,   614,  1676,  1592,  1592,   197,   523,   524,   525,   899,
    1280,   611,  1272,  1526,  1684,   823,   335,   156,   818,  1342,
     818,  1342,  1474,   554,  1073,   818,    12,  1071,  1473,  1680,
     403,   500,     7,  1775,    21,    48,   343,  1761,   403,  1761,
    1761,  1756,  1473,  1473,  1473,  1473,  1227,   285,   605,   174,
     464,   703,   704,   696,  1474,  1474,    77,   747,  1221,  1224,
    1153,    73,  1639,  1668,   614,  1445,   824,  1322,  1674,   812,
    1684,   500,  1521,  1521,  1678,   532,   532,   532,   532,   532,
     491,  1684,   377,  1473,  1678,  1042,  1043,  1044,  1048,  1057,
    1059,  1678,  1678,  1678,  1678,  1473,  1678,  1678,   819,   823,
    1688,  1198,   401,   818,  1198,   818,   263,   263,   366,  1118,
    1119,  1120,  1189,  1175,   818,   614,   591,  1111,  1112,  1113,
    1115,  1684,    34,    35,    40,    42,    44,    45,    62,   112,
     115,   123,   159,   187,   189,   205,   206,   247,   260,   279,
     288,   289,   291,   327,   328,   329,   346,   347,   348,   353,
     356,   374,   375,   408,   409,   496,   500,   512,   572,   575,
     578,   579,   580,   581,   621,   622,   649,  1121,  1124,  1125,
    1126,  1127,  1128,  1129,  1130,  1132,  1120,  1120,   655,   656,
    1192,   144,   500,  1240,  1684,  1292,   823,  1474,   125,  1153,
    1678,   563,  1684,  1252,   636,   563,  1678,  1121,  1240,   823,
    1466,  1240,   582,   582,  1440,  1240,  1615,  1157,  1153,  1036,
     372,  1846,  1847,  1521,   137,   152,  1850,    81,   487,   450,
    1230,  1453,   377,   377,   819,   819,   823,  1305,   818,   853,
     853,   818,   858,   858,   818,   861,   861,   818,   856,   852,
     818,  1676,  1473,  1676,   371,   893,  1690,  1473,   377,   741,
     742,   894,  1474,   282,   571,   742,   895,  1474,   890,  1473,
    1676,  1676,  1676,  1676,  1473,  1473,  1473,  1473,  1473,  1676,
    1676,  1676,  1676,  1676,  1676,  1473,  1676,   371,   896,  1676,
    1676,  1676,  1473,  1662,  1678,  1473,  1676,  1475,  1098,   818,
     438,   598,  1039,  1040,  1041,  1048,  1053,  1054,  1055,  1056,
    1057,  1059,  1476,  1688,   818,   907,   212,  1521,  1521,  1521,
    1521,  1102,  1036,    19,   785,  1760,  1225,   611,   708,  1844,
     819,  1673,  1516,  1673,   275,  1111,  1066,  1065,  1102,  1328,
    1067,   472,   914,  1821,   123,   247,   434,   549,  1110,   818,
     130,   241,   608,  1027,  1338,   819,  1372,  1338,   574,   818,
    1141,  1142,  1142,   818,  1136,   818,  1134,  1135,  1141,   413,
    1131,  1133,  1141,    62,   247,  1136,   247,  1142,   720,  1350,
      21,   751,   819,   819,   819,  1372,  1372,  1338,  1338,   819,
     819,   823,   819,    48,   494,  1392,   823,   823,   819,   823,
     819,   249,  1357,  1358,  1372,  1372,   819,   819,   819,   819,
     823,   819,   819,  1338,   819,   194,   819,   819,   823,  1372,
     819,   823,   823,   819,  1338,   819,  1338,   819,  1338,   819,
     819,   819,   818,  1164,  1164,   823,   819,  1375,  1377,  1378,
     687,   687,  1373,   823,  1369,  1370,  1373,  1370,   819,   743,
    1353,  1372,  1684,  1398,   819,  1340,   819,   823,  1349,   819,
    1248,  1246,  1038,   844,   194,   636,  1611,   160,   823,  1758,
     636,  1782,   812,   812,  1684,  1759,   384,  1468,  1525,   500,
    1512,  1513,  1308,  1673,  1310,   231,  1311,  1637,  1638,   642,
     282,  1691,  1439,  1440,  1531,  1532,  1671,   819,  1514,  1666,
    1667,  1671,  1684,   818,  1518,  1522,   160,   197,  1758,  1759,
    1338,  1445,  1338,   823,   819,   819,   819,   819,   819,  1404,
    1405,  1406,  1414,  1404,   258,   258,   390,  1411,   238,   271,
     476,  1410,  1411,  1414,  1404,  1404,  1445,  1453,    48,   217,
    1449,  1458,  1218,  1218,  1102,  1728,   900,  1759,  1447,  1599,
     497,   160,   160,   823,   160,   403,  1273,  1473,  1075,  1684,
     819,  1075,   819,    48,   818,  1077,  1342,   160,   818,   228,
     792,  1775,   219,  1678,  1682,   732,  1681,  1775,   125,   245,
     360,   103,   125,  1474,   245,  1679,  1679,   153,   164,   385,
     570,  1640,  1641,   278,  1642,  1322,  1412,  1684,  1447,   824,
    1535,  1531,  1104,  1678,   111,   111,   127,   248,   368,   162,
    1102,   912,   818,  1474,   400,  1078,  1079,   818,  1338,  1198,
     729,   818,   818,  1195,  1196,  1197,  1684,  1193,  1193,   819,
     823,  1121,  1141,  1141,  1142,    23,    35,    49,   600,   625,
    1141,  1152,  1160,  1161,  1162,  1136,   818,  1162,    62,   621,
    1127,  1162,  1162,    62,   622,   622,   625,   818,  1142,  1136,
    1136,  1162,  1141,  1142,   440,  1114,  1167,    27,    71,    75,
      77,   125,   366,   371,   377,   417,   496,   546,   603,   705,
     748,   749,   796,  1117,  1120,  1144,  1145,  1146,  1158,  1166,
    1192,  1345,    35,  1141,  1163,  1141,  1141,  1142,   818,  1135,
    1143,  1134,   125,   125,  1192,  1121,  1684,  1158,  1158,   565,
       9,   186,  1253,  1462,  1684,  1684,   246,  1284,   819,   810,
    1102,   372,   810,  1848,  1851,   366,   415,    25,   168,   915,
     582,   137,   152,   917,  1812,  1440,  1440,  1437,   819,   854,
     855,  1684,   819,   859,   860,  1684,  1693,   819,   862,   863,
    1676,  1677,   818,   819,   857,   891,   892,  1473,  1196,  1521,
    1521,  1102,   907,   383,  1196,   352,   713,   714,   715,  1684,
    1678,  1063,  1063,  1474,  1032,  1766,   228,  1767,  1768,  1770,
    1222,  1845,   818,  1673,   819,  1103,  1110,   377,   934,   935,
     936,  1684,   515,  1827,   377,  1441,  1338,   122,   290,   372,
     593,  1162,   372,   372,   819,  1396,   245,  1665,  1441,  1441,
    1338,  1394,  1668,  1655,   819,  1338,  1338,  1398,    44,   354,
     819,   636,  1359,  1338,  1441,  1338,  1338,  1338,  1338,   819,
     819,   819,  1474,   819,   819,  1473,  1372,   819,   400,  1379,
    1338,  1373,  1373,   197,  1371,  1396,   125,   162,   371,  1425,
    1427,  1428,  1429,   819,  1398,  1612,   432,    56,    66,    76,
      90,    91,    92,   106,   333,   350,   471,   488,   550,   567,
     972,   971,   582,   210,   636,  1781,   819,  1531,    21,  1527,
     377,  1528,  1311,   269,   246,   819,   823,  1520,  1515,  1516,
     819,   823,   824,  1524,   823,   959,  1759,   197,   823,  1453,
     819,  1404,   828,   258,  1411,  1411,   258,   258,   377,   614,
     377,   614,   192,   231,   613,  1431,  1432,  1433,  1434,  1435,
    1338,  1459,  1669,  1338,   697,  1455,  1449,  1761,  1761,  1474,
    1338,  1678,  1678,   899,  1678,   160,   126,  1274,   819,   823,
     819,  1070,  1078,   819,  1474,  1074,  1075,    48,    21,  1766,
     403,  1766,  1474,   125,   722,   125,  1474,    48,    48,   153,
      48,  1641,   536,   570,  1643,  1644,  1447,  1447,  1447,   477,
    1044,  1196,  1684,   819,   823,  1196,   819,   818,  1196,  1338,
     819,   823,   818,  1466,  1112,  1114,    35,    23,   600,  1152,
      35,  1162,  1153,  1200,  1655,  1162,   625,  1200,  1162,   508,
     606,   650,  1138,  1139,  1140,  1673,  1253,  1157,    82,   125,
     148,   187,  1148,  1678,   115,   575,   578,   810,   811,   818,
    1150,  1151,  1657,  1658,  1659,  1660,   608,   125,   125,   139,
     331,  1149,   263,  1476,  1521,  1521,   263,  1116,    71,  1146,
     203,  1122,   263,   371,   723,  1163,  1162,  1163,  1138,   372,
    1138,  1138,   818,  1658,  1253,  1673,  1684,   818,   372,  1847,
     372,   415,  1338,  1338,   377,   921,   926,   377,    77,   922,
      21,   636,  1288,   819,   823,   819,   823,   824,   819,   823,
     855,   819,   823,   819,   823,   819,  1063,  1063,  1041,   818,
     819,  1676,  1676,  1676,  1676,   636,  1221,  1849,  1196,   819,
    1064,   515,   487,   819,   823,  1124,  1678,   239,   249,   392,
     937,   938,   939,   940,  1673,   819,   819,   819,   819,   819,
     819,   823,  1350,  1679,   819,   819,   819,   823,  1372,   819,
     823,   819,   341,   265,   427,   819,   819,   819,   819,   819,
     819,  1165,   823,    48,   387,  1380,   186,   266,  1370,  1657,
     819,  1428,  1429,   377,   819,   175,   285,  1759,   384,   210,
      21,  1784,  1447,  1527,  1684,  1528,   147,   565,  1532,  1526,
    1515,  1516,  1666,  1684,   819,  1522,  1759,  1654,  1445,   819,
     258,   258,  1338,   818,  1338,   818,  1174,  1174,  1432,   638,
     823,  1460,  1375,  1456,  1457,  1455,  1678,   160,   405,  1275,
    1684,   216,   263,   819,   819,  1678,  1682,   120,   120,  1655,
    1655,    48,  1655,    48,    48,  1644,  1463,  1463,   377,   819,
     619,  1080,  1079,   819,  1194,  1195,   819,   819,    77,   262,
     748,   749,  1185,  1186,  1187,  1188,  1191,  1192,  1197,   372,
    1153,  1163,   819,   823,   819,  1140,   818,  1168,   636,  1147,
    1662,  1662,  1338,  1150,   620,  1852,  1852,  1157,    15,    21,
    1338,  1238,  1239,  1078,  1441,   510,  1678,   143,  1231,  1516,
    1813,   372,   855,   860,  1684,   863,   823,   818,   892,   636,
    1179,  1180,  1181,  1188,   911,  1182,  1183,  1184,  1188,   228,
    1688,  1850,   819,  1678,   915,  1822,   936,  1158,   819,   823,
    1684,   194,   372,   819,    21,  1668,  1338,   341,   173,   819,
    1473,  1459,    48,   429,   481,   681,  1381,  1387,  1373,   377,
     162,   698,  1781,   384,  1691,  1468,  1528,  1453,   263,  1673,
      73,  1421,  1439,  1439,   194,  1430,  1430,  1669,    21,   823,
    1678,   160,  1267,   818,  1071,   111,   464,  1842,  1843,  1655,
    1655,  1655,   276,  1472,  1472,   162,  1179,   249,   272,    77,
     111,   235,   321,   339,   363,   563,  1091,  1092,  1093,  1591,
    1182,   819,   823,  1185,  1466,  1678,  1521,  1521,  1521,  1187,
     819,  1162,  1655,  1162,  1169,  1684,   318,  1170,   797,   819,
     818,   819,   819,   916,   923,   924,   636,  1814,   673,   855,
     855,   397,  1245,  1181,   819,  1245,  1184,    48,  1185,   920,
     921,   472,  1828,   939,  1124,   149,   819,   112,   819,   819,
    1465,    33,   103,   245,   696,  1382,  1383,  1384,  1656,  1662,
    1784,   636,  1783,   608,  1412,   818,   819,   819,   819,   212,
     258,   387,   818,   818,  1376,  1457,  1678,   900,  1342,   818,
     136,   368,   534,  1471,   818,  1082,  1084,   573,  1521,   136,
     136,  1521,  1521,  1521,  1521,   818,  1088,  1093,   158,  1167,
    1195,  1473,  1852,  1852,  1466,   819,   823,   198,   399,   509,
     377,  1171,  1684,  1338,   537,   918,    54,    68,   182,   230,
     257,   270,   380,   473,   925,   976,   978,   979,   980,   982,
     983,   984,   985,   986,   987,   989,   997,   998,  1001,  1012,
    1015,  1017,  1018,  1675,  1686,  1697,  1698,  1699,  1702,    53,
      64,   282,   819,   823,  1675,  1476,  1245,   917,  1124,   928,
    1158,   483,  1136,   245,   696,  1383,  1385,  1656,  1662,   483,
    1338,   691,   678,  1386,   691,   691,   653,  1531,  1154,   700,
    1422,  1423,  1684,  1445,    48,    48,  1436,  1438,   819,  1075,
    1521,   534,   818,  1083,  1084,  1085,   326,  1081,  1084,  1678,
    1521,  1521,  1476,  1476,  1474,  1684,   554,  1089,  1090,  1521,
    1684,   130,   608,   819,  1338,   155,   919,   999,  1002,  1684,
     197,   362,   990,   977,  1686,  1686,  1684,   981,   835,   292,
     454,   635,  1021,    32,  1019,   825,    64,   384,    64,   855,
     922,  1158,   134,   929,   930,  1345,  1829,   191,   412,  1815,
    1816,   819,  1338,   680,    19,   680,   680,  1441,   103,   212,
     368,   695,    13,   125,   364,  1760,   481,  1645,   702,   819,
     823,   194,  1124,   819,   819,   553,  1076,   819,  1680,   819,
     823,   326,  1086,  1087,  1342,  1678,  1678,  1688,   819,   823,
    1688,    52,   368,   469,   500,  1172,  1172,   547,   628,  1123,
    1338,  1338,   633,  1004,  1008,   197,  1684,   992,   993,  1338,
     942,   975,   976,   978,   980,   982,   984,   985,   986,   987,
     989,   997,  1012,  1015,  1017,   942,  1022,  1020,  1013,  1016,
     384,   384,   819,   143,  1823,   134,   975,  1688,  1818,  1441,
    1385,   691,   483,   688,  1706,   228,  1639,  1654,  1423,   701,
    1158,  1474,  1076,  1843,  1084,   819,   823,  1091,  1090,     6,
     125,   371,   377,   377,  1144,  1000,  1009,   150,  1008,  1011,
     246,   154,  1338,   154,   975,   821,   607,  1338,   943,  1021,
    1019,   923,   928,   975,   680,    48,  1642,  1421,   171,  1424,
    1087,   608,   130,   633,  1003,  1005,  1338,   942,   154,   988,
     230,   994,   292,   821,  1024,  1023,   124,   941,   944,  1014,
    1686,  1014,  1824,  1655,   231,  1646,   702,  1172,  1172,  1006,
    1005,  1011,  1010,    54,   991,  1684,   574,  1338,   143,    95,
     172,   947,   973,  1684,   154,   975,   821,   975,   372,   818,
    1648,  1654,  1338,   154,   574,   823,   942,  1025,   942,   215,
     823,  1124,    86,   105,   821,   278,   481,  1647,   819,   822,
    1649,  1650,  1671,   500,  1651,  1425,  1426,  1428,  1007,    54,
     942,  1684,   995,   154,   154,   194,  1684,  1158,   194,   194,
    1688,   819,   823,  1652,  1653,  1671,  1427,  1429,   574,   150,
     151,   996,   454,   635,   945,   125,   974,   950,   951,  1473,
     946,  1650,   823,  1520,   377,   942,   942,   992,   520,   522,
     948,   949,   950,   953,  1345,  1684,  1338,  1312,  1653,  1526,
     823,   975,   196,   949
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   829,   830,   830,   830,   830,   830,   830,   831,   832,
     831,   831,   833,   833,   834,   834,   835,   835,   835,   835,
     835,   835,   835,   835,   835,   835,   835,   835,   835,   835,
     835,   835,   835,   835,   835,   835,   835,   835,   835,   835,
     835,   835,   835,   835,   835,   835,   835,   835,   835,   835,
     835,   835,   835,   835,   835,   835,   835,   835,   835,   835,
     835,   835,   835,   835,   835,   835,   835,   835,   835,   835,
     835,   835,   835,   835,   835,   835,   835,   835,   835,   835,
     835,   835,   835,   835,   835,   835,   835,   835,   835,   835,
     835,   835,   835,   835,   835,   835,   835,   835,   835,   835,
     835,   835,   835,   835,   835,   835,   835,   835,   835,   835,
     835,   835,   835,   835,   835,   835,   835,   835,   835,   835,
     835,   835,   835,   835,   835,   835,   835,   835,   835,   835,
     835,   835,   835,   835,   835,   835,   835,   835,   835,   835,
     835,   835,   835,   835,   835,   835,   835,   835,   835,   835,
     835,   835,   836,   837,   837,   838,   839,   839,   841,   840,
     842,   842,   843,   843,   844,   846,   845,   847,   847,   849,
     848,   850,   848,   851,   851,   852,   852,   852,   852,   852,
     852,   852,   853,   853,   854,   854,   855,   856,   856,   857,
     857,   858,   858,   859,   859,   860,   861,   861,   862,   862,
     863,   864,   864,   865,   865,   866,   866,   867,   867,   868,
     868,   869,   869,   870,   870,   871,   871,   872,   872,   873,
     873,   874,   874,   875,   875,   876,   876,   877,   877,   878,
     878,   879,   879,   880,   880,   881,   881,   882,   882,   883,
     883,   884,   884,   885,   885,   886,   886,   887,   887,   888,
     888,   889,   889,   890,   890,   890,   890,   890,   890,   890,
     890,   890,   890,   890,   890,   890,   890,   890,   890,   890,
     890,   890,   890,   890,   890,   890,   890,   890,   890,   890,
     890,   890,   890,   890,   890,   890,   890,   891,   891,   891,
     892,   893,   893,   894,   894,   894,   895,   895,   895,   896,
     896,   897,   897,   898,   898,   899,   899,   899,   899,   900,
     900,   901,   901,   901,   901,   902,   903,   905,   904,   904,
     904,   904,   904,   904,   904,   904,   906,   906,   907,   907,
     907,   907,   907,   908,   908,   909,   909,   909,   910,   910,
     911,   911,   912,   912,   912,   912,   912,   912,   912,   914,
     913,   916,   915,   915,   917,   917,   917,   917,   918,   918,
     919,   919,   920,   920,   921,   921,   922,   922,   924,   923,
     925,   925,   925,   925,   925,   925,   925,   925,   925,   925,
     925,   925,   925,   926,   926,   927,   927,   928,   928,   929,
     929,   929,   929,   929,   929,   929,   930,   930,   930,   931,
     931,   932,   933,   933,   934,   934,   935,   935,   936,   937,
     937,   938,   938,   939,   940,   940,   940,   940,   941,   941,
     942,   942,   943,   943,   944,   944,   945,   944,   946,   944,
     947,   947,   948,   948,   949,   950,   950,   951,   952,   952,
     953,   953,   953,   953,   953,   954,   955,   955,   956,   956,
     957,   957,   958,   958,   959,   959,   959,   960,   960,   960,
     960,   960,   960,   960,   960,   960,   960,   960,   960,   961,
     962,   963,   963,   963,   964,   964,   965,   965,   966,   967,
     967,   968,   968,   969,   970,   970,   971,   972,   972,   972,
     972,   972,   972,   972,   972,   972,   972,   972,   972,   972,
     973,   973,   974,   974,   975,   975,   975,   975,   975,   975,
     975,   975,   975,   975,   975,   975,   975,   977,   976,   979,
     978,   981,   980,   983,   982,   984,   985,   986,   988,   987,
     989,   990,   990,   990,   991,   991,   993,   994,   995,   992,
     996,   996,   996,   997,   997,   999,  1000,   998,  1002,  1001,
    1003,  1003,  1004,  1004,  1006,  1007,  1005,  1009,  1010,  1008,
    1011,  1011,  1013,  1012,  1014,  1014,  1016,  1015,  1018,  1017,
    1020,  1019,  1021,  1022,  1023,  1021,  1024,  1025,  1021,  1026,
    1026,  1027,  1027,  1027,  1028,  1028,  1029,  1029,  1030,  1030,
    1031,  1031,  1032,  1032,  1032,  1032,  1032,  1032,  1032,  1032,
    1032,  1032,  1032,  1032,  1033,  1033,  1034,  1034,  1035,  1035,
    1035,  1035,  1035,  1035,  1035,  1035,  1036,  1036,  1037,  1037,
    1038,  1039,  1039,  1040,  1040,  1041,  1041,  1041,  1041,  1041,
    1041,  1041,  1042,  1042,  1043,  1043,  1044,  1044,  1044,  1045,
    1046,  1046,  1047,  1048,  1049,  1050,  1051,  1052,  1053,  1054,
    1055,  1056,  1057,  1058,  1059,  1059,  1060,  1061,  1062,  1063,
    1063,  1064,  1064,  1065,  1065,  1066,  1066,  1066,  1067,  1067,
    1068,  1069,  1069,  1069,  1069,  1069,  1069,  1070,  1070,  1071,
    1071,  1072,  1072,  1073,  1073,  1073,  1074,  1074,  1075,  1075,
    1076,  1076,  1077,  1077,  1078,  1078,  1079,  1080,  1080,  1080,
    1081,  1081,  1082,  1082,  1083,  1083,  1085,  1084,  1086,  1086,
    1087,  1087,  1088,  1088,  1089,  1089,  1090,  1091,  1091,  1092,
    1092,  1093,  1093,  1093,  1093,  1093,  1093,  1093,  1093,  1094,
    1094,  1095,  1095,  1096,  1096,  1097,  1097,  1098,  1098,  1098,
    1099,  1099,  1100,  1100,  1101,  1101,  1102,  1102,  1103,  1103,
    1103,  1103,  1103,  1103,  1103,  1103,  1103,  1103,  1103,  1103,
    1103,  1103,  1103,  1103,  1103,  1103,  1103,  1103,  1103,  1103,
    1103,  1103,  1103,  1103,  1103,  1103,  1103,  1103,  1103,  1103,
    1103,  1103,  1103,  1103,  1104,  1104,  1105,  1106,  1107,  1108,
    1108,  1108,  1108,  1108,  1108,  1109,  1109,  1109,  1110,  1110,
    1110,  1110,  1111,  1111,  1112,  1112,  1113,  1114,  1114,  1115,
    1115,  1115,  1115,  1115,  1115,  1116,  1117,  1117,  1118,  1118,
    1119,  1119,  1120,  1121,  1121,  1122,  1122,  1123,  1123,  1123,
    1124,  1124,  1124,  1124,  1124,  1124,  1124,  1124,  1124,  1124,
    1124,  1124,  1124,  1124,  1124,  1124,  1124,  1124,  1124,  1124,
    1124,  1124,  1124,  1124,  1124,  1124,  1124,  1124,  1124,  1124,
    1124,  1124,  1124,  1124,  1124,  1124,  1124,  1125,  1125,  1125,
    1125,  1125,  1125,  1125,  1125,  1126,  1126,  1127,  1127,  1128,
    1128,  1128,  1128,  1128,  1129,  1129,  1129,  1129,  1129,  1130,
    1130,  1131,  1131,  1132,  1132,  1132,  1132,  1133,  1133,  1134,
    1134,  1134,  1135,  1136,  1136,  1137,  1137,  1137,  1138,  1138,
    1139,  1139,  1140,  1140,  1140,  1141,  1141,  1141,  1141,  1142,
    1142,  1143,  1143,  1144,  1144,  1145,  1145,  1146,  1146,  1146,
    1146,  1146,  1146,  1146,  1146,  1146,  1146,  1146,  1146,  1146,
    1146,  1146,  1146,  1146,  1146,  1146,  1146,  1146,  1146,  1146,
    1146,  1147,  1147,  1148,  1148,  1148,  1149,  1149,  1149,  1150,
    1151,  1151,  1152,  1152,  1153,  1153,  1154,  1154,  1155,  1155,
    1156,  1156,  1157,  1157,  1158,  1158,  1159,  1159,  1160,  1160,
    1160,  1161,  1161,  1161,  1162,  1162,  1162,  1162,  1162,  1162,
    1162,  1163,  1163,  1165,  1164,  1166,  1166,  1167,  1168,  1168,
    1169,  1169,  1170,  1170,  1170,  1170,  1171,  1171,  1171,  1171,
    1171,  1172,  1172,  1172,  1172,  1172,  1173,  1173,  1174,  1174,
    1175,  1175,  1176,  1176,  1176,  1177,  1177,  1178,  1178,  1178,
    1178,  1178,  1178,  1178,  1178,  1179,  1179,  1180,  1180,  1181,
    1181,  1182,  1182,  1183,  1183,  1184,  1185,  1185,  1186,  1186,
    1187,  1187,  1188,  1188,  1188,  1188,  1188,  1189,  1189,  1189,
    1190,  1190,  1191,  1191,  1192,  1192,  1193,  1193,  1193,  1194,
    1194,  1195,  1195,  1196,  1196,  1197,  1197,  1198,  1198,  1199,
    1199,  1200,  1200,  1201,  1201,  1203,  1202,  1205,  1204,  1207,
    1206,  1209,  1208,  1210,  1208,  1212,  1211,  1213,  1214,  1214,
    1214,  1214,  1215,  1216,  1217,  1217,  1217,  1217,  1217,  1217,
    1217,  1217,  1217,  1218,  1218,  1219,  1220,  1221,  1221,  1221,
    1222,  1222,  1223,  1223,  1224,  1224,  1224,  1224,  1224,  1224,
    1224,  1224,  1224,  1224,  1224,  1224,  1224,  1224,  1224,  1224,
    1225,  1225,  1226,  1226,  1227,  1227,  1227,  1227,  1228,  1229,
    1229,  1229,  1229,  1230,  1230,  1231,  1231,  1232,  1232,  1233,
    1233,  1234,  1234,  1235,  1235,  1236,  1236,  1236,  1236,  1237,
    1237,  1237,  1237,  1237,  1237,  1237,  1237,  1237,  1237,  1237,
    1237,  1237,  1237,  1237,  1237,  1237,  1237,  1237,  1237,  1238,
    1238,  1239,  1239,  1240,  1240,  1241,  1241,  1241,  1241,  1241,
    1242,  1242,  1243,  1243,  1243,  1243,  1243,  1243,  1243,  1243,
    1243,  1243,  1243,  1243,  1243,  1243,  1243,  1243,  1243,  1243,
    1243,  1243,  1243,  1243,  1243,  1243,  1243,  1243,  1243,  1244,
    1244,  1244,  1245,  1245,  1245,  1245,  1245,  1246,  1247,  1247,
    1248,  1249,  1249,  1250,  1250,  1251,  1251,  1252,  1252,  1252,
    1253,  1253,  1253,  1254,  1254,  1254,  1254,  1255,  1255,  1256,
    1257,  1257,  1258,  1258,  1259,  1259,  1259,  1260,  1261,  1262,
    1263,  1263,  1264,  1266,  1267,  1265,  1268,  1269,  1269,  1270,
    1270,  1271,  1271,  1271,  1271,  1272,  1272,  1273,  1273,  1274,
    1274,  1275,  1275,  1276,  1276,  1277,  1277,  1278,  1278,  1279,
    1279,  1280,  1280,  1280,  1280,  1280,  1281,  1282,  1282,  1282,
    1283,  1284,  1284,  1285,  1285,  1286,  1286,  1286,  1287,  1288,
    1288,  1289,  1289,  1289,  1290,  1291,  1292,  1292,  1293,  1293,
    1294,  1294,  1294,  1294,  1294,  1294,  1295,  1296,  1296,  1296,
    1298,  1297,  1297,  1299,  1299,  1300,  1300,  1301,  1302,  1302,
    1303,  1303,  1304,  1305,  1305,  1306,  1306,  1307,  1307,  1308,
    1309,  1310,  1310,  1311,  1311,  1312,  1312,  1312,  1312,  1313,
    1313,  1313,  1313,  1313,  1314,  1314,  1314,  1314,  1314,  1314,
    1314,  1315,  1315,  1315,  1315,  1315,  1316,  1316,  1316,  1317,
    1317,  1317,  1318,  1318,  1319,  1319,  1320,  1321,  1321,  1322,
    1322,  1323,  1324,  1325,  1325,  1326,  1326,  1327,  1327,  1328,
    1328,  1329,  1329,  1329,  1330,  1330,  1331,  1332,  1332,  1333,
    1333,  1334,  1334,  1334,  1335,  1335,  1336,  1336,  1336,  1336,
    1336,  1337,  1337,  1338,  1338,  1338,  1338,  1338,  1338,  1338,
    1338,  1338,  1338,  1338,  1339,  1339,  1339,  1339,  1339,  1340,
    1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,
    1340,  1340,  1340,  1340,  1340,  1340,  1341,  1341,  1342,  1342,
    1342,  1342,  1342,  1342,  1342,  1342,  1342,  1342,  1342,  1342,
    1342,  1342,  1342,  1343,  1343,  1344,  1344,  1345,  1345,  1346,
    1346,  1347,  1347,  1347,  1347,  1347,  1347,  1347,  1348,  1348,
    1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,
    1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,
    1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,  1349,
    1349,  1349,  1349,  1349,  1349,  1350,  1350,  1351,  1351,  1351,
    1351,  1351,  1351,  1351,  1351,  1351,  1351,  1351,  1351,  1351,
    1351,  1351,  1351,  1351,  1351,  1351,  1351,  1351,  1351,  1351,
    1351,  1351,  1351,  1351,  1351,  1352,  1352,  1352,  1352,  1352,
    1352,  1352,  1352,  1352,  1352,  1352,  1352,  1352,  1352,  1352,
    1352,  1352,  1352,  1352,  1352,  1352,  1352,  1353,  1353,  1354,
    1354,  1354,  1354,  1354,  1354,  1354,  1354,  1354,  1354,  1354,
    1354,  1354,  1354,  1354,  1354,  1354,  1354,  1354,  1354,  1354,
    1354,  1354,  1355,  1355,  1355,  1355,  1355,  1355,  1355,  1356,
    1356,  1357,  1357,  1358,  1358,  1359,  1359,  1360,  1360,  1361,
    1361,  1362,  1363,  1363,  1364,  1364,  1364,  1364,  1364,  1364,
    1364,  1364,  1364,  1364,  1364,  1364,  1364,  1364,  1364,  1364,
    1364,  1364,  1364,  1364,  1364,  1364,  1364,  1365,  1365,  1365,
    1365,  1365,  1365,  1365,  1365,  1365,  1365,  1365,  1366,  1366,
    1367,  1367,  1368,  1368,  1368,  1369,  1369,  1370,  1370,  1370,
    1371,  1371,  1371,  1372,  1372,  1373,  1374,  1374,  1375,  1376,
    1377,  1378,  1378,  1379,  1379,  1380,  1380,  1381,  1381,  1382,
    1382,  1383,  1383,  1383,  1383,  1383,  1384,  1385,  1385,  1385,
    1385,  1385,  1386,  1386,  1386,  1386,  1386,  1387,  1387,  1387,
    1388,  1389,  1390,  1390,  1390,  1391,  1391,  1392,  1392,  1393,
    1393,  1394,  1394,  1395,  1396,  1396,  1396,  1396,  1396,  1396,
    1396,  1396,  1396,  1396,  1396,  1396,  1396,  1396,  1396,  1396,
    1396,  1396,  1396,  1396,  1396,  1396,  1397,  1397,  1398,  1398,
    1399,  1399,  1400,  1400,  1401,  1401,  1402,  1402,  1403,  1403,
    1404,  1404,  1404,  1405,  1405,  1406,  1406,  1406,  1406,  1406,
    1406,  1407,  1407,  1407,  1408,  1408,  1408,  1408,  1409,  1409,
    1410,  1410,  1411,  1411,  1412,  1412,  1413,  1414,  1414,  1414,
    1414,  1414,  1414,  1415,  1415,  1416,  1416,  1417,  1418,  1418,
    1419,  1419,  1420,  1420,  1421,  1422,  1422,  1423,  1423,  1423,
    1424,  1424,  1425,  1425,  1425,  1425,  1426,  1426,  1427,  1428,
    1429,  1429,  1429,  1430,  1430,  1430,  1430,  1431,  1431,  1432,
    1432,  1433,  1433,  1434,  1434,  1435,  1436,  1436,  1437,  1437,
    1438,  1438,  1439,  1440,  1440,  1441,  1441,  1441,  1441,  1441,
    1441,  1441,  1441,  1441,  1441,  1441,  1441,  1442,  1442,  1442,
    1442,  1442,  1442,  1442,  1442,  1442,  1443,  1443,  1443,  1443,
    1444,  1444,  1445,  1445,  1446,  1446,  1447,  1447,  1448,  1449,
    1449,  1450,  1450,  1451,  1451,  1452,  1453,  1453,  1454,  1454,
    1455,  1455,  1456,  1456,  1457,  1458,  1458,  1459,  1459,  1460,
    1460,  1461,  1461,  1462,  1463,  1463,  1464,  1465,  1465,  1466,
    1466,  1467,  1467,  1468,  1468,  1469,  1470,  1470,  1470,  1471,
    1471,  1471,  1471,  1471,  1472,  1472,  1473,  1473,  1473,  1473,
    1473,  1473,  1474,  1474,  1474,  1474,  1474,  1475,  1475,  1475,
    1475,  1475,  1476,  1476,  1476,  1476,  1476,  1477,  1478,  1478,
    1479,  1479,  1480,  1480,  1481,  1482,  1482,  1482,  1483,  1484,
    1485,  1486,  1487,  1487,  1488,  1489,  1490,  1491,  1492,  1493,
    1494,  1495,  1496,  1497,  1497,  1498,  1499,  1500,  1500,  1501,
    1501,  1502,  1502,  1503,  1503,  1504,  1504,  1505,  1505,  1506,
    1506,  1507,  1507,  1507,  1508,  1508,  1508,  1509,  1509,  1509,
    1509,  1510,  1510,  1511,  1511,  1512,  1512,  1512,  1513,  1513,
    1513,  1514,  1514,  1515,  1516,  1516,  1516,  1517,  1517,  1518,
    1518,  1519,  1519,  1520,  1520,  1521,  1521,  1522,  1523,  1524,
    1524,  1525,  1525,  1526,  1526,  1527,  1527,  1528,  1528,  1529,
    1530,  1530,  1531,  1531,  1532,  1533,  1533,  1534,  1534,  1534,
    1535,  1535,  1536,  1536,  1537,  1537,  1537,  1538,  1539,  1539,
    1540,  1540,  1541,  1541,  1542,  1542,  1542,  1542,  1542,  1542,
    1542,  1542,  1542,  1543,  1543,  1544,  1545,  1546,  1547,  1548,
    1549,  1550,  1551,  1552,  1553,  1554,  1555,  1556,  1556,  1557,
    1558,  1559,  1560,  1561,  1562,  1563,  1564,  1565,  1566,  1567,
    1568,  1569,  1570,  1571,  1572,  1573,  1573,  1573,  1573,  1573,
    1573,  1574,  1575,  1576,  1577,  1578,  1579,  1579,  1579,  1579,
    1579,  1580,  1581,  1582,  1583,  1584,  1585,  1586,  1587,  1588,
    1589,  1589,  1590,  1590,  1591,  1591,  1592,  1592,  1593,  1593,
    1594,  1594,  1595,  1595,  1595,  1595,  1596,  1596,  1597,  1597,
    1598,  1598,  1599,  1599,  1599,  1600,  1601,  1602,  1602,  1602,
    1602,  1602,  1602,  1603,  1603,  1604,  1604,  1605,  1605,  1606,
    1606,  1606,  1608,  1607,  1610,  1609,  1609,  1611,  1611,  1612,
    1611,  1613,  1613,  1614,  1614,  1614,  1614,  1614,  1614,  1614,
    1614,  1614,  1614,  1614,  1614,  1614,  1614,  1614,  1614,  1614,
    1614,  1614,  1615,  1615,  1617,  1616,  1616,  1618,  1618,  1619,
    1619,  1621,  1620,  1622,  1620,  1623,  1620,  1620,  1624,  1624,
    1625,  1625,  1627,  1626,  1628,  1628,  1629,  1629,  1630,  1631,
    1631,  1631,  1632,  1633,  1634,  1634,  1635,  1635,  1636,  1636,
    1636,  1637,  1637,  1638,  1638,  1639,  1639,  1640,  1640,  1641,
    1641,  1641,  1641,  1642,  1642,  1643,  1643,  1644,  1644,  1645,
    1645,  1646,  1646,  1647,  1647,  1648,  1648,  1648,  1649,  1649,
    1650,  1650,  1651,  1651,  1652,  1652,  1653,  1654,  1654,  1654,
    1654,  1655,  1655,  1655,  1656,  1657,  1657,  1657,  1658,  1658,
    1659,  1660,  1660,  1660,  1660,  1660,  1660,  1660,  1660,  1660,
    1661,  1661,  1662,  1662,  1662,  1663,  1663,  1663,  1664,  1664,
    1664,  1665,  1665,  1666,  1666,  1667,  1667,  1668,  1669,  1670,
    1670,  1671,  1671,  1672,  1672,  1673,  1673,  1674,  1674,  1675,
    1675,  1676,  1677,  1678,  1679,  1680,  1681,  1682,  1682,  1683,
    1684,  1684,  1685,  1685,  1686,  1686,  1687,  1687,  1688,  1688,
    1688,  1689,  1689,  1689,  1690,  1690,  1691,  1691,  1692,  1692,
    1693,  1694,  1694,  1694,  1694,  1694,  1695,  1695,  1695,  1696,
    1696,  1696,  1696,  1696,  1696,  1696,  1696,  1696,  1696,  1696,
    1696,  1696,  1696,  1696,  1696,  1696,  1696,  1696,  1696,  1696,
    1696,  1696,  1696,  1696,  1696,  1696,  1696,  1696,  1696,  1696,
    1696,  1696,  1696,  1696,  1696,  1697,  1697,  1697,  1698,  1698,
    1698,  1698,  1698,  1698,  1698,  1698,  1698,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,
    1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1699,  1700,
    1700,  1700,  1701,  1701,  1701,  1701,  1702,  1702,  1702,  1702,
    1702,  1703,  1704,  1704,  1704,  1704,  1704,  1704,  1704,  1705,
    1705,  1705,  1705,  1705,  1705,  1705,  1706,  1706,  1707,  1707,
    1708,  1708,  1709,  1710,  1710,  1711,  1711,  1712,  1712,  1713,
    1713,  1714,  1714,  1714,  1714,  1714,  1715,  1715,  1715,  1715,
    1716,  1716,  1716,  1716,  1717,  1717,  1717,  1717,  1717,  1717,
    1718,  1719,  1719,  1719,  1719,  1719,  1719,  1719,  1720,  1720,
    1720,  1721,  1721,  1722,  1723,  1723,  1724,  1725,  1725,  1726,
    1726,  1727,  1727,  1727,  1727,  1728,  1728,  1728,  1728,  1728,
    1728,  1728,  1728,  1729,  1730,  1731,  1730,  1730,  1732,  1732,
    1733,  1733,  1734,  1735,  1735,  1735,  1735,  1736,  1737,  1737,
    1738,  1739,  1740,  1741,  1741,  1741,  1741,  1741,  1741,  1741,
    1741,  1741,  1741,  1742,  1742,  1742,  1742,  1742,  1743,  1743,
    1744,  1744,  1744,  1744,  1745,  1745,  1745,  1745,  1745,  1746,
    1746,  1747,  1746,  1746,  1746,  1748,  1748,  1749,  1748,  1748,
    1750,  1750,  1750,  1750,  1751,  1751,  1752,  1752,  1753,  1753,
    1753,  1753,  1753,  1753,  1753,  1753,  1753,  1753,  1753,  1753,
    1753,  1753,  1753,  1753,  1753,  1753,  1753,  1753,  1753,  1753,
    1753,  1753,  1753,  1753,  1753,  1753,  1753,  1753,  1753,  1753,
    1753,  1753,  1754,  1754,  1755,  1755,  1756,  1756,  1757,  1757,
    1757,  1758,  1758,  1758,  1758,  1758,  1759,  1759,  1760,  1760,
    1761,  1761,  1762,  1762,  1763,  1763,  1763,  1764,  1764,  1764,
    1765,  1765,  1765,  1766,  1766,  1766,  1766,  1766,  1766,  1767,
    1768,  1769,  1770,  1771,  1772,  1773,  1773,  1773,  1774,  1774,
    1774,  1774,  1774,  1774,  1774,  1774,  1774,  1774,  1774,  1774,
    1774,  1774,  1774,  1774,  1775,  1776,  1776,  1777,  1777,  1778,
    1778,  1779,  1779,  1780,  1780,  1780,  1780,  1780,  1781,  1781,
    1782,  1782,  1783,  1783,  1783,  1783,  1783,  1784,  1784,  1786,
    1785,  1787,  1787,  1788,  1788,  1788,  1789,  1789,  1789,  1790,
    1790,  1791,  1792,  1792,  1793,  1794,  1795,  1795,  1795,  1796,
    1797,  1798,  1799,  1799,  1799,  1799,  1799,  1799,  1799,  1799,
    1800,  1801,  1801,  1801,  1802,  1802,  1802,  1802,  1802,  1803,
    1803,  1803,  1803,  1803,  1803,  1804,  1804,  1805,  1806,  1807,
    1807,  1807,  1808,  1809,  1809,  1809,  1810,  1810,  1810,  1812,
    1811,  1813,  1814,  1814,  1814,  1814,  1815,  1815,  1816,  1816,
    1818,  1817,  1819,  1819,  1821,  1822,  1823,  1824,  1820,  1826,
    1827,  1828,  1829,  1825,  1830,  1830,  1830,  1830,  1830,  1830,
    1831,  1831,  1832,  1832,  1832,  1833,  1833,  1834,  1834,  1834,
    1835,  1835,  1836,  1836,  1836,  1837,  1837,  1838,  1838,  1839,
    1839,  1840,  1841,  1841,  1842,  1842,  1843,  1843,  1843,  1844,
    1844,  1845,  1845,  1846,  1846,  1847,  1847,  1848,  1848,  1849,
    1849,  1850,  1850,  1850,  1851,  1851,  1852
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     3,     1,     0,
       4,     2,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     4,     1,     2,     0,     4,
       0,     2,     3,     1,     2,     0,     3,     1,     2,     0,
       6,     0,     6,     1,     3,     3,     3,     3,     3,     3,
       3,     3,     2,     3,     1,     3,     1,     2,     3,     5,
       7,     2,     3,     1,     3,     3,     2,     3,     1,     3,
       1,     1,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     5,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     1,     0,     1,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     3,     3,     3,     0,
       3,     9,     6,     7,     9,     4,    10,     0,     6,     2,
       9,     7,     6,     7,    11,     7,     8,     7,     0,     3,
       3,     6,     3,     0,     3,    12,    11,    11,     1,     1,
       1,     3,     2,     2,     2,     2,     2,     2,     2,     0,
      12,     0,     6,     2,     0,     1,     3,     1,     0,     2,
       0,     2,     0,     1,     3,     4,     0,     2,     0,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     0,     2,     0,     2,     2,
       2,     2,     2,     3,     3,     1,     1,     1,     2,     3,
       3,     3,     0,     3,     0,     1,     3,     1,     3,     0,
       1,     3,     1,     4,     0,     1,     1,     1,     0,     3,
       2,     3,     0,     3,     5,     5,     0,     7,     0,     6,
       1,     1,     1,     3,     1,     1,     1,     3,     0,     1,
       1,     1,     1,     2,     1,     3,     1,     1,     0,     1,
       0,     2,     3,     5,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       4,     0,     1,     1,     1,     3,     1,     3,     3,     1,
       2,     1,     1,     1,     1,     3,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     0,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     5,     0,
       2,     0,     3,     0,     2,     2,     2,     2,     0,     6,
       2,     0,     2,     1,     1,     3,     0,     0,     0,     7,
       0,     2,     2,     1,     1,     0,     0,     8,     0,     6,
       1,     2,     1,     2,     0,     0,     6,     0,     0,     6,
       0,     2,     0,     5,     0,     1,     0,     5,     0,     2,
       0,     5,     4,     0,     0,     8,     0,     0,     8,     1,
       1,     1,     1,     1,     0,     2,     0,     4,     0,     1,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     1,     1,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     3,
       1,     0,     1,     1,     3,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     1,     3,     1,     1,     1,     2,
       1,     1,     2,     3,     1,     3,     3,     3,     3,     3,
       3,     3,     4,     3,     1,     1,     3,     3,     3,     1,
       1,     2,     1,     2,     1,     0,     2,     1,     2,     1,
       6,     6,     5,     4,     5,     4,     5,     0,     1,     0,
       3,     0,     2,     0,     8,     9,     0,     1,     1,     3,
       0,     2,     0,     3,     1,     3,     5,     0,     4,     3,
       1,     1,     1,     3,     1,     3,     0,     4,     1,     3,
       1,     1,     0,     3,     1,     3,     3,     0,     1,     2,
       1,     3,     4,     3,     3,     3,     4,     4,     3,     1,
       2,     1,     4,     0,     1,     1,     2,     1,     1,     1,
       0,     3,     1,     2,     1,     3,     0,     1,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     5,
       1,     1,     3,     4,     4,     3,     2,     2,     3,     3,
       2,     3,     3,     1,     1,     1,     4,     4,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     3,     0,     1,     6,
       7,     7,     7,     8,     3,     4,     0,     2,     0,     1,
       0,     1,     2,     2,     9,     0,     2,     0,     1,     1,
       3,     3,     3,     1,     2,     1,     1,     3,     2,     3,
       2,     2,     1,     3,     3,     2,     3,     1,     2,     2,
       2,     1,     2,     1,     1,     1,     2,     3,     2,     3,
       2,     2,     5,     5,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     2,     1,     2,
       1,     2,     3,     2,     1,     1,     1,     1,     1,     1,
       2,     0,     1,     1,     1,     1,     1,     0,     1,     0,
       1,     1,     5,     0,     3,     0,     2,     3,     0,     1,
       2,     1,     1,     1,     1,     3,     3,     3,     3,     0,
       1,     0,     1,     0,     1,     2,     1,     1,     2,     2,
       2,     4,     3,     1,     3,     2,     1,     2,     1,     2,
       2,     2,     2,     3,     2,     2,     2,     1,     3,     3,
       1,     0,     3,     1,     1,     1,     1,     1,     1,     2,
       1,     1,     2,     1,     1,     1,     0,     2,     1,     1,
       1,     1,     1,     1,     0,     2,     0,     1,     1,     2,
       2,     1,     2,     2,     0,     1,     1,     1,     3,     1,
       3,     0,     1,     0,     4,     0,     1,     5,     0,     3,
       3,     1,     0,     2,     2,     2,     0,     3,     3,     6,
       6,     1,     1,     2,     2,     2,     2,     2,     1,     1,
       0,     1,     1,     1,     1,     0,     1,     1,     2,     1,
       2,     2,     3,     2,     3,     0,     1,     1,     2,     1,
       3,     0,     1,     1,     2,     1,     0,     1,     1,     2,
       1,     1,     3,     2,     1,     3,     3,     1,     3,     3,
       0,     1,     2,     2,     1,     1,     1,     1,     1,     3,
       1,     2,     5,     3,     1,     1,     4,     0,     1,     0,
       2,     1,     3,     4,     4,     0,     5,     0,     5,     0,
       5,     0,     5,     0,     4,     0,    10,     7,     6,     6,
       6,     4,     7,     7,     6,     5,     5,     5,     5,     5,
       5,     3,     3,     0,     2,     8,     3,     0,     2,     2,
       0,     1,     1,     2,     2,     2,     2,     5,     3,     3,
       3,     3,     5,     4,     3,     4,     4,     2,     2,     2,
       0,     2,     2,     1,     2,     2,     2,     2,     3,     0,
       3,     1,     4,     0,     3,     0,     2,     0,     1,     1,
       2,     1,     3,     1,     2,     0,     1,     1,     3,     2,
       2,     3,     6,     5,     3,     4,     4,     4,     4,     5,
       4,     3,     3,     8,     7,     4,     4,     1,     1,     0,
       1,     2,     2,     1,     1,     1,     3,     3,     1,     3,
       1,     3,     6,     5,     2,     6,     5,     4,     4,     3,
       3,     3,     3,     2,     2,     6,     8,     5,     5,     4,
       4,     4,     3,     5,     5,     5,     5,     1,     3,     1,
       1,     1,     0,     1,     1,     2,     2,     3,     1,     1,
       3,     1,     1,     0,     1,     0,     1,     0,     1,     1,
       0,     2,     1,     0,     1,     1,     1,     2,     2,     2,
       0,     1,     1,     3,     1,     1,     1,     3,     3,     3,
       1,     1,     4,     0,     0,    11,     3,     0,     1,     1,
       3,     3,     6,     2,     2,     0,     3,     0,     3,     0,
       3,     0,     3,     0,     1,     1,     3,     1,     1,     0,
       2,     1,     3,     3,     3,     1,     4,     0,     1,     1,
       5,     0,     1,     1,     2,     1,     1,     1,     5,     0,
       3,     0,     5,     4,     2,     4,     0,     1,     1,     2,
       1,     1,     1,     1,     1,     2,     4,     0,     1,     1,
       0,     4,     3,     3,     5,     1,     3,     3,     5,     7,
       1,     3,     2,     1,     1,     8,     5,     1,     3,     3,
       4,     0,     4,     0,     2,     1,     2,     1,     1,     3,
       2,     3,     3,     2,     3,     4,     3,     4,     2,     3,
       2,     1,     4,     4,     4,     4,     3,     3,     4,     1,
       1,     1,     9,     8,     0,     1,     2,     1,     1,     1,
       3,     2,     2,     0,     1,     2,     1,     1,     1,     2,
       1,     3,     4,     4,     1,     1,     2,     0,     1,     2,
       1,     3,     1,     1,     1,     2,     0,     2,     2,     1,
       1,     0,     2,     3,     3,     3,     2,     3,     4,     3,
       4,     3,     4,     1,     3,     4,     3,     4,     1,     3,
       4,     5,     7,     6,     8,     6,     5,     6,     4,     3,
       5,     4,     6,     3,     4,     1,     1,     0,     3,     3,
       3,     3,     3,     3,     5,     5,     3,     3,     3,     3,
       3,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     1,     1,
       1,     3,     2,     2,     2,     2,     1,     3,     5,     6,
       2,     4,     7,     2,     7,     9,    12,     5,     6,     6,
       4,     4,     5,     3,     3,     0,     1,     4,     6,     2,
       4,     4,     4,    10,     6,     8,     8,     6,     4,     4,
       6,     4,     4,     4,     6,     4,     7,     7,     7,     6,
       6,     6,     6,     3,     4,     6,     8,     2,     2,     8,
       8,     6,     6,     1,     6,     6,     8,     8,     6,     8,
       6,     2,     8,     8,     2,     2,     2,     0,     2,     4,
       4,     4,     4,     3,     8,     6,     8,     4,     6,     4,
       6,     8,     4,     3,     6,     4,     6,     4,     7,     7,
      10,     1,     4,     4,     4,     4,     4,     6,     4,     4,
       6,     2,     3,     0,     4,     0,     3,     0,     1,     1,
       3,     2,     1,     1,     5,     6,     5,     5,     5,     7,
       5,     6,     5,     6,     5,     6,     5,     6,     5,     6,
       5,     5,     5,     5,     5,     6,     8,     4,     4,     4,
       4,     4,     5,     7,     7,     6,     6,     9,     0,     3,
       1,     1,     1,     1,     2,     0,     2,     0,     2,     2,
       0,     2,     2,     0,     1,     2,     1,     1,     1,     3,
       4,     0,     1,     0,     3,     0,     3,     0,     3,     1,
       1,     2,     2,     2,     4,     2,     4,     1,     2,     2,
       2,     4,     0,     3,     2,     2,     3,     1,     1,     1,
       4,     2,     3,     1,     4,     0,     1,     0,     2,     0,
       3,     3,     1,     2,     2,     3,     2,     1,     2,     1,
       2,     1,     1,     2,     2,     2,     1,     1,     2,     1,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     3,
       1,     3,     1,     3,     0,     1,     0,     2,     4,     5,
       1,     1,     4,     1,     1,     5,     7,     5,     7,     3,
       3,     3,     4,     4,     1,     2,     2,     1,     3,     3,
       0,     1,     0,     1,     0,     1,     4,     1,     1,     1,
       1,     1,     1,     3,     5,     3,     3,     4,     3,     3,
       3,     4,     8,     5,     4,     1,     3,     3,     7,     4,
       0,     1,     0,     1,     1,     2,     1,     2,     3,     3,
       1,     1,     2,     0,     2,     3,     3,     1,     1,     6,
       6,     1,     2,     0,     1,     1,     0,     1,     1,     1,
       1,     3,     1,     1,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     1,     0,     2,     0,     1,     0,     1,     2,     0,
       2,     2,     3,     3,     1,     4,     0,     3,     1,     3,
       0,     2,     1,     3,     3,     0,     4,     3,     1,     0,
       1,     3,     1,     2,     0,     1,     3,     3,     1,     0,
       1,     1,     1,     0,     1,     2,     1,     3,     3,     1,
       1,     1,     1,     1,     0,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     2,     1,     2,     5,     2,     1,     2,     6,
       6,     4,     6,     4,     5,     4,     4,     5,     4,     4,
       4,     5,     5,     4,     4,     6,     4,     1,     3,     1,
       3,     0,     2,     0,     1,     0,     1,     1,     3,     1,
       1,     9,    10,     8,     6,     7,     6,     0,     1,     1,
       1,     1,     1,     0,     1,     1,     3,     4,     1,     3,
       4,     3,     1,     2,     1,     2,     1,     1,     1,     3,
       1,     3,     1,     1,     1,     0,     1,     3,     4,     0,
       1,     3,     1,     1,     1,     0,     3,     0,     5,    10,
       0,     1,     3,     1,     3,     0,     1,    10,     7,     8,
       0,     2,     0,     2,     1,     1,     1,     3,     0,     1,
       0,     1,     1,     3,     1,     1,     2,     2,     2,     1,
       1,     1,     1,     0,     3,     3,     5,     5,     4,     5,
       5,     2,     4,     4,     4,     7,     3,     3,     2,     6,
       7,     7,     3,     6,     6,     3,     3,     2,     5,     4,
       3,     4,     3,     3,     2,     2,     4,     6,     3,     5,
       7,     5,     4,     4,     3,     4,     3,     3,     3,     3,
       3,     4,     4,     4,     4,     4,     4,     4,     4,     4,
       1,     1,     1,     1,     0,     1,     0,     2,     0,     1,
       0,     1,     0,     1,     1,     2,     1,     1,     0,     2,
       0,     2,     0,     2,     1,     3,     3,     1,     1,     1,
       1,     1,     3,     1,     1,     0,     3,     2,     1,     0,
       1,     1,     0,     4,     0,     4,     1,     0,     3,     0,
       3,     3,     1,     2,     2,     2,     2,     2,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     0,     1,     0,     3,     3,     3,     1,     0,
       2,     0,     4,     0,     4,     0,     3,     1,     0,     1,
       0,     2,     0,     3,     3,     3,     2,     2,     3,     0,
       1,     1,     2,    18,     1,     1,     0,     1,     0,     1,
       1,     0,     1,     1,     1,     0,     2,     2,     1,     3,
       4,     3,     3,     0,     2,     2,     1,     3,     3,     0,
       4,     0,     3,     1,     1,     0,     3,     2,     3,     1,
       1,     2,     0,     2,     3,     1,     3,     1,     1,     2,
       2,     1,     1,     1,     1,     1,     2,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       2,     0,     1,     1,     1,     3,     5,     2,     1,     1,
       1,     1,     1,     3,     5,     1,     3,     2,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     2,     1,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     2,     2,     5,     5,     7,     7,     3,
       3,     3,     6,     6,     6,     4,     0,     2,     4,     6,
       1,     3,     1,     2,     2,     0,     2,     1,     3,     2,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     1,
       0,     2,     2,     2,     0,     2,     2,     2,     2,     2,
       3,     3,     4,     6,     2,     3,     3,     2,     1,     3,
       3,     2,     2,     1,     0,     2,     3,     0,     2,     2,
       2,     2,     2,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     3,     0,     3,     3,     1,     1,
       1,     3,     3,     1,     1,     2,     2,     2,     1,     1,
       1,     1,     3,     4,     5,     4,     2,     6,     5,     9,
       3,     3,     2,     4,     3,     6,     7,    10,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     4,
       7,     0,     9,     8,     6,     5,     9,     0,    11,     7,
       0,     1,     1,     1,     0,     1,     1,     3,     2,     3,
       2,     2,     2,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     1,     3,     2,
       2,     2,     2,     2,     2,     2,     2,     1,     1,     2,
       2,     2,     0,     3,     0,     1,     3,     1,     2,     2,
       2,     1,     3,     3,     1,     3,     1,     3,     1,     3,
       0,     3,     0,     3,     3,     2,     7,     3,     3,     2,
       0,     2,     4,     1,     1,     1,     1,     1,     1,     3,
       4,     3,     5,     5,     6,     3,     3,     3,     5,     5,
       3,     3,     5,     2,     3,     3,     3,     2,     4,     7,
       4,     7,     3,     5,     2,     1,     3,     1,     3,     0,
       3,     1,     3,     0,     2,     2,     2,     2,     0,     3,
       0,     3,     0,     3,     4,     3,     3,     0,     3,     0,
       3,     0,     1,     0,     3,     2,     0,     1,     2,     0,
       1,     4,     4,     5,     2,     3,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     3,     3,     4,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     3,     1,
       2,     1,     2,     3,     3,     3,     0,     3,     3,     0,
       7,     2,     0,     3,     4,     4,     1,     1,     0,     2,
       0,    12,     7,     6,     0,     0,     0,     0,    14,     0,
       0,     0,     0,    11,     4,     4,     3,     4,     3,     3,
       0,     2,     1,     3,     5,     1,     1,     0,     1,     1,
       0,     2,     0,     1,     3,     5,     3,     3,     3,     1,
       3,     4,     6,    10,     1,     5,     0,     2,     3,     1,
       1,     0,     3,     1,     3,     1,     3,     1,     2,     0,
       3,     0,     1,     1,     0,     1,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                       , &(yylsp[(yyi + 1) - (yynrhs)])                       , YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.
       'yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yyls1, yysize * sizeof (*yylsp),
                    &yystacksize);

        yyls = yyls1;
        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, &yylloc, YYTHD);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:
#line 2203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[-1].item);
          }
#line 25121 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 4:
#line 2208 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[-1].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[-1].partition_clause)->part_info;
          }
#line 25135 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 2218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[-4].lexer.lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Value_generator;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[-2].item), &(yyvsp[-2].item));
            gcol_info->expr_item= (yyvsp[-2].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
#line 25157 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 6:
#line 2236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[-1].subquery);
          }
#line 25165 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 7:
#line 2240 "sql_yacc.yy" /* yacc.c:1646  */
    {
           ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
           static_cast<Derived_expr_parser_state *>(YYP)->result= (yyvsp[-1].item);
         }
#line 25174 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 8:
#line 2248 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 25190 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 9:
#line 2260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 25217 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 11:
#line 2285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 25226 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 14:
#line 2297 "sql_yacc.yy" /* yacc.c:1646  */
    { *parse_tree= (yyvsp[0].top_level_node); }
#line 25232 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 16:
#line 2303 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25238 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 17:
#line 2304 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25244 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 18:
#line 2305 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25250 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 20:
#line 2307 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25256 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 21:
#line 2308 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25262 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 23:
#line 2310 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25268 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 24:
#line 2311 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25274 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 25:
#line 2312 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25280 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 27:
#line 2314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25286 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 28:
#line 2315 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25292 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 30:
#line 2317 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25298 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 32:
#line 2319 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25304 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 34:
#line 2321 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25310 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 35:
#line 2322 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25316 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 36:
#line 2323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25322 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 37:
#line 2324 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25328 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 43:
#line 2330 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25334 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 47:
#line 2334 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25340 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 48:
#line 2335 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25346 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 49:
#line 2336 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25352 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 51:
#line 2338 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25358 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 52:
#line 2339 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25364 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 55:
#line 2342 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25370 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 57:
#line 2344 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25376 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 58:
#line 2345 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25382 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 59:
#line 2346 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25388 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 60:
#line 2347 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25394 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 61:
#line 2348 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25400 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 62:
#line 2349 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25406 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 63:
#line 2350 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25412 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 65:
#line 2352 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25418 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 66:
#line 2353 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25424 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 67:
#line 2354 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25430 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 68:
#line 2355 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25436 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 70:
#line 2357 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25442 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 71:
#line 2358 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25448 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 2360 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25454 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 2361 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25460 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 2363 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25466 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 2367 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25472 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 2368 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25478 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2369 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25484 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 83:
#line 2370 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25490 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2373 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25496 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 87:
#line 2374 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25502 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 89:
#line 2376 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25508 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2377 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25514 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 2378 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25520 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 2380 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[0].set)); }
#line 25526 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2429 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25532 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2430 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25538 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2431 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25544 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2432 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25550 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2434 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25556 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2435 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25562 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2437 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25568 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2438 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25574 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2443 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 25585 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2458 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[-2].lexer.lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 25606 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
#line 25617 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
#line 25628 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 25639 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2502 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25645 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lexer.lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 25656 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 25668 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lexer.lex_str).str;
          }
#line 25678 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 2548 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "CHANGE MASTER",
                                        "CHANGE REPLICATION SOURCE");
          }
#line 25687 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2557 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            assert(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
#line 25702 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 25711 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2573 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            assert(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25725 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 2583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 25734 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2595 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_DB);
          }
#line 25745 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_DB);
          }
#line 25756 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_TABLE);
          }
#line 25767 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
#line 25778 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
#line 25789 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2630 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
#line 25801 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2638 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_REWRITE_DB);
          }
#line 25812 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 182:
#line 2647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25822 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2653 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25830 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 184:
#line 2660 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25841 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 185:
#line 2667 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25850 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 186:
#line 2675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
#line 25861 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 187:
#line 2684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25871 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 2690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25879 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2696 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-3].item));
            (yyval.item_list)->push_back((yyvsp[-1].item));
          }
#line 25891 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].item_list)->push_back((yyvsp[-3].item));
            (yyvsp[-6].item_list)->push_back((yyvsp[-1].item));
            (yyval.item_list)= (yyvsp[-6].item_list);
          }
#line 25901 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2712 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25911 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2718 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25919 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25930 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 2732 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25939 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.item)= table_item;
          }
#line 25952 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25962 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 2758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25970 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 2765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25981 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2772 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25990 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 2780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
#line 26001 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 203:
#line 2795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_AUTO_POSITION",
                                        "SOURCE_AUTO_POSITION");

          }
#line 26011 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 205:
#line 2805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_HOST",
                                        "SOURCE_HOST");
          }
#line 26020 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 2814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_BIND",
                                        "SOURCE_BIND");

          }
#line 26030 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 209:
#line 2824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_USER",
                                        "SOURCE_USER");
          }
#line 26039 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 2833 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PASSWORD",
                                        "SOURCE_PASSWORD");
          }
#line 26048 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 2842 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PORT",
                                        "SOURCE_PORT");
          }
#line 26057 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 2851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_CONNECT_RETRY",
                                        "SOURCE_CONNECT_RETRY");
          }
#line 26066 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 2860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_RETRY_COUNT",
                                        "SOURCE_RETRY_COUNT");
          }
#line 26075 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 2869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_DELAY",
                                        "SOURCE_DELAY");
          }
#line 26084 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 2878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL",
                                        "SOURCE_SSL");
          }
#line 26093 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 2887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CA",
                                        "SOURCE_SSL_CA");
          }
#line 26102 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 2896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CAPATH",
                                        "SOURCE_SSL_CAPATH");
          }
#line 26111 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 2905 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CIPHER",
                                        "SOURCE_SSL_CIPHER");
          }
#line 26120 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 229:
#line 2914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CRL",
                                        "SOURCE_SSL_CRL");
          }
#line 26129 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 2923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CRLPATH",
                                        "SOURCE_SSL_CRLPATH");
          }
#line 26138 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 2932 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_KEY",
                                        "SOURCE_SSL_KEY");
          }
#line 26147 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 235:
#line 2941 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_VERIFY_SERVER_CERT",
                                        "SOURCE_SSL_VERIFY_SERVER_CERT");
          }
#line 26156 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 2950 "sql_yacc.yy" /* yacc.c:1646  */
    {
             push_deprecated_warn(YYTHD, "MASTER_TLS_VERSION",
                                         "SOURCE_TLS_VERSION");
          }
#line 26165 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 2959 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_TLS_CIPHERSUITES",
                                        "SOURCE_TLS_CIPHERSUITES");
          }
#line 26174 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 241:
#line 2968 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CERT",
                                        "SOURCE_SSL_CERT");
          }
#line 26183 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 243:
#line 2977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PUBLIC_KEY_PATH",
                                        "SOURCE_PUBLIC_KEY_PATH");
          }
#line 26192 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 2986 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "GET_MASTER_PUBLIC_KEY",
                                        "GET_SOURCE_PUBLIC_KEY");
          }
#line 26201 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 2995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_HEARTBEAT_PERIOD",
                                        "SOURCE_HEARTBEAT_PERIOD");
          }
#line 26210 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 249:
#line 3004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_COMPRESSION_ALGORITHM",
                                        "SOURCE_COMPRESSION_ALGORITHM");
          }
#line 26219 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 251:
#line 3013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_ZSTD_COMPRESSION_LEVEL",
                                        "SOURCE_ZSTD_COMPRESSION_LEVEL");
          }
#line 26228 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 3022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lexer.lex_str).str;
          }
#line 26236 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.network_namespace = (yyvsp[0].lexer.lex_str).str;
          }
#line 26244 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 255:
#line 3030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.bind_addr = (yyvsp[0].lexer.lex_str).str;
          }
#line 26252 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 3034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lexer.lex_str).str;
          }
#line 26260 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 3038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lexer.lex_str).str;
            if (strlen((yyvsp[0].lexer.lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
#line 26274 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 258:
#line 3048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 26282 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 259:
#line 3052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 26290 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 3056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26299 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 3061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[0]).cpp.start, (yylsp[0]).cpp.end - (yylsp[0]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 26314 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 262:
#line 3072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26323 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 3077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lexer.lex_str).str;
          }
#line 26331 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 3081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lexer.lex_str).str;
          }
#line 26339 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 265:
#line 3085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_version= (yyvsp[0].lexer.lex_str).str;
          }
#line 26347 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 267:
#line 3090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lexer.lex_str).str;
          }
#line 26355 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 268:
#line 3094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lexer.lex_str).str;
          }
#line 26363 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 269:
#line 3098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lexer.lex_str).str;
          }
#line 26371 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 3102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26380 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 3107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lexer.lex_str).str;
          }
#line 26388 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lexer.lex_str).str;
          }
#line 26396 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3115 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.public_key_path= (yyvsp[0].lexer.lex_str).str;
          }
#line 26404 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3119 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.get_public_key= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26414 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *num= (yyvsp[0].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > replica_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26452 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 26460 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3163 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.compression_algorithm = (yyvsp[0].lexer.lex_str).str;
           }
#line 26468 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.zstd_compression_level = (yyvsp[0].ulong_num);
           }
#line 26476 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 3171 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26486 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.require_row_format =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.require_row_format =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
              const char* wrong_value = YYTHD->strmake((yylsp[0]).raw.start, (yylsp[0]).raw.length());
              my_error(ER_REQUIRE_ROW_FORMAT_INVALID_VALUE, MYF(0), wrong_value);
            }
          }
#line 26506 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 3195 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
            }
          }
#line 26526 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 285:
#line 3212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.m_gtid_only =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.m_gtid_only =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
                YYTHD->syntax_error_at((yylsp[0]),
                  "You have an error in your CHANGE REPLICATION SOURCE syntax; GTID_ONLY only accepts values 0 or 1");
                MYSQL_YYABORT;
            }
          }
#line 26547 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 290:
#line 3239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[0].ulong_num));
          }
#line 26555 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3245 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= false;
            Lex->mi.privilege_checks_username= (yyvsp[0].lex_user)->user.str;
            Lex->mi.privilege_checks_hostname= (yyvsp[0].lex_user)->host.str;
          }
#line 26565 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= true;
            Lex->mi.privilege_checks_username= NULL;
            Lex->mi.privilege_checks_hostname= NULL;
          }
#line 26575 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_STREAM;
          }
#line 26583 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_ON;
          }
#line 26591 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_OFF;
          }
#line 26599 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 296:
#line 3275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_OFF;
          }
#line 26607 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_LOCAL;
          }
#line 26615 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 298:
#line 3283 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_UUID;
            Lex->mi.assign_gtids_to_anonymous_transactions_manual_uuid = (yyvsp[0].lexer.lex_str).str;
            if (!binary_log::Uuid::is_valid((yyvsp[0].lexer.lex_str).str, binary_log::Uuid::TEXT_LENGTH))
            {
              my_error(ER_WRONG_VALUE, MYF(0), "UUID", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 26629 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 299:
#line 3297 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_STRING;
            Lex->mi.tls_ciphersuites_string= (yyvsp[0].lexer.lex_str).str;
          }
#line 26638 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_NULL;
            Lex->mi.tls_ciphersuites_string = NULL;
          }
#line 26647 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 301:
#line 3310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_LOG_FILE",
                                        "SOURCE_LOG_FILE");
          }
#line 26656 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 303:
#line 3319 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_LOG_POS",
                                        "SOURCE_LOG_POS");
          }
#line 26665 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3328 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 26673 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 26693 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 307:
#line 3348 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 26701 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3352 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 26712 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 309:
#line 3362 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = {}; }
#line 26718 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3364 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 26724 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3370 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table),
                                             (yyvsp[-2].table_element_list),
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 26737 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].is_not_empty), (yyvsp[-2].is_not_empty), (yyvsp[-1].table),
                                             NULL,
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 26750 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3390 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].is_not_empty), (yyvsp[-3].is_not_empty), (yyvsp[-2].table), (yyvsp[0].table));
          }
#line 26758 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table), (yyvsp[-1].table));
          }
#line 26766 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_role(!!(yyvsp[-1].is_not_empty), (yyvsp[0].user_list));
          }
#line 26774 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group(to_lex_cstring((yyvsp[-6].lexer.lex_str)), (yyvsp[-3].resource_group_type), (yyvsp[-2].resource_group_vcpu_list_type), (yyvsp[-1].resource_group_priority_type),
                                                 (yyvsp[0].resource_group_state_type).is_default ? true :
                                                 (yyvsp[0].resource_group_state_type).value);
          }
#line 26784 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 26796 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            lex->create_info->options= (yyvsp[-3].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 26807 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3436 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26813 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[-4].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[-6].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 26827 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26850 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26872 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_undo_tablespace{
              CREATE_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26895 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[-8].lexer.lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[-8].lexer.lex_str);
            Lex->server_options.set_scheme((yyvsp[-4].lexer.lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
#line 26912 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_COMPRESSION_DICTIONARY;
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == nullptr)
              MYSQL_YYABORT; // OOM
            Lex->create_info->options= (yyvsp[-4].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            Lex->ident= (yyvsp[-3].lexer.lex_str);
            Lex->create_info->zip_dict_name = (yyvsp[-1].item);
          }
#line 26926 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3539 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), true, false);
          }
#line 26934 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), false, (yyvsp[-2].is_not_empty));
          }
#line 26942 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 3551 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_DA_OOM, MYF(0)); /* purecov: inspected */
          }
#line 26952 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3557 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->srs_name= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26968 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3569 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->definition= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26984 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-5].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[-5].sql_cmd_srs_attributes)->organization= (yyvsp[-3].lexer.lex_str);
              (yyvsp[-5].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[0].ulonglong_number);
            }
          }
#line 27001 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3595 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->description= (yyvsp[0].lexer.lex_str);
            }
          }
#line 27017 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3610 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= 0;
          }
#line 27025 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3615 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[0].user_list);
          }
#line 27033 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, (yyvsp[-10].key_type), (yyvsp[-8].lexer.lex_str), (yyvsp[-7].index_option),
                                             (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 27044 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 3632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 27055 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 3640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 27066 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 3653 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].text_literal), &(yyval.item)); }
#line 27072 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 3655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    CREATE COMPRESSION_DICTIONARY <dict>(@foo := expr)
                */
                my_error(ER_SYNTAX_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 27094 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 3681 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_username((yyvsp[0].lexer.lex_str));
          }
#line 27102 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 3685 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_host((yyvsp[0].lexer.lex_str));
          }
#line 27110 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 3689 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_db((yyvsp[0].lexer.lex_str));
          }
#line 27118 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 3693 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_owner((yyvsp[0].lexer.lex_str));
          }
#line 27126 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 3697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_password((yyvsp[0].lexer.lex_str));
            Lex->contains_plaintext_password= true;
          }
#line 27135 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 3702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_socket((yyvsp[0].lexer.lex_str));
          }
#line 27143 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 3706 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_port((yyvsp[0].ulong_num));
          }
#line 27151 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 3713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 27171 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 3733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 27183 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 3744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));

            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 27194 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 3753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 27204 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 3761 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27210 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 3763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27220 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 3769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27230 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 3775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27240 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 3784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 27251 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 359:
#line 3791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 27261 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 3801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 27271 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 3809 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27277 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 3815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 27287 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 3821 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 27297 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 3829 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27303 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 3831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->comment= (yyvsp[0].lexer.lex_str);
            (yyval.num)= 1;
          }
#line 27312 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 3838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 27362 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 3884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
#line 27376 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 3913 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-2].lexer.lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 27394 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 3927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (YYMEM_ROOT) sp_name(db, (yyvsp[0].lexer.lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 27414 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 3945 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27420 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 3946 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27426 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 3950 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27432 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 3951 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27438 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 3957 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 27444 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 3959 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 27450 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 3961 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 27456 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 392:
#line 3963 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 27462 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 393:
#line 3965 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 27468 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 394:
#line 3967 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 27474 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 395:
#line 3969 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27480 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 396:
#line 3974 "sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 27486 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 397:
#line 3975 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= true; }
#line 27492 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 398:
#line 3976 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= false; }
#line 27498 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 399:
#line 3981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 27506 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 400:
#line 3985 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 27514 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 401:
#line 3992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_call((yyvsp[-2].lexer.optimizer_hints), (yyvsp[-1].spname), (yyvsp[0].item_list2));
          }
#line 27522 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 402:
#line 3998 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 27528 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 403:
#line 4000 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.item_list2)= (yyvsp[-1].item_list2);
            }
#line 27536 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 408:
#line 4018 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 27588 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 4080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[-3].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 27639 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 4129 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 27645 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 415:
#line 4130 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 27651 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 416:
#line 4131 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_OUT; }
#line 27657 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 417:
#line 4132 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_INOUT; }
#line 27663 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 4136 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27669 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 420:
#line 4141 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27675 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 4147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 27683 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 4151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 27708 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 4179 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[-3].num));

            CONTEXTUALIZE((yyvsp[-2].type));
            enum enum_field_types var_type= (yyvsp[-2].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-2].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[-1].lexer.charset), &cs))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[0].sp_default).expr;

            LEX_CSTRING dflt_value_query= EMPTY_CSTR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[0].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[0]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[-2].type)->get_length(), (yyvsp[-2].type)->get_dec(),
                                        (yyvsp[-2].type)->get_type_flags(),
                                        NULL, NULL, &NULL_CSTR, 0,
                                        (yyvsp[-2].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[-1].lexer.charset) != nullptr, (yyvsp[-2].type)->get_uint_geom_type(), nullptr,
                                        nullptr, nullptr, {},
                                        dd::Column::enum_hidden_type::HT_VISIBLE))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.is_nullable= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 27807 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 425:
#line 4274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lexer.lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lexer.lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 27828 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 4291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_CSTR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
#line 27873 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 4332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 27911 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 4369 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[0]).raw.end);
          }
#line 27924 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 4378 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$7*/
            MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            assert(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->m_sql_cmd->set_as_part_of_sp();
            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lexer.lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 27990 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 4442 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 27996 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 4443 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 28002 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 432:
#line 4449 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 28008 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 4451 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 28014 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 4456 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 28038 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 435:
#line 4479 "sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 28053 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 4494 "sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lexer.lex_str)) || is_sqlstate_completion((yyvsp[0].lexer.lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].lexer.lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 28076 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 4515 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28082 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 4516 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28088 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 4521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 28096 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 4525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 28113 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 4538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 28123 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 4544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 28133 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 4550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 28143 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 4559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 28157 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 4572 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 28187 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 4598 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 28193 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 4603 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 28199 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 4605 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 28205 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 4610 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
#line 28211 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 4612 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= (yyvsp[0].signal_item_list); }
#line 28217 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 4617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 28227 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 4624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= (yyvsp[-4].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 28237 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 4636 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 28243 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 455:
#line 4638 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                YYTHD->syntax_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 28267 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 456:
#line 4658 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 28273 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 4664 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
#line 28279 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 4666 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
#line 28285 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 4668 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
#line 28291 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 4670 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
#line 28297 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 4672 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
#line 28303 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 4674 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
#line 28309 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 4676 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
#line 28315 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 4678 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
#line 28321 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 4680 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
#line 28327 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 4682 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
#line 28333 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 467:
#line 4684 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
#line 28339 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 4686 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
#line 28345 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 4691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 28360 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 4705 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 28377 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 4721 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28383 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 4723 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28389 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 4725 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
#line 28395 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 474:
#line 4730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 28405 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 4736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 28415 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 4745 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 28425 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 4751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 28435 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 4760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 28445 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 4768 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, to_lex_cstring((yyvsp[0].lexer.lex_str)), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[0]).raw.start,
                (yylsp[0]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28477 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 4796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[0].lexer.lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
#line 28486 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 481:
#line 4804 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 28492 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 482:
#line 4806 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 28498 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 4815 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28504 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 484:
#line 4820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 28514 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 485:
#line 4826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 28524 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 486:
#line 4835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 28534 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 487:
#line 4843 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 28540 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 488:
#line 4845 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 28546 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 4847 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 28552 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 490:
#line 4849 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 28558 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 491:
#line 4851 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 28564 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 492:
#line 4853 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 28570 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 493:
#line 4855 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 28576 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 4857 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 28582 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 4859 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 28588 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 496:
#line 4861 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 28594 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 497:
#line 4863 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 28600 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 498:
#line 4865 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 28606 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 4867 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 28612 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 500:
#line 4872 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 28636 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 501:
#line 4892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 28660 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 502:
#line 4915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
#line 28669 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 503:
#line 4920 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 28678 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 517:
#line 4944 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 28684 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 4946 "sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 28694 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 519:
#line 4954 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
#line 28707 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 520:
#line 4963 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }

            // Mark statement as belonging to a stored procedure:
            if (lex->m_sql_cmd != NULL)
              lex->m_sql_cmd->set_as_part_of_sp();

            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            assert((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_CSTRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 28764 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 521:
#line 5019 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28776 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 522:
#line 5027 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;

            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[0].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28826 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 523:
#line 5075 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_CSTR,
                             sp->instructions());
          }
#line 28841 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 524:
#line 5086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 28854 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 5098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28912 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 5155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28960 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 527:
#line 5202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28984 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 528:
#line 5225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29008 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 529:
#line 5245 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29014 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 530:
#line 5250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29038 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 5279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 29060 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 5297 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 29082 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 536:
#line 5317 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29094 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 537:
#line 5325 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29135 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 538:
#line 5363 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_CSTR, 0));
          }
#line 29157 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 539:
#line 5381 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 29170 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 5404 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
#line 29184 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 546:
#line 5414 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_CSTRING case_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29230 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 547:
#line 5459 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
#line 29238 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 548:
#line 5466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_case(YYTHD);
          }
#line 29246 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 549:
#line 5473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, false);
          }
#line 29254 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 5490 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29266 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 555:
#line 5498 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[0].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29311 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 5540 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 29320 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 5548 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29332 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 5556 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29373 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 5594 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 29382 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 5602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29400 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 5620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 29422 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 5638 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 29443 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 5657 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= NULL_CSTR; }
#line 29449 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 5658 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= (yyvsp[0].lex_cstr); }
#line 29455 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 5663 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 29475 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 5679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 29494 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 5696 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_CSTR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 29509 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 5707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 29518 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 5715 "sql_yacc.yy" /* yacc.c:1646  */
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
#line 29535 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 5730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 29569 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 5764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29586 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 5777 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29598 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 574:
#line 5785 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29640 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 5826 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 29659 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 5843 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29671 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 5851 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$6*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 29713 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 5894 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_BEFORE; }
#line 29719 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 5896 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_AFTER; }
#line 29725 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 5901 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_INSERT; }
#line 29731 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 5903 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_UPDATE; }
#line 29737 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 5905 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_DELETE; }
#line 29743 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 5919 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 29749 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 585:
#line 5921 "sql_yacc.yy" /* yacc.c:1646  */
    {
        (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
      }
#line 29757 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 5927 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 29763 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 5929 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
          }
#line 29771 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 588:
#line 5935 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29777 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 5941 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29787 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 5947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29797 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 604:
#line 5970 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29803 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 606:
#line 5976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29813 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 607:
#line 5982 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29823 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 616:
#line 6001 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29829 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 6007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29839 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 619:
#line 6013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29849 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 621:
#line 6025 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29855 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 623:
#line 6031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29865 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 624:
#line 6037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29875 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 632:
#line 6055 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29881 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 6061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29891 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 6067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29901 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 6081 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 29907 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 6085 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_ACTIVE; }
#line 29913 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 6086 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_INACTIVE; }
#line 29919 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 6090 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 29925 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 6095 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyvsp[0].ulonglong_number));
          }
#line 29933 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 6102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option) = NEW_PTN PT_alter_tablespace_option_autoextend_size((yyvsp[0].ulonglong_number));
          }
#line 29941 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 6108 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number) = (yyvsp[0].ulonglong_number); }
#line 29947 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 6113 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyvsp[0].ulonglong_number));
          }
#line 29955 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 6120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyvsp[0].ulonglong_number));
          }
#line 29963 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 6127 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 29971 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 6134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 29979 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 6141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyvsp[0].ulong_num));
          }
#line 29987 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 6148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyvsp[0].lexer.lex_str));
          }
#line 29995 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 6155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30003 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 6162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyvsp[0].ulonglong_number));
          }
#line 30011 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 6169 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(true);
          }
#line 30019 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 655:
#line 6173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(false);
          }
#line 30027 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 6180 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption((yyvsp[0].lexer.lex_str));
          }
#line 30035 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 657:
#line 6187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) >= UINT_MAX32)
            {
              my_error(ER_ENCRYPTION_KEY_ID_VALUE_OUT_OF_RANGE, MYF(0), (yyvsp[0].ulong_num),
                       UINT_MAX32 - 1);
              MYSQL_YYABORT;
            }

            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption_key_id((yyvsp[0].ulong_num));
          }
#line 30050 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 6201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option) = make_tablespace_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30058 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 6207 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 30064 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 6209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            const char *start_ptr= (yyvsp[0].lexer.lex_str).str;
            size_t str_len= (yyvsp[0].lexer.lex_str).length;
            const char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  [[fallthrough]];
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  [[fallthrough]];
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 30114 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 6285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[-1].create_table_options);
          }
#line 30123 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 6294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[-1].partition_clause);
          }
#line 30132 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 6303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
#line 30143 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 6311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[-1].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 30154 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 6318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 30165 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 6327 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 30171 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 6328 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 30177 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 6344 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[-3].part_type_def), (yyvsp[-2].ulong_num), (yyvsp[-1].opt_sub_part), (yylsp[0]), (yyvsp[0].part_def_list));
          }
#line 30185 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 6351 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[-5].is_not_empty), (yyvsp[-3].opt_key_algo), (yyvsp[-1].name_list));
          }
#line 30193 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 6355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[-4].is_not_empty), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 30201 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 6359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 30209 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 6363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[-1].name_list));
          }
#line 30217 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 6367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 30225 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 6371 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[-1].name_list));
          }
#line 30233 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 6377 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 30239 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 6378 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 30245 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 6383 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
#line 30251 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 6385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
#line 30269 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 6402 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 30275 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 6404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 30288 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 6415 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_sub_part)= NULL; }
#line 30294 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 6418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[-5].is_not_empty), (yylsp[-2]), (yyvsp[-2].item), (yyvsp[0].ulong_num));
          }
#line 30302 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 6423 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[-6].is_not_empty), (yyvsp[-4].opt_key_algo), (yyvsp[-2].name_list), (yyvsp[0].ulong_num));
          }
#line 30310 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 6430 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.name_list)= NULL; }
#line 30316 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 6437 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 30326 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 6443 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= (yyvsp[-2].name_list);
            if ((yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 30336 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 6452 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 30342 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 6454 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 30355 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 6465 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= NULL; }
#line 30361 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 6466 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= (yyvsp[-1].part_def_list); }
#line 30367 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 6471 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30377 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 6477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= (yyvsp[-2].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30387 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 6486 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[-5]), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].opt_part_values).type, (yyvsp[-2].opt_part_values).values, (yylsp[-2]),
                                           (yyvsp[-1].partition_option_list), (yyvsp[0].sub_part_list), (yylsp[0]));
          }
#line 30396 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 6494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
#line 30404 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 6498 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[0].part_value_item_list_paren);
          }
#line 30413 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 6503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[0].part_values);
          }
#line 30422 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 6510 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item_list_paren)= NULL; }
#line 30428 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 6516 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[0]), (yyvsp[0].part_value_item_list_paren));
          }
#line 30436 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6520 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[0]), (yyvsp[-1].part_value_list));
          }
#line 30444 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 6527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 30455 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 6534 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= (yyvsp[-2].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 30465 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 6543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
#line 30480 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[-1].part_value_item_list), (yylsp[0]));
          }
#line 30488 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 30498 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= (yyvsp[-2].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 30508 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6575 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[0])); }
#line 30514 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 6576 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[0]), (yyvsp[0].item)); }
#line 30520 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 6581 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= NULL; }
#line 30526 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6582 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= (yyvsp[-1].sub_part_list); }
#line 30532 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30542 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 6593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= (yyvsp[-2].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30552 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 6602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[-2]), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].partition_option_list));
          }
#line 30560 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 6608 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option_list)= NULL; }
#line 30566 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 6614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= (yyvsp[-1].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30576 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 6620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30586 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 6629 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[0].lexer.lex_str).str); }
#line 30592 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 6631 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_engine(to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 30598 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 6633 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[0].ulong_num)); }
#line 30604 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 6635 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[0].ulonglong_number)); }
#line 30610 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 6637 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[0].ulonglong_number)); }
#line 30616 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 6639 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[0].lexer.lex_str).str); }
#line 30622 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 6641 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[0].lexer.lex_str).str); }
#line 30628 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 6643 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[0].lexer.lex_str).str); }
#line 30634 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 6658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              If the statement has set READ ONLY already, and we repeat the
              READ ONLY option in the statement, the option must be set to
              the same value as before, otherwise, report an error.
            */
            if ((Lex->create_info->used_fields &
                 HA_CREATE_USED_READ_ONLY) &&
                (Lex->create_info->schema_read_only !=
                    ((yyvsp[0].ternary_option) == Ternary_option::ON))) {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0), "READ ONLY", "=0",
                  "READ ONLY", "=1");
              MYSQL_YYABORT;
            }
            Lex->create_info->schema_read_only = ((yyvsp[0].ternary_option) == Ternary_option::ON);
            Lex->create_info->used_fields |= HA_CREATE_USED_READ_ONLY;
          }
#line 30656 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 6678 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30662 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6679 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30668 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6683 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30674 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6684 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30680 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6689 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_collation(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 30689 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_charset(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 30698 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 6699 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Validate if we have either 'y|Y' or 'n|N'
            if (my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "Y") != 0 &&
                my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "N") != 0) {
              my_error(ER_WRONG_VALUE, MYF(0), "argument (should be Y or N)", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            Lex->create_info->encrypt_type= (yyvsp[0].lexer.lex_str);
            Lex->create_info->used_fields |= HA_CREATE_USED_DEFAULT_ENCRYPTION;
          }
#line 30714 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 6713 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 30720 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6714 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 30726 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == NULL || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30736 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= (yyvsp[-1].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30746 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 6734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30756 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 6740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= (yyvsp[-2].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30766 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 6754 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30774 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 6758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option();
          }
#line 30782 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 6762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30790 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6766 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[0].ulonglong_number));
          }
#line 30798 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[0].ulonglong_number));
          }
#line 30806 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6774 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The frm-format only allocated 4 bytes for avg_row_length, and
            // there is code which assumes it can be represented as an uint,
            // so we constrain it here.
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<std::uint32_t>::max()) {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for avg_row_length is [0,4294967295]. Error"
              );
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[0].ulonglong_number));
          }
#line 30823 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30831 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[0].lexer.lex_str));
          }
#line 30839 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[0].lexer.lex_str));
          }
#line 30847 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[0].lexer.lex_str));
	        }
#line 30855 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6803 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) >= UINT_MAX32)
            {
              my_error(ER_ENCRYPTION_KEY_ID_VALUE_OUT_OF_RANGE, MYF(0), (yyvsp[0].ulong_num),
                       UINT_MAX32 - 1);
              MYSQL_YYABORT;
            }

            (yyval.create_table_option)= NEW_PTN PT_create_encryption_key_id_option((yyvsp[0].ulong_num));
          }
#line 30870 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[0].ulonglong_number));
          }
#line 30878 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 6818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[0].ternary_option));
          }
#line 30886 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 6822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[0].ternary_option));
          }
#line 30894 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 6826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[0].ternary_option));
          }
#line 30902 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6830 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for stats_sample_pages is [1, 65535]. Error");
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[0].ulong_num));
          }
#line 30924 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
#line 30932 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 30940 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 30948 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 6860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[0].ulong_num));
          }
#line 30956 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 6864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[0].row_type));
          }
#line 30964 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[-1].table_list));
          }
#line 30972 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 6872 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[0].lexer.charset));
          }
#line 30980 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 6876 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[0].lexer.charset));
          }
#line 30988 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[0].ulong_num));
          }
#line 30996 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 6884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 31004 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 6888 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 31012 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 6892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[0].lexer.lex_str).str);
          }
#line 31020 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
#line 31028 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 6900 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
#line 31036 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 6904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[0].lexer.lex_str));
          }
#line 31044 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The frm-format only allocated 2 bytes for key_block_size,
            // even if it is represented as std::uint32_t in HA_CREATE_INFO and
            // elsewhere.
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<std::uint16_t>::max()) {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for key_block_size is [0,65535]. Error");
              MYSQL_YYABORT;
            }

            (yyval.create_table_option)= NEW_PTN
            PT_create_key_block_size_option(static_cast<std::uint32_t>((yyvsp[0].ulonglong_number)));
          }
#line 31062 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_start_transaction_option(true);
	  }
#line 31070 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 31078 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 31086 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = NEW_PTN PT_create_ts_autoextend_size_option((yyvsp[0].ulonglong_number));
          }
#line 31094 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6941 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
#line 31112 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6954 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
#line 31118 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6958 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 31124 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 6962 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset);}
#line 31130 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6966 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);}
#line 31136 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 6970 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 31142 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 6971 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 31148 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 6972 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 31154 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6973 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 31160 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6974 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 31166 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6975 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 31172 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6979 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 31178 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6980 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 31184 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6981 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 31190 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6985 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 31196 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6986 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 31202 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6987 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 31208 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6988 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 31214 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 31224 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= (yyvsp[-2].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 31234 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 7007 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].column_def); }
#line 31240 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 7008 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].table_constraint_def); }
#line 31246 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 7013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].table_constraint_def));
          }
#line 31254 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 7019 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_constraint_def)= NULL; }
#line 31260 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 7021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Currently we ignore FK references here: */
            (yyval.table_constraint_def)= NULL;
          }
#line 31269 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 7030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_MULTIPLE,
                                                   (yyvsp[-4].index_name_and_type).name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 31278 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 7036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[-4].lexer.lex_str), NULL,
                                                   (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 31287 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 7042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_SPATIAL, (yyvsp[-4].lexer.lex_str), NULL, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 31295 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 7047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (((yyvsp[-6].lexer.lex_str).length != 0)
                 && ((yyvsp[-5].key_type) == (KEYTYPE_CLUSTERING | KEYTYPE_MULTIPLE)))
            {
              /* Forbid "CONSTRAINT c CLUSTERING" */
              my_error(ER_SYNTAX_ERROR, MYF(0));
              MYSQL_YYABORT;
            }
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[-4].index_name_and_type).name.str != NULL ? (yyvsp[-4].index_name_and_type).name : (yyvsp[-6].lexer.lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[-5].key_type), name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 31315 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 7063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[-7].lexer.lex_str), (yyvsp[-4].lexer.lex_str), (yyvsp[-2].index_column_list), (yyvsp[0].fk_references).table_name,
                                                  (yyvsp[0].fk_references).reference_list,
                                                  (yyvsp[0].fk_references).fk_match_option,
                                                  (yyvsp[0].fk_references).fk_update_opt,
                                                  (yyvsp[0].fk_references).fk_delete_opt);
          }
#line 31327 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 7071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_check_constraint((yyvsp[-2].lexer.lex_str), (yyvsp[-1].item), (yyvsp[0].is_not_empty));
            if ((yyval.table_constraint_def) == nullptr) MYSQL_YYABORT; // OOM
          }
#line 31336 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 7078 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 31342 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 7082 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 31348 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 817:
#line 7083 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 31354 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 818:
#line 7087 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 31360 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 7088 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 31366 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 7092 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 31372 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 7093 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= (yyvsp[0].is_not_empty); }
#line 31378 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 7097 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= !((yyvsp[-1].is_not_empty)); }
#line 31384 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 7102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[-1].type), (yyvsp[0].col_attr_list));
          }
#line 31392 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 7108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *opt_attrs= (yyvsp[0].col_attr_list);
            if ((yyvsp[-7].lexer.charset) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yylsp[-7]), (yyvsp[-7].lexer.charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[-8].type), (yyvsp[-3].item), (yyvsp[-1].virtual_or_stored), opt_attrs);
          }
#line 31413 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 7132 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 31419 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 7133 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 31425 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 7134 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
#line 31431 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 7139 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].int_type), (yyvsp[-1].c_str), (yyvsp[0].field_option));
          }
#line 31439 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 7143 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 31447 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 7147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 31455 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 7151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
#line 31463 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 7155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[0].c_str));
          }
#line 31471 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 7159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 31479 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 7163 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 31487 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 7167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31496 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 7172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31505 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 7177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31518 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 7186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31531 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 7195 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 31539 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 7199 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
#line 31547 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 7203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31556 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 7208 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31569 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 7217 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 31577 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 7221 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
              push_deprecated_warn(YYTHD, "YEAR(4)", "YEAR");
            }
            if ((yyvsp[0].field_option) == UNSIGNED_FLAG)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                           ER_THD(YYTHD, ER_WARN_DEPRECATED_YEAR_UNSIGNED));
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
#line 31604 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 7244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
#line 31612 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 7248 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[0].c_str));
          }
#line 31620 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 7252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[0].c_str));
          }
#line 31628 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 7256 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[0].c_str));
          }
#line 31636 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 7260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
#line 31644 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 7264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[0].c_str));
          }
#line 31652 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 7269 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 31660 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 7273 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
#line 31668 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 7277 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 31676 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 7281 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31685 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 7286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31694 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 7291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31703 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 860:
#line 7296 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31712 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 7301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31721 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 7306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31729 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 7310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31737 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 7314 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31746 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 7319 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
#line 31754 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 7323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
#line 31762 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 7330 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
#line 31768 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 7332 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
#line 31774 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 7334 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
#line 31780 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 7336 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
#line 31786 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 7338 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
#line 31792 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 7340 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
#line 31798 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 7342 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
#line 31804 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 7344 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
#line 31810 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 7348 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31816 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 7349 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31822 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 7353 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31828 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 7354 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31834 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 7358 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31840 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 7359 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31846 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 7360 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31852 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 7361 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31858 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 883:
#line 7362 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31864 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 884:
#line 7366 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::INT; }
#line 31870 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 7367 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::TINYINT; }
#line 31876 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 7368 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::SMALLINT; }
#line 31882 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 7369 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::MEDIUMINT; }
#line 31888 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 7370 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::BIGINT; }
#line 31894 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 7375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
#line 31903 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 7380 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
#line 31909 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 893:
#line 7389 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
#line 31915 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 894:
#line 7390 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31921 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 7391 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31927 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 7392 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31933 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 7397 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = nullptr;
            (yyval.precision).dec = nullptr;
          }
#line 31942 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 7402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = (yyvsp[0].c_str);
            (yyval.precision).dec = nullptr;
          }
#line 31951 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 7410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
#line 31960 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 7415 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[0].c_str);
            (yyval.precision).dec= NULL;
          }
#line 31969 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 7424 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[-3].lexer.lex_str).str;
            (yyval.precision).dec= (yyvsp[-1].lexer.lex_str).str;
          }
#line 31978 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 7432 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 31984 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 7433 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31990 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7437 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 31996 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 7438 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 32002 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 7440 "sql_yacc.yy" /* yacc.c:1646  */
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lexer.lex_str).str, NULL, &error);
           }
#line 32011 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 7447 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 32017 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 7453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = (yyvsp[-1].field_option) | (yyvsp[0].field_option);
          }
#line 32025 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 912:
#line 7460 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 32031 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 7461 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = UNSIGNED_FLAG; }
#line 32037 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 7462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = ZEROFILL_FLAG;
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_ZEROFILL));
          }
#line 32048 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 7471 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 32054 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 7472 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 32060 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7473 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 32066 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 7474 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 32072 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 7477 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; /* use default length */ }
#line 32078 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 7483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
#line 32087 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 7491 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.col_attr_list)= NULL; }
#line 32093 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr_list)= (yyvsp[-1].col_attr_list);
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // $2 is `[NOT] ENFORCED`
              if ((yyvsp[-1].col_attr_list)->back()->set_constraint_enforcement(
                      (yyvsp[0].col_attr)->is_constraint_enforced())) {
                // $1 is not `CHECK(...)`
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
              }
            } else {
              if ((yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
                MYSQL_YYABORT; // OOM
            }
          }
#line 32116 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 7516 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // [NOT] ENFORCED doesn't follow the CHECK clause
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }

            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
              MYSQL_YYABORT; // OOM
          }
#line 32136 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 7535 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
#line 32144 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 7539 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
#line 32152 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 7543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_secondary_column_attr;
          }
#line 32160 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 7547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[0].item));
          }
#line 32168 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 7551 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_generated_default_val_column_attr((yyvsp[-1].item));
          }
#line 32176 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 7555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 32184 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 7559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
#line 32192 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 7563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
#line 32200 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
#line 32208 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 7571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_UNIQUE);
          }
#line 32216 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 7575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_UNIQUE);
          }
#line 32224 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_CLUSTERING);
          }
#line 32232 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 7583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_CLUSTERING);
          }
#line 32240 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 7587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr(to_lex_cstring((yyvsp[0].lexer.lex_str)));
        }
#line 32248 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yylsp[0]), (yyvsp[0].lexer.charset));
          }
#line 32256 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7595 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[0].column_format), null_lex_cstr);
          }
#line 32264 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 7599 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr(COLUMN_FORMAT_TYPE_COMPRESSED, (yyvsp[0].lex_cstr));
          }
#line 32272 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 7603 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[0].storage_media));
          }
#line 32280 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 7607 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr(static_cast<gis::srid_t>((yyvsp[0].ulonglong_number)));
          }
#line 32293 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 7617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_check_constraint_column_attr((yyvsp[-1].lexer.lex_str), (yyvsp[0].item));
          }
#line 32301 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 7630 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_constraint_enforcement_attr((yyvsp[0].is_not_empty));
          }
#line 32309 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 7634 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32317 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 7638 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32325 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 7642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_column_visibility_attr((yyvsp[0].visibility));
          }
#line 32333 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 7648 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= null_lex_cstr; }
#line 32339 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 7650 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 32347 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 7656 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
#line 32353 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7657 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
#line 32359 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 7658 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
#line 32365 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 7662 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DEFAULT; }
#line 32371 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 7663 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DISK; }
#line 32377 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 7664 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_MEMORY; }
#line 32383 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 7669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 32391 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 7675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 32399 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            YYLIP->warn_on_deprecated_charset((yyval.lexer.charset), (yyvsp[0].lexer.lex_str).str);
          }
#line 32412 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7696 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 32418 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 7700 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= NULL; }
#line 32424 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 7701 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 32430 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 7706 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.lexer.charset)=get_old_charset_by_name((yyvsp[0].lexer.lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 32443 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 7714 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 32449 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 7718 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=(yyvsp[0].lexer.charset);   }
#line 32455 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 7719 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=NULL; }
#line 32461 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 7724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name((yyvsp[0].lexer.lex_str).str)))
              MYSQL_YYABORT;
            YYLIP->warn_on_deprecated_collation((yyval.lexer.charset));
          }
#line 32471 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 7729 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 32477 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 7733 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = nullptr; }
#line 32483 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 7734 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 32489 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7738 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32495 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7739 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32501 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7744 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_latin1; }
#line 32507 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 7745 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 32516 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7749 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 32525 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 7757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 32537 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 7765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 32547 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 7771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 32557 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32566 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32575 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32584 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 7795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32593 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].is_not_empty) ? get_bin_collation((yyvsp[-1].lexer.charset)) : (yyvsp[-1].lexer.charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32604 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 7807 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
#line 32614 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 7813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[0].lexer.charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32626 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 7823 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 32632 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 7824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.is_not_empty)= true;
          }
#line 32641 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 7832 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
#line 32653 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 7840 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 32659 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_references).table_name= (yyvsp[-3].table);
            (yyval.fk_references).reference_list= (yyvsp[-2].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[-1].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[0].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[0].fk_options).fk_delete_opt;
          }
#line 32671 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7864 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= NULL; }
#line 32677 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 7865 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= (yyvsp[-1].reference_list); }
#line 32683 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 7870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= (yyvsp[-2].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 32694 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 7877 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 32705 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 7886 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
#line 32711 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 7887 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
#line 32717 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 7888 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
#line 32723 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 7889 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
#line 32729 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 7894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32738 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 7899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32747 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 7904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32756 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 7910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[-3].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32765 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 7916 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 32774 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 7923 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 32780 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 7924 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 32786 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 7925 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 32792 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 7926 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 32798 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 7927 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
#line 32804 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 7931 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
#line 32810 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 7932 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= (yyvsp[-1].key_type); }
#line 32816 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 7937 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32822 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 7938 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32828 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 7942 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32834 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 7947 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32840 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 7948 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32846 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 7949 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32852 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 7953 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
#line 32858 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 7959 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= KEYTYPE_UNIQUE;
          }
#line 32866 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 7963 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= KEYTYPE_UNIQUE;
          }
#line 32874 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 7967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_MULTIPLE | KEYTYPE_CLUSTERING);
          }
#line 32882 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 7971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_MULTIPLE | KEYTYPE_CLUSTERING);
          }
#line 32890 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 7975 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 32898 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 7979 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 32906 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 7983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 32914 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 7987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 32922 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 7992 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32928 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 7998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32938 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 8004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32948 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 8014 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING plugin_name= {(yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 32963 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 8027 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32969 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 8033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32979 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 8039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32989 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 8051 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32995 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 8057 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 33005 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 8063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 33015 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 8071 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 33021 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 8072 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 33027 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 8077 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[0].ulong_num)); }
#line 33033 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 8079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 33041 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 8083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[0].visibility));
          }
#line 33049 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 8087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 33057 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 8091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 33065 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 8114 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[0].lexer.lex_str), NULL}; }
#line 33071 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 8115 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 33077 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 8116 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 33083 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 8120 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option) = nullptr; }
#line 33089 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 8125 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 33095 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 8126 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 33101 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 8130 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= true; }
#line 33107 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 8131 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= false; }
#line 33113 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 8135 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 33119 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 8136 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 33125 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 8137 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 33131 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 8142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 33141 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 8148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
          }
#line 33152 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 8158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].order_direction), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 33162 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 8164 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_length= atoi((yyvsp[-2].lexer.lex_str).str);
            if (!key_part_length)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-4].lexer.lex_str).str);
            }
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[0].order_direction),
                                                  key_part_length);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 33178 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 8179 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 33188 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 8185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 33199 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 8196 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyvsp[-2].item), (yyvsp[0].order_direction));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 33209 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 8204 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 33215 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 8209 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= null_lex_str; }
#line 33221 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 8210 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 33227 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 8215 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT; // OOM
          }
#line 33237 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 8221 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT;
          }
#line 33246 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 8233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-3].lexer.optimizer_hints),
                  (yyvsp[-1].table),
                  (yyvsp[0].alter_list).actions,
                  (yyvsp[0].alter_list).flags.algo.get_or_default(),
                  (yyvsp[0].alter_list).flags.lock.get_or_default(),
                  (yyvsp[0].alter_list).flags.validation.get_or_default());
          }
#line 33261 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 8244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-3].lexer.optimizer_hints),
                  (yyvsp[-1].table),
                  (yyvsp[0].standalone_alter_table_action).action,
                  (yyvsp[0].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.validation.get_or_default());
          }
#line 33276 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 8258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 33288 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 8266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 33301 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 8278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 33316 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 8289 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 33327 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 8299 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 33342 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 8310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 33353 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 8320 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 33368 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 8331 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33374 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 8338 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 33390 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 8350 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33396 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 8355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 33416 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 8375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 33433 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 8392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33456 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 8414 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33478 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 8433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33501 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 8452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[-3].lexer.lex_str), (yyvsp[0].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33513 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 8460 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33536 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 8483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_alter_undo_tablespace{
              ALTER_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str),
              {nullptr, 0}, pc, (yyvsp[-1].alter_tablespace_type)};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33560 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 8506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[-4].lexer.lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
#line 33572 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 8521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->first_factor_auth_info = *(yyvsp[-2].lex_mfa);

            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-3].lex_user)->current_auth = (yyvsp[-1].lex_cstr);
              (yyvsp[-3].lex_user)->uses_replace_clause = true;
            }
            (yyvsp[-3].lex_user)->discard_old_password = false;
            (yyvsp[-3].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 33587 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 8533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->first_factor_auth_info = *(yyvsp[-2].lex_mfa);

            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-3].lex_user)->current_auth = (yyvsp[-1].lex_cstr);
              (yyvsp[-3].lex_user)->uses_replace_clause = true;
            }
            (yyvsp[-3].lex_user)->discard_old_password = false;
            (yyvsp[-3].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 33602 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 8544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->discard_old_password = true;
            (yyvsp[-3].lex_user)->retain_current_password = false;
          }
#line 33611 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 8549 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
#line 33627 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 8561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
#line 33643 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 8573 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[0].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
#line 33658 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 8584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_user)->mfa_list.push_back((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            LEX *lex=Lex;
            lex->users_list.push_front ((yyvsp[-1].lex_user));
          }
#line 33669 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 8591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_user)->mfa_list.push_back((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
          }
#line 33678 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 8598 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = LEX_CSTRING{nullptr, 0}; }
#line 33684 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 8599 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 33690 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 8606 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group(to_lex_cstring((yyvsp[-4].lexer.lex_str)),
                                                (yyvsp[-3].resource_group_vcpu_list_type), (yyvsp[-2].resource_group_priority_type), (yyvsp[-1].resource_group_state_type), (yyvsp[0].resource_group_flag_type));
          }
#line 33699 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 8614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[0].num);
          }
#line 33709 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 8623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT_NOT_USED;
          }
#line 33719 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1118:
#line 8629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_ATTRIBUTE;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 33730 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 8636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 33741 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 8644 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33747 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 8655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
#line 33757 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 8661 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
#line 33767 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 8667 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 33779 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 8675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[-1].ulong_num) == 0 || (yyvsp[-1].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[-1].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 33798 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 8690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 33810 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 8698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 33822 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 8706 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[0].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
#line 33833 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 8713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
#line 33844 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 8720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
#line 33855 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 8727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
#line 33866 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 8734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::YES;
          }
#line 33876 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 8740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::DEFAULT;
          }
#line 33886 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 8746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::NO;
          }
#line 33896 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 8752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "FAILED_LOGIN_ATTEMPTS", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_failed_login_attempts= true;
            lex->alter_password.failed_login_attempts= (yyvsp[0].ulong_num);
          }
#line 33912 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 8764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "PASSWORD_LOCK_TIME", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= (yyvsp[0].ulong_num);
          }
#line 33928 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 8776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= -1;
          }
#line 33938 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 8784 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33944 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 8789 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33950 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 8790 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33956 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 8795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 33966 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 8801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 33976 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 8807 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 33986 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 8813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 33996 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 8822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= LEX_USER::alloc(YYTHD)))
              MYSQL_YYABORT;

            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
#line 34010 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 8834 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 34016 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 8835 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34022 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 8836 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34028 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 8837 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34034 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 8841 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 34040 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 8843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname);
            (yyval.num)= 1;
          }
#line 34053 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 8854 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 34059 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 8855 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34065 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 8859 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str).str= 0; (yyval.lexer.lex_str).length= 0; }
#line 34071 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 8860 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 34077 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 8866 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list)= (yyvsp[-1].alter_list);
            if ((yyval.alter_list).actions == NULL)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == NULL)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 34093 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 8881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 34102 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 8886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 34111 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 8894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyvsp[0].partition_clause));
          }
#line 34119 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 8898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning;
          }
#line 34127 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 8905 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NULL;
          }
#line 34136 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 8910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[0].algo_and_lock_and_validation);
            (yyval.alter_list).actions= NULL;
          }
#line 34145 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 8916 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[0].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[0].alter_list).actions;
          }
#line 34155 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 8925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace;
          }
#line 34163 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 8929 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace;
          }
#line 34171 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 8940 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyvsp[0].num));
          }
#line 34179 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8944 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyvsp[-3].num), (yyvsp[-1].part_def_list));
          }
#line 34187 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 8948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyvsp[-2].num), (yyvsp[0].ulong_num));
          }
#line 34195 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 8952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition(*(yyvsp[0].string_list));
          }
#line 34203 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 8957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 34211 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 8962 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 34219 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 8967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 34227 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 8971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyvsp[-1].string_list),
                                                       (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 34236 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 8978 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyvsp[-2].num), (yyvsp[-1].string_list),
                                                        (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 34245 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 8983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyvsp[-1].num), (yyvsp[0].ulong_num));
          }
#line 34253 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 8987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyvsp[0].string_list));
          }
#line 34261 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 8991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyvsp[0].num));
          }
#line 34269 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 8996 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyvsp[-5].num), *(yyvsp[-4].string_list), (yyvsp[-1].part_def_list));
          }
#line 34277 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 9001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyvsp[-4].lexer.lex_str), (yyvsp[-1].table), (yyvsp[0].with_validation));
          }
#line 34285 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 9006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyvsp[-1].string_list));
          }
#line 34293 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 9011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyvsp[-1].string_list));
          }
#line 34301 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 9015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_load;
          }
#line 34309 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 9019 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_unload;
          }
#line 34317 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 9025 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
#line 34323 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 9031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
#line 34331 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 9035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
#line 34339 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 9041 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 34345 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 9051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == NULL || (yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 34356 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 9058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 34365 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 9063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 34373 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 9067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[0].space_separated_alter_table_opts);
          }
#line 34382 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 9072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            for (auto *option : *(yyvsp[0].space_separated_alter_table_opts))
            {
              if ((yyvsp[-2].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
#line 34394 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 9084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation)= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 34403 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 9092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].field_def), (yyvsp[-1].table_constraint_def), (yyvsp[0].c_str));
          }
#line 34411 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 9096 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyvsp[-1].table_element_list));
          }
#line 34419 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 9100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyvsp[0].table_constraint_def));
          }
#line 34427 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 9104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 34435 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 9108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 34443 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 9112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyvsp[-1].lexer.lex_str).str);
          }
#line 34452 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 9117 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyvsp[0].lexer.lex_str).str);
          }
#line 34460 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 9121 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key(primary_key_name);
          }
#line 34468 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 9125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyvsp[0].lexer.lex_str).str);
          }
#line 34476 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 9129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_check_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 34484 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 9133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 34492 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 9137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(false);
          }
#line 34500 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 9141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(true);
          }
#line 34508 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 9145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-3].lexer.lex_str).str, (yyvsp[0].item));
          }
#line 34516 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 9149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-5].lexer.lex_str).str, (yyvsp[-1].item));
          }
#line 34524 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 9153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-2].lexer.lex_str).str, NULL);
          }
#line 34532 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 9158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_column_visibility((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 34540 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 9162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 34548 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1220:
#line 9166 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_check_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 34556 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 9170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 34564 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 9174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyvsp[0].table));
          }
#line 34572 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 9178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 34580 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 9182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 34588 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 9186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 34596 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 9190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_convert_to_charset(
                YYTHD->variables.collation_database,
                (yyvsp[0].lexer.charset) ? (yyvsp[0].lexer.charset) : YYTHD->variables.collation_database);
          }
#line 34606 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 9196 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force;
          }
#line 34614 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 9200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyvsp[0].order_list));
          }
#line 34622 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 9207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34631 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 9212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34640 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 9217 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[0].with_validation));
          }
#line 34649 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 9224 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_index_lock_and_algorithm).init(); }
#line 34655 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 9226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34664 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 9231 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34673 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 9236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[-1].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34683 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 9242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[-1].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34693 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 9250 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_algorithm)= (yyvsp[0].alter_table_algorithm); }
#line 34699 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 9255 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 34707 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 9259 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "INSTANT"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INSTANT;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 34725 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1240:
#line 9275 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_lock)= (yyvsp[0].alter_table_lock); }
#line 34731 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1241:
#line 9280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 34739 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 9284 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 34757 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 9305 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 34763 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 9306 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 34769 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 9310 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_DEFAULT; }
#line 34775 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 9311 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_RESTRICT; }
#line 34781 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 9312 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_CASCADE; }
#line 34787 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 9316 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 34793 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 9317 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[0].lexer.lex_str).str; }
#line 34799 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 9318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= first_keyword; }
#line 34805 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 9322 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34811 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 9323 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34817 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 9324 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34823 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 9325 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34829 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 9331 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
          }
#line 34838 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 9339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
          }
#line 34848 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 9364 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user = (yyvsp[0].lexer.lex_str).str;
            if ((yyvsp[0].lexer.lex_str).length == 0)
            {
              my_error(ER_GROUP_REPLICATION_USER_EMPTY_MSG, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34861 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 9376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password = (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password = true;
            if ((yyvsp[0].lexer.lex_str).length > 32)
            {
              my_error(ER_GROUP_REPLICATION_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34875 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 9389 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 34883 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 9395 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->set_replication_deprecated_syntax_used(); }
#line 34889 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 9401 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            lex->slave_thd_opt= (yyvsp[-1].num);
            if (lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "STOP SLAVE", "STOP REPLICA");
            if (lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 34904 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 9415 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            /* Clean previous replica connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[0].num);
            if (lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "START SLAVE", "START REPLICA");
          }
#line 34921 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 9430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34942 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 9447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 34951 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 9455 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 34968 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 9471 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 34976 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 9475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34984 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 9482 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34992 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 9486 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 35000 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 9493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 35008 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 9497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
            Lex->donor_transaction_id= (yyvsp[0].item);
          }
#line 35019 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 9504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 35027 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 9508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 35035 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 9514 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 35043 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 9518 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user= (yyvsp[0].lexer.lex_str).str;
          }
#line 35051 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 9524 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 35059 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 9528 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password= (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 35068 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 9534 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 35076 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 9538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 35084 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 9544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 35092 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 9548 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_dir= (yyvsp[0].lexer.lex_str).str;
          }
#line 35100 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 9555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 35108 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 9559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 35116 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 9566 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 35124 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 9570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 35132 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 9577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_SQL;
          }
#line 35140 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 9581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_IO;
          }
#line 35148 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 9588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
#line 35157 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 9593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_SLAVE_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
#line 35183 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1303:
#line 9620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 35192 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 9625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 35201 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 9630 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.until_after_gaps= true;
          }
#line 35209 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 9637 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[0].ulong_num);
          }
#line 35224 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 9650 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 35230 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 9651 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_QUICK; }
#line 35236 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 9652 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_EXTEND; }
#line 35242 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 9658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                             (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 35251 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 9665 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 35257 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 9672 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 35266 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 9679 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
#line 35272 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 9680 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
#line 35278 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 9681 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
#line 35284 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 9687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[-4].lexer.optimizer_hints), (yyvsp[-3].num), (yyvsp[-1].table_list),
                                              (yyvsp[0].histogram).command, (yyvsp[0].histogram).num_buckets,
                                              (yyvsp[0].histogram).columns);
          }
#line 35294 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 9695 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS; }
#line 35300 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 9697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            longlong num= my_strtoll10((yyvsp[-1].lexer.lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }

            (yyval.num)= num;
          }
#line 35319 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 9715 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).num_buckets= 0;
          }
#line 35329 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 9721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[-1].string_list);
            (yyval.histogram).num_buckets= (yyvsp[0].num);
          }
#line 35340 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 9728 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[0].string_list);
            (yyval.histogram).num_buckets= 0;
          }
#line 35351 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1324:
#line 9738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[0].lexer.lex_str);
          }
#line 35360 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 9746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.optimizer_hints), (yyvsp[-1].table_list),
                                            (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 35369 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 9753 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 35375 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 9760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 35384 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 9768 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
#line 35390 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 9770 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
#line 35396 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 9772 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
#line 35402 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 9774 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
#line 35408 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 9776 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
#line 35414 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 9778 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
#line 35420 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 9783 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.optimizer_hints), (yyvsp[-2].num), (yyvsp[0].table_list));
          }
#line 35428 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 9789 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 35434 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 9790 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35440 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 9791 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35446 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1340:
#line 9796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 35454 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 9800 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35460 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1342:
#line 9802 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 35468 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1343:
#line 9809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 35477 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1344:
#line 9814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 35486 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 9827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Query_block *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 35500 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 9840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt(YYMEM_ROOT, (yyvsp[-2].keycache_list), (yyvsp[0].lex_cstr));
          }
#line 35508 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 9845 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt(YYMEM_ROOT,
                                                       (yyvsp[-4].table), (yyvsp[-3].adm_partition), (yyvsp[-2].key_usage_list), (yyvsp[0].lex_cstr));
          }
#line 35517 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 9853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == NULL || (yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 35527 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 9859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= (yyvsp[-2].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 35537 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 9868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyvsp[-1].table), (yyvsp[0].key_usage_list));
          }
#line 35545 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 9874 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 35551 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 9875 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = default_key_cache_base; }
#line 35557 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 9881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt(YYMEM_ROOT, (yyvsp[-3].table),(yyvsp[-2].adm_partition), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 35565 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 9885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt(YYMEM_ROOT, (yyvsp[-4].lexer.optimizer_hints), (yyvsp[0].preload_list));
          }
#line 35573 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 9892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 35583 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 9898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= (yyvsp[-2].preload_list);
            if ((yyval.preload_list) == NULL || (yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 35593 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 9907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyvsp[-2].table), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 35601 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 9914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyvsp[-1].string_list));
          }
#line 35609 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 9920 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 35615 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 9922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 35626 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 9931 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 35632 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 9932 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 35638 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 9937 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_expression));
          }
#line 35646 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 9941 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list)),
                                        nullptr, true);
          }
#line 35655 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 9946 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_primary));
          }
#line 35663 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 9986 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = (yyvsp[-1].top_level_node);
          }
#line 35671 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 9990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_expression), (yyvsp[0].into_destination));
          }
#line 35679 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 9994 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[0].locking_clause_list)), (yyvsp[-1].into_destination), true);
          }
#line 35687 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 9998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list)), (yyvsp[0].into_destination));
          }
#line 35695 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 10002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_primary), (yyvsp[0].into_destination));
          }
#line 35703 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 10043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35711 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 10050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35719 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 10056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35727 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 10063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35735 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 10068 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 35743 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 10074 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].with_clause), (yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 35751 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 10079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].with_clause), (yyvsp[0].query_primary), nullptr, nullptr);
          }
#line 35759 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 10086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = (yyvsp[0].query_primary);
          }
#line 35767 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 10090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 35775 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 10094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 35783 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 10098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 35791 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 10102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 35799 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 10109 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_primary); }
#line 35805 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 10110 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_expression); }
#line 35811 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 10112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list));
          }
#line 35819 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 10119 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[0].query_primary);
          }
#line 35828 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 10124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_table_value_constructor((yyvsp[0].values_list));
          }
#line 35836 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 10128 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item_list= NEW_PTN PT_select_item_list;
            auto asterisk= NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            if (item_list == nullptr || asterisk == nullptr ||
                item_list->push_back(asterisk))
              MYSQL_YYABORT;
            (yyval.query_primary)= NEW_PTN PT_explicit_table({}, item_list, (yyvsp[0].table_reference_list));
          }
#line 35849 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1392:
#line 10148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-8].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-7].select_options),  // select_options
                                      (yyvsp[-6].item_list2),  // select_item_list
                                      (yyvsp[-5].into_destination),  // into_clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 35867 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 10169 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-7].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-6].select_options),  // select_options
                                      (yyvsp[-5].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 35885 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 10185 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 35891 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 10190 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[0].table_reference_list); }
#line 35897 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 10194 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 35903 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 10200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 35913 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 10206 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-2].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 35923 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 10215 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 35931 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 10222 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            auto table= NEW_PTN
                PT_table_factor_table_ident((yyvsp[0].table), nullptr, NULL_CSTR, nullptr);
            if ((yyval.table_reference_list).push_back(table))
              MYSQL_YYABORT; // OOM
          }
#line 35943 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 10233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= 0;
          }
#line 35951 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 10241 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.select_options).merge((yyvsp[-1].select_options), (yyvsp[0].select_options)))
              MYSQL_YYABORT;
          }
#line 35960 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 10250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= (yyvsp[0].ulonglong_number);
          }
#line 35968 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 10254 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
#line 35978 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 10263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= (yyvsp[-1].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 35988 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 10269 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list(YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 35998 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 10278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyvsp[-1].lock_strength), (yyvsp[0].locked_row_action));
          }
#line 36006 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 10282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyvsp[-2].lock_strength), (yyvsp[-1].table_ident_list), (yyvsp[0].locked_row_action));
          }
#line 36014 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 10286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause(Lock_strength::SHARE);
          }
#line 36022 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 10292 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::UPDATE; }
#line 36028 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 10293 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::SHARE; }
#line 36034 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 10297 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_ident_list)= (yyvsp[0].table_ident_list); }
#line 36040 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 10301 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::WAIT; }
#line 36046 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 10306 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::SKIP; }
#line 36052 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 10307 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
#line 36058 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 10312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 36068 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 10318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 36078 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 10324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item = NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            (yyval.item_list2) = NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == nullptr || item == nullptr || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
#line 36089 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1424:
#line 10333 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 36095 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 10335 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[-1].item), (yylsp[-1]).cpp, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 36103 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 10342 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=null_lex_str;}
#line 36109 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 10343 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 36115 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 10344 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 36121 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 10345 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 36127 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 10346 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 36133 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 10350 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36139 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 10351 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36145 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 10357 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36155 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 10363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36164 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 10368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36174 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 10374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 36182 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 10378 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_TRUE);
          }
#line 36190 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 10382 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_TRUE);
          }
#line 36198 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 10386 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_FALSE);
          }
#line 36206 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 10390 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_FALSE);
          }
#line 36214 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 10394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 36222 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 10398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 36230 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 10406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 36238 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 10410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 36246 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 10414 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[-2].item), (yyvsp[-1].boolfunc2creator), (yyvsp[0].item));
          }
#line 36254 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 10418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[-2]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].subquery));
          }
#line 36271 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 10435 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-2].item), (yyvsp[0].subquery));
          }
#line 36279 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 10439 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-3].item), (yyvsp[0].subquery));
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 36288 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 10444 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-4].item), true, (yyvsp[-1].item));
          }
#line 36296 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 10448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->push_front((yyvsp[-6].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), false);
          }
#line 36307 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 10455 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-5].item), false, (yyvsp[-1].item));
          }
#line 36315 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 10459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == nullptr)
              MYSQL_YYABORT;
            (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item));
            (yyvsp[-1].item_list2)->value.push_front((yyvsp[-7].item));

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), true);
          }
#line 36328 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 10468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_member_of((yyloc), (yyvsp[-5].item), (yyvsp[-1].item));
          }
#line 36336 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 10472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), false);
          }
#line 36344 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 10476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
          }
#line 36352 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 10480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[-3].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[0].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
#line 36364 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 10488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36372 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 10492 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36380 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 10496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-3].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 36389 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 10501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 36398 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1463:
#line 10506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-2].item));
            args->push_back((yyvsp[0].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[-2]), args);
          }
#line 36410 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1464:
#line 10514 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-3].item));
            args->push_back((yyvsp[0].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 36422 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 10531 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36430 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 10535 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36438 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 10539 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36446 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 10543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36454 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 10547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36462 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 10551 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36470 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 10555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
          }
#line 36478 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 10559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
          }
#line 36486 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 10563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36494 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 10567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 36502 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 10571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 36510 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1479:
#line 10575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div_int((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 36518 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1480:
#line 10579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36526 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 10583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36534 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 10597 "sql_yacc.yy" /* yacc.c:1646  */
    {
           push_deprecated_warn(YYTHD, "&&", "AND");
         }
#line 36542 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 10608 "sql_yacc.yy" /* yacc.c:1646  */
    { push_deprecated_warn(YYTHD, "!", "NOT"); }
#line 36548 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 10613 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 36554 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 10614 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
#line 36560 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 10615 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 36566 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 10616 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 36572 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 10617 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 36578 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 10618 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 36584 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 10619 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 36590 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 10623 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 36596 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 10624 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 36602 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 10634 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[-2].item), (yyvsp[0].lexer.lex_str));
          }
#line 36610 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 10638 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].param_marker); }
#line 36616 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 10643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36624 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 10647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
#line 36632 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 10651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[0].item));
          }
#line 36640 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 10655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[0].item));
          }
#line 36648 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 10659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 36656 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 10663 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 36664 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 10666 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 36670 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 10668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 36678 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 10672 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 36686 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 10676 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 36694 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 10680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].item));
          }
#line 36702 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 10684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[-5].item_list2), (yyvsp[-2].item), (yyvsp[-1].num));
          }
#line 36710 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 10688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "BINARY expr", "CAST");
            (yyval.item)= create_func_cast(YYTHD, (yylsp[0]), (yyvsp[0].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
#line 36719 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 10693 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-4]), (yyvsp[-4].item), (yyvsp[-2].cast_type), (yyvsp[-1].num));
          }
#line 36727 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 10697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0), "AT LOCAL");
          }
#line 36735 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 10702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Cast_type cast_type{ITEM_CAST_DATETIME, nullptr, nullptr, (yyvsp[-1].c_str)};
            auto datetime_factor =
                NEW_PTN Item_func_at_time_zone((yylsp[-9]), (yyvsp[-9].item), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-5].is_not_empty));
            (yyval.item) = create_func_cast(YYTHD, (yylsp[-9]), datetime_factor, cast_type, false);
          }
#line 36746 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 10709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), (yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
          }
#line 36754 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 10713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-3]), (yyvsp[-3].item), (yyvsp[-1].cast_type), false);
          }
#line 36762 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 10717 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[-3].item),(yyvsp[-1].lexer.charset));
          }
#line 36770 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 10721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[-1].item));
          }
#line 36778 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 10725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[-1].item));
          }
#line 36786 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 10730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
          }
#line 36794 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 10734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
          }
#line 36805 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 10741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
#line 36817 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 10751 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 36823 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 10752 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 36829 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 10763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-1].item_list2));
          }
#line 36837 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 10767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-3].item_list2), (yyvsp[-1].lexer.charset));
          }
#line 36845 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 10771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
#line 36853 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 10775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_date((yyloc), (yyvsp[-1].item));
          }
#line 36861 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 10779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[-1].item));
          }
#line 36869 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 10783 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[-1].item));
          }
#line 36877 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 10787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36885 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 10791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36893 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 10795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item_list2));
          }
#line 36901 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 10800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_json_value(YYTHD, (yylsp[-5]), (yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].cast_type),
                                       (yyvsp[-1].json_on_error_or_empty).empty.type, (yyvsp[-1].json_on_error_or_empty).empty.default_string,
                                       (yyvsp[-1].json_on_error_or_empty).error.type, (yyvsp[-1].json_on_error_or_empty).error.default_string);
          }
#line 36911 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 10806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36919 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 10810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[-1].item));
          }
#line 36927 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 10814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[-1].item));
          }
#line 36935 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 10818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36943 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 10822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[-1].item));
          }
#line 36951 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 10826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_time((yyloc), (yyvsp[-1].item));
          }
#line 36959 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 10830 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_datetime((yyloc), (yyvsp[-1].item));
          }
#line 36967 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 10834 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
          }
#line 36975 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 10838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 36984 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 10843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_LEADING);
          }
#line 36993 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 10848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
#line 37002 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 10853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), Item_func_trim::TRIM_BOTH);
          }
#line 37010 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 10857 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_LEADING);
          }
#line 37018 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 10861 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_TRAILING);
          }
#line 37026 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 10865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_BOTH);
          }
#line 37034 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 10869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 37043 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 10874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
#line 37051 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 10878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[-1].item));
          }
#line 37059 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 10897 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);
          }
#line 37067 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 10901 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 37075 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 10905 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
#line 37083 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 10909 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 37091 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 10914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 37099 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 10919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 37107 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 10923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[-3].interval), (yyvsp[-1].item));
          }
#line 37115 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 10927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[-3].date_time_type), (yyvsp[-1].item));
          }
#line 37123 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 10931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 37132 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 10936 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[-1].item),(yyvsp[-3].item));
          }
#line 37140 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 10940 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);
          }
#line 37148 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 10944 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 37156 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 10948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37164 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 10952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37172 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 10956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37180 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 10960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37188 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 10964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 37197 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 10969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
          }
#line 37205 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 10973 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
          }
#line 37213 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 10977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
#line 37221 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 10981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 37229 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 10985 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 37237 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 10995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= {ITEM_CAST_CHAR, nullptr, "512", nullptr};
          }
#line 37245 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 10999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= (yyvsp[0].cast_type);
          }
#line 37253 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 11010 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[-1].item));
          }
#line 37261 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 11014 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[-1].item));
          }
#line 37269 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 11018 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[-1].item_list2));
          }
#line 37277 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 11022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[-1].item));
          }
#line 37285 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 11026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
#line 37293 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 11030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37301 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 11034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37309 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 11038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37317 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 11042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[-1].item));
          }
#line 37325 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 11046 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37333 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 11050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[-1].item));
          }
#line 37341 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 11054 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37349 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 11058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37357 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 11062 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[-1].item));
          }
#line 37365 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 11066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
#line 37373 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 11070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),1);
          }
#line 37381 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 11074 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-1].item), NULL);
          }
#line 37389 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 11078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37397 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 11082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-1].item), 0, 0, 0);
          }
#line 37405 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 11086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0);
          }
#line 37413 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 11090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0, true);
          }
#line 37421 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 11094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
          }
#line 37429 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 11102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
#line 37439 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 11108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
#line 37449 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 11114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
#line 37459 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 11120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
#line 37469 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 11126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
#line 37479 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 11132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37487 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 11136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
#line 37497 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 11154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[-3]), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 37505 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 11158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[-5].lexer.lex_str), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 37513 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 11165 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 37519 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 11167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                YYTHD->syntax_error();
                            });
          }
#line 37533 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 11179 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 37539 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 11180 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 37545 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 11184 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 37551 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 11185 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 37557 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 11189 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 37563 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 11190 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 37569 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 11195 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 37579 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 11201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 37589 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 11210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].lexer.lex_str), (yylsp[-1]).cpp);
          }
#line 37597 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 11222 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 37605 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 11226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 37613 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 11230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37621 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 11234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37629 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 11238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_array> array{::new (YYMEM_ROOT)
                                                          Json_array};
            if (array == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_array((yyloc), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper),
                                             std::move(array));
          }
#line 37643 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 11248 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_object> object{::new (YYMEM_ROOT)
                                                            Json_object};
            if (object == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_object(
                (yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper), std::move(object));
          }
#line 37657 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 11258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_collect((yyloc), (yyvsp[-2].item), (yyvsp[0].window), false);
          }
#line 37665 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 11262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_collect((yyloc), (yyvsp[-2].item), (yyvsp[0].window), true );
          }
#line 37673 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 11266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37681 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 11270 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[0].window));
          }
#line 37689 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 11274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37697 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 11278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[-2].item_list2), (yyvsp[0].window));
          }
#line 37705 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 11282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37713 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 11291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37721 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 11295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37729 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 11299 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37737 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 11303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 37745 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 11307 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 37753 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 11311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 37761 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 11315 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 37769 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 11319 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 37777 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 11323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 37785 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 11330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[-5].num), (yyvsp[-4].item_list2), (yyvsp[-3].order_list), (yyvsp[-2].string), (yyvsp[0].window));
          }
#line 37793 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 11337 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[0].window));
          }
#line 37801 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 11341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[0].window));
          }
#line 37809 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 11345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[0].window));
          }
#line 37817 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 11349 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[0].window));
          }
#line 37825 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 11353 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[0].window));
          }
#line 37833 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 11357 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37841 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 11361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37856 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 11372 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37871 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 11383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37879 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 11387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37887 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 11391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL ||
                args->push_back((yyvsp[-6].item)) ||
                args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[-2].from_first_last) == NFL_FROM_LAST, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37900 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 11403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= NULL;
            (yyval.lead_lag_info).default_value= NULL;
          }
#line 37909 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 11408 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].item);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 37918 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 11419 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 37924 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 11424 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].param_marker); }
#line 37930 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 11425 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_int_splocal((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 37936 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 11426 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 37942 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 11431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NULL;
          }
#line 37950 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 11435 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 37958 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 11442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_NONE;
          }
#line 37966 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 11446 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
#line 37974 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 11450 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
#line 37982 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 11458 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_NONE;
          }
#line 37990 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 11462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
#line 37998 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 11466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
#line 38006 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 11473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NULL;
          }
#line 38014 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 11477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 38022 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 11484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 38030 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 11491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NEW_PTN PT_window((yyvsp[0].item_string));
          }
#line 38038 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 11495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 38046 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 11502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYTHD->charset());
          }
#line 38054 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 11509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[-1].window);
          }
#line 38062 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 11519 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto frame= (yyvsp[0].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border((yyvsp[-1].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(start_bound, end_bound);
               frame= NEW_PTN PT_frame(WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window((yyvsp[-2].order_list), (yyvsp[-1].order_list), frame, (yyvsp[-3].item_string));
           }
#line 38080 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 11536 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NULL;
          }
#line 38088 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 11540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= (yyvsp[0].item_string);
          }
#line 38096 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 11547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 38104 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 11551 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 38112 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 11558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 38120 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 11562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 38128 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 11569 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NULL;
          }
#line 38136 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 11575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NEW_PTN PT_frame((yyvsp[-2].frame_units), (yyvsp[-1].frame_extent), (yyvsp[0].frame_exclusion));
          }
#line 38144 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 11582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto end_bound= NEW_PTN PT_border(WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[0].bound), end_bound);
          }
#line 38153 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 11587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= (yyvsp[0].frame_extent);
          }
#line 38161 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 11594 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
          }
#line 38169 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 11598 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].item_num));
          }
#line 38177 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 11602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].param_marker));
          }
#line 38185 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 11606 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 38193 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 11610 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_CURRENT_ROW);
          }
#line 38201 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 11617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[-2].bound), (yyvsp[0].bound));
          }
#line 38209 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 11624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= (yyvsp[0].bound);
          }
#line 38217 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 11628 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_FOLLOWING);
          }
#line 38225 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 11632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].item_num));
          }
#line 38233 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 11636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].param_marker));
          }
#line 38241 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 11640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 38249 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 11647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NULL;
          }
#line 38257 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 11651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_CURRENT_ROW);
          }
#line 38265 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 11655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_GROUP);
          }
#line 38273 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 11659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_TIES);
          }
#line 38281 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 11663 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_NO_OTHERS);
          }
#line 38288 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 11668 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_ROWS; }
#line 38294 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 11669 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_RANGE; }
#line 38300 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 11670 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_GROUPS; }
#line 38306 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 11675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[-1].item_list2));
          }
#line 38314 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 11681 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 38320 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 11686 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_USER_SET_EXPR));
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 38331 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 11693 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 38339 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 11697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[-2].var_type), (yyvsp[-1].lexer.lex_str), (yylsp[-1]), (yyvsp[0].lexer.lex_str));
          }
#line 38347 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 11703 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 38353 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 11704 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 38359 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 11709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 38369 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 11714 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 38375 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11718 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= NULL; }
#line 38381 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 11719 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= (yyvsp[0].order_list); }
#line 38387 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 11724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 38396 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 11729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 38407 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 11739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[-1]), (yyvsp[0].item));
          }
#line 38415 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
          }
#line 38426 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 11753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[-1].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[0].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[0].charset_with_opt_binary).charset ? (yyvsp[0].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[0].charset_with_opt_binary).charset;
          }
#line 38449 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11772 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
            warn_about_deprecated_national(YYTHD);
          }
#line 38461 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38472 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38483 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 11794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38494 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38505 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 11808 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38516 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_YEAR;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38527 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 11822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 38538 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 11829 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 38549 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 11836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[0].precision).length;
            (yyval.cast_type).dec= (yyvsp[0].precision).dec;
          }
#line 38560 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 11843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38571 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 11850 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ((yyvsp[0].numeric_type) == Numeric_type::DOUBLE) ?
              ITEM_CAST_DOUBLE : ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38583 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = (yyvsp[0].precision).length;
            (yyval.cast_type).dec = nullptr;
          }
#line 38594 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 11865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_POINT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38605 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 11872 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_LINESTRING;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38616 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_POLYGON;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38627 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 11886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_MULTIPOINT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38638 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11893 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_MULTILINESTRING;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38649 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 11900 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_MULTIPOLYGON;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38660 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_GEOMETRYCOLLECTION;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38671 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 11916 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 38677 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 11922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38687 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 11928 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38697 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 11936 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 38703 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 11937 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 38709 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 11942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38719 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 11948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38729 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 11956 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 38735 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 11957 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 38741 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 11961 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 38747 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 11962 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 38753 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 11967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYMEM_ROOT) mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 38765 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 11975 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 38775 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 11983 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 38781 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 11984 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 38787 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 11986 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The ODBC escape syntax for Outer Join.

              All productions from table_factor and joined_table can be escaped,
              not only the '{LEFT | RIGHT} [OUTER] JOIN' syntax.
            */
            (yyval.table_reference) = (yyvsp[-1].table_reference);
          }
#line 38801 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 11998 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 38807 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 11999 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 38813 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 12081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 38821 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 12086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 38829 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 12090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 38837 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 12094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 38845 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 12099 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), NULL);

            if ((yyvsp[0].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[0].table_reference)->add_cross_join(this_cross_join);
          }
#line 38858 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 12108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), (yyvsp[0].table_reference));
          }
#line 38866 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 12114 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_INNER; }
#line 38872 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 12115 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
#line 38878 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 12116 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
#line 38884 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 12120 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38890 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 12121 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38896 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 12122 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38902 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 12123 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
#line 38908 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 12126 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_LEFT; }
#line 38914 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 12127 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_RIGHT; }
#line 38920 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 12145 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 38926 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 12151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-1].string_list);
          }
#line 38934 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 12181 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].derived_table); }
#line 38940 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 12183 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[0].join_table)); }
#line 38946 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 12185 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[0].table_reference_list)); }
#line 38952 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 12186 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].table_reference); }
#line 38958 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 12190 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[-1].table_reference_list); }
#line 38964 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 12192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-3].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[-1].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 38974 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 12200 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 38980 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 12201 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 38986 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 12206 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[-3].table), (yyvsp[-2].string_list), (yyvsp[-1].lex_cstr), (yyvsp[0].key_usage_list));
          }
#line 38994 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 12212 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 39000 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 12213 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 39006 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 12218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(false, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 39023 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 12231 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(true, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 39035 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 12243 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].jtc_list), to_lex_string((yyvsp[0].lex_cstr)));
          }
#line 39051 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 12255 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.table_reference)= NEW_PTN PT_table_sequence_function((yyvsp[-2].item), (yyvsp[0].lex_cstr));
          }
#line 39066 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 12269 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-1].jtc_list);
          }
#line 39074 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 12276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == NULL || (yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 39084 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 12282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-2].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 39094 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 12291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyvsp[-2].lexer.lex_str));
          }
#line 39102 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 12296 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto column = make_unique_destroy_only<Json_table_column>(
                YYMEM_ROOT, (yyvsp[-3].jt_column_type), (yyvsp[-1].text_literal), (yyvsp[0].json_on_error_or_empty).error.type, (yyvsp[0].json_on_error_or_empty).error.default_string,
                (yyvsp[0].json_on_error_or_empty).empty.type, (yyvsp[0].json_on_error_or_empty).empty.default_string);
            if (column == nullptr) MYSQL_YYABORT;  // OOM
            (yyval.jt_column) = NEW_PTN PT_json_table_column_with_path(std::move(column), (yyvsp[-6].lexer.lex_str),
                                                        (yyvsp[-5].type), (yyvsp[-4].lexer.charset));
          }
#line 39115 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 12305 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyvsp[-1].text_literal), (yyvsp[0].jtc_list));
          }
#line 39123 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 12311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
#line 39131 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 12315 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
#line 39139 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 12325 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 39148 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 12330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 39157 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 12335 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 39166 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 12340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
          }
#line 39175 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 12348 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_error_or_empty) = (yyvsp[0].json_on_error_or_empty); }
#line 39181 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 12350 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(
              YYTHD, Sql_condition::SL_WARNING, ER_WARN_DEPRECATED_SYNTAX,
              ER_THD(YYTHD, ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY));
            (yyval.json_on_error_or_empty).error = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
          }
#line 39193 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 12360 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 39199 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 12363 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 39205 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 12367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::ERROR, nullptr};
          }
#line 39213 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 12371 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::NULL_VALUE, nullptr};
          }
#line 39221 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 12375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::DEFAULT, (yyvsp[0].item)};
          }
#line 39229 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 12382 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 39237 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 12385 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 39243 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 12386 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 39249 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 12387 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 39255 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 12391 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 39261 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 12392 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 39267 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 12398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), (yyvsp[-5].index_hint), (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 39276 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 12404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 39285 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 12413 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].key_usage_list)->concat((yyvsp[-1].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[0].key_usage_list);
          }
#line 39294 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 12420 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 39300 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 12430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
#line 39311 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 12441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 39321 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 12447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 39331 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 12456 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 39341 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 12462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 39350 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 12474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
#line 39363 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 12483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[-2].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 39376 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 12494 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39382 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 12495 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 39388 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 12496 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 39394 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 12497 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 39400 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 12498 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 39406 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 12499 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 39412 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 12500 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 39418 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 12501 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 39424 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 12502 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 39430 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 12503 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 39436 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 12504 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 39442 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 12505 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 39448 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 12509 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 39454 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 12510 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 39460 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 12511 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 39466 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 12512 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 39472 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 12513 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 39478 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 12514 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 39484 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 12515 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 39490 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 12516 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 39496 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 12517 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 39502 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 12521 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 39508 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 12522 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 39514 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 12523 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 39520 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 12524 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 39526 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 12533 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = NULL_CSTR; }
#line 39532 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 12534 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 39538 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 12543 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = nullptr; }
#line 39544 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 12548 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_where((yylsp[0]), (yyvsp[0].item)); }
#line 39550 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 12552 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 39556 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 12554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new PTI_having((yyloc), (yyvsp[0].item));
          }
#line 39564 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 12561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), false);
          }
#line 39572 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 12565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), true);
          }
#line 39580 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 12572 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;
          }
#line 39589 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 12577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_list)= NEW_PTN PT_with_list(YYTHD->mem_root);
            if ((yyval.with_list) == NULL || (yyval.with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
#line 39599 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 12586 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[0]).cpp.length();
            subq_text.str= YYTHD->strmake((yylsp[0]).cpp.start, subq_text.length);
            if (subq_text.str == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[0]).cpp.start - YYLIP->get_cpp_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyvsp[-3].lexer.lex_str), subq_text, subq_text_offset,
                                             (yyvsp[0].subquery), &(yyvsp[-2].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
#line 39616 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 12602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
#line 39629 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 12611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-1].simple_ident_list);
          }
#line 39637 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 12618 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
#line 39647 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 12624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-2].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
#line 39657 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1900:
#line 12633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NULL;
          }
#line 39665 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 12637 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= (yyvsp[0].windows);
          }
#line 39673 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 12644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NEW_PTN PT_window_list();
            if ((yyval.windows) == NULL || (yyval.windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
          }
#line 39683 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 12650 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[-2].windows);
          }
#line 39693 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 12659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
            if ((yyval.window) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.window)->set_name((yyvsp[-2].item_string));
          }
#line 39704 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 12672 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.group)= NULL; }
#line 39710 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 12674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[-1].order_list), (yyvsp[0].olap_type));
          }
#line 39718 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 12681 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 39727 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 12686 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39738 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12696 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
#line 39744 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 12697 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= ROLLUP_TYPE; }
#line 39750 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 12713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39759 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 12718 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39770 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 12728 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 39778 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 12734 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order)= NULL; }
#line 39784 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[0].order_list));
          }
#line 39792 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 12747 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 39801 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 12752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39812 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12761 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
#line 39818 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12766 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_ASC; }
#line 39824 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12767 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_DESC; }
#line 39830 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12771 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.limit_clause)= NULL; }
#line 39836 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 12777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[0].limit_options));
          }
#line 39844 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 12784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
#line 39854 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 12790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= (yyvsp[-2].item);
            (yyval.limit_options).is_offset_first= true;
          }
#line 39864 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 12796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[-2].item);
            (yyval.limit_options).opt_offset= (yyvsp[0].item);
            (yyval.limit_options).is_offset_first= false;
          }
#line 39874 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 12805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 39882 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 12809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[0].param_marker));
          }
#line 39890 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 12813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39898 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 12817 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39906 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 12821 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39914 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 12827 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 39920 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 12828 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 39926 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 12832 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39932 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 12833 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39938 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 12834 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39944 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 12835 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39950 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 12836 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39956 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 12837 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39962 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 12841 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39968 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 12842 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39974 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 12843 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39980 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 12844 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39986 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 12845 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 39992 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 12849 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39998 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 12850 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40004 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 12851 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40010 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 12852 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40016 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 12853 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40022 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 12857 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40028 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 12858 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (ulonglong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 40034 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 12859 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40040 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 12860 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40046 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 12861 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 40052 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 12866 "sql_yacc.yy" /* yacc.c:1646  */
    { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 40058 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 12876 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= (yyvsp[-2].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 40068 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 12882 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 40078 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 12891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[0].lexer.lex_str));
          }
#line 40086 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 12895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[0].lexer.lex_str));
          }
#line 40094 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 12902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= (yyvsp[0].into_destination);
          }
#line 40102 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 12911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.charset), (yyvsp[-1].field_separators), (yyvsp[0].line_separators));
          }
#line 40110 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 12915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40118 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 12918 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.into_destination)= (yyvsp[0].select_var_list); }
#line 40124 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 12927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_specification({}, (yyvsp[0].item_list2))));
          }
#line 40134 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 12940 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-4].is_not_empty);
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 40151 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 12956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.lex_str).str, (yyvsp[-1].table),
                                           (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 40161 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 12965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 40172 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 12975 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lexer.lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 40199 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 12998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring(db), (yyvsp[0].lexer.lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 40235 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 13033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].resource_group_flag_type));
          }
#line 40243 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 13040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 40259 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 13055 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[-1].num);
             lex->users_list= *(yyvsp[0].user_list);
          }
#line 40270 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 13065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 40286 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 13080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
#line 40296 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 13089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
#line 40308 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 13100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 40330 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 13120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_drop_undo_tablespace{
              DROP_UNDO_TABLESPACE, (yyvsp[-1].lexer.lex_str), {nullptr, 0},  pc};
            if (!cmd)
              MYSQL_YYABORT; // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 40353 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 13142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 40376 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 13165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[0].lexer.lex_str), (yyvsp[-1].num));
          }
#line 40385 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 13170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_DROP_COMPRESSION_DICTIONARY;
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 40395 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 13179 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyvsp[0].ulonglong_number), (yyvsp[-1].num));
          }
#line 40403 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 13186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyvsp[-1].num), (yyvsp[0].user_list));
          }
#line 40411 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 13193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 40421 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 13199 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= (yyvsp[-2].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 40431 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 13208 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 40441 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 13214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list)= (yyvsp[-2].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 40451 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 13222 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 40457 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 13223 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 40463 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 13227 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 40469 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 13228 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 40475 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 13232 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 40481 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 13238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 40491 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 13244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 40501 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 13269 "sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                             DBUG_SET("+d,simulate_out_of_memory"););
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-4].table), (yyvsp[-3].string_list),
                                  (yyvsp[-2].column_row_value_list_pair).column_list, (yyvsp[-2].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                            DBUG_SET("-d,bug29614521_simulate_oom"););
          }
#line 40517 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 13290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if (one_row == NULL || one_row->push_back(&(yyvsp[-2].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-9].lexer.optimizer_hints), (yyvsp[-8].lock_type), (yyvsp[-7].is_not_empty), (yyvsp[-5].table), (yyvsp[-4].string_list),
                                  (yyvsp[-2].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 40532 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 13308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-7].lexer.optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].insert_query_expression).column_list, NULL,
                                  (yyvsp[-1].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 40544 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 13324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].column_row_value_list_pair).column_list, (yyvsp[0].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 40556 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 13338 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if (one_row == NULL || one_row->push_back(&(yyvsp[0].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].lock_type), false, (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[0].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 40571 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 13354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].insert_query_expression).column_list, NULL,
                                  (yyvsp[0].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 40583 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 13364 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
#line 40589 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2008:
#line 13365 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40595 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2009:
#line 13367 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
#line 40608 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2010:
#line 13375 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 40614 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2011:
#line 13379 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 40620 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 13381 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 40633 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 13398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40642 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 13403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40651 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 13408 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[-2].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40660 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 13416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 40669 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 13421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 40678 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 13426 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= (yyvsp[-2].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 40687 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 13434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 40697 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 13440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 40707 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 13449 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 40715 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 13455 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_expression); }
#line 40721 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 13457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list));
          }
#line 40729 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 13460 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 40735 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 13470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40744 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 13475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40754 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 13485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40763 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 13490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if ((yyval.values_list) == nullptr || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40773 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 13508 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 40779 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 13512 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 40785 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 13517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
#line 40795 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 13527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 40805 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 13533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 40815 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 13543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
#line 40823 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 13550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = NULL_CSTR;
            (yyval.insert_update_values_reference).column_list = NULL;
          }
#line 40832 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 13555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            /* The column list object is short-lived, requiring duplication. */
            void *column_list_raw_mem= YYTHD->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
            if (!column_list_raw_mem)
              MYSQL_YYABORT; // OOM
            (yyval.insert_update_values_reference).column_list =
              static_cast<Create_col_name_list *>(column_list_raw_mem);
          }
#line 40846 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 13568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
#line 40855 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 13573 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[0].column_value_list_pair);
          }
#line 40863 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 13591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_update((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-5].table_reference_list), (yyvsp[-3].column_value_list_pair).column_list, (yyvsp[-3].column_value_list_pair).value_list,
                                  (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 40872 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 13598 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= NULL; }
#line 40878 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 13599 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= (yyvsp[0].with_clause); }
#line 40884 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 13604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[-2].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 40895 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 13611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 40908 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 13623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_pair).column= (yyvsp[-2].item);
            (yyval.column_value_pair).value= (yyvsp[0].item);
          }
#line 40917 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 13630 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 40923 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 13631 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40929 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 13647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].num), (yyvsp[-5].table), (yyvsp[-4].lex_cstr), (yyvsp[-3].string_list), (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 40937 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 13657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-6].with_clause), (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 40945 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 13668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-7].with_clause), (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 40953 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 13679 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 40959 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 13680 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].opt_delete_option) | (yyvsp[0].num); }
#line 40965 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 13684 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_QUICK; }
#line 40971 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 13685 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
#line 40977 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 13686 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
#line 40983 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 13691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyvsp[0].table));
          }
#line 40991 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 13702 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = 0; }
#line 40997 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 13708 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = (yyvsp[-2].ulong_num) | (yyvsp[0].ulong_num); }
#line 41003 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 13712 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_CPU; }
#line 41009 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 13713 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_MEMORY; }
#line 41015 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 13714 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_BLOCK_IO; }
#line 41021 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 13715 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_CONTEXT; }
#line 41027 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 13716 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_PAGE_FAULTS; }
#line 41033 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 13717 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_IPC; }
#line 41039 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 13718 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_SWAPS; }
#line 41045 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 13719 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_SOURCE; }
#line 41051 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 13720 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_ALL; }
#line 41057 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 13724 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_id) = 0; }
#line 41063 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 13726 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.query_id) = static_cast<my_thread_id>(my_strtoll10((yyvsp[0].lexer.lex_str).str, NULL, &error));
            if (error != 0)
              MYSQL_YYABORT;
          }
#line 41074 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 13738 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_databases((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
           }
#line 41082 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 13744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_tables((yyloc), (yyvsp[-3].show_cmd_type), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41090 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 13751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_triggers((yyloc), (yyvsp[-3].is_not_empty), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41098 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 13758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_events((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41106 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 13765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_table_status((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41114 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 13772 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_open_tables((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41122 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 13779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_plugins((yyloc));
          }
#line 41130 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 13786 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_logs((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 41138 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 13793 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_mutex((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 41146 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 13800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_status((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 41154 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 13813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41166 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 13824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_binlogs((yyloc));
          }
#line 41174 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 13831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_replication_deprecated_syntax_used();
            push_deprecated_warn(YYTHD, "SHOW SLAVE HOSTS", "SHOW REPLICAS");

            (yyval.top_level_node) = NEW_PTN PT_show_replicas((yyloc));
          }
#line 41185 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 13838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_replicas((yyloc));
          }
#line 41193 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 13845 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_binlog_events((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].limit_clause));
          }
#line 41201 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 13853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_relaylog_events((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].limit_clause), (yyvsp[0].lex_cstr));
          }
#line 41209 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 13866 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_keys((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-2].table), (yyvsp[0].item));
          }
#line 41221 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 13877 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engines((yyloc));
          }
#line 41229 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 13884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_count_warnings((yyloc));
          }
#line 41237 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 13891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_count_errors((yyloc));
          }
#line 41245 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 13898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_warnings((yyloc), (yyvsp[0].limit_clause));
          }
#line 41253 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 13905 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_errors((yyloc), (yyvsp[0].limit_clause));
          }
#line 41261 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 13912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            (yyval.top_level_node) = NEW_PTN PT_show_profiles((yyloc));
          }
#line 41273 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 13923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_profile((yyloc), (yyvsp[-2].ulong_num), (yyvsp[-1].query_id), (yyvsp[0].limit_clause));
          }
#line 41281 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 13930 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_status((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41289 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2110:
#line 13937 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_processlist((yyloc), (yyvsp[-1].is_not_empty));
          }
#line 41297 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2111:
#line 13944 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_variables((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41305 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 13951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_charsets((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41313 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2113:
#line 13958 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_collations((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41321 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 13965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_privileges((yyloc));
          }
#line 41329 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 13972 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), nullptr, nullptr, false);
          }
#line 41337 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 13976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[0].lex_user), nullptr, false);
          }
#line 41345 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 13980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[-2].lex_user), (yyvsp[0].user_list), false);
          }
#line 41353 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 13984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), nullptr, nullptr, true);
          }
#line 41361 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 13988 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[0].lex_user), nullptr, true);
          }
#line 41369 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 13992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[-2].lex_user), (yyvsp[0].user_list), true);
          }
#line 41377 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 13999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_database((yyloc), (yyvsp[-1].is_not_empty), (yyvsp[0].lexer.lex_str));
          }
#line 41385 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 14006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_table((yyloc), (yyvsp[0].table));
          }
#line 41393 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 14013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_view((yyloc), (yyvsp[0].table));
          }
#line 41401 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 14020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_master_status((yyloc));
          }
#line 41409 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 14027 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "SHOW SLAVE STATUS", "SHOW REPLICA STATUS");
            (yyval.top_level_node) = NEW_PTN PT_show_replica_status((yyloc), (yyvsp[0].lex_cstr));
          }
#line 41419 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 14035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_client_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41427 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 14039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_user_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41435 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 14043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_thread_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41443 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 14047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_table_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41451 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 14051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_index_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41459 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 14058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_procedure((yyloc), (yyvsp[0].spname));
          }
#line 41467 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 14065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_function((yyloc), (yyvsp[0].spname));
          }
#line 41475 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 14072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_trigger((yyloc), (yyvsp[0].spname));
          }
#line 41483 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 14079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_status_proc((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41491 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 14086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_status_func((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41499 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2136:
#line 14093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_procedure_code((yyloc), (yyvsp[0].spname));
          }
#line 41507 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2137:
#line 14100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_function_code((yyloc), (yyvsp[0].spname));
          }
#line 41515 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 14107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_event((yyloc), (yyvsp[0].spname));
          }
#line 41523 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2139:
#line 14114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_user((yyloc), (yyvsp[0].lex_user));
          }
#line 41531 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2141:
#line 14121 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = {}; }
#line 41537 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 14135 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 41543 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2147:
#line 14136 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= (yyvsp[0].lexer.lex_str).str; }
#line 41549 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2148:
#line 14140 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 41555 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2149:
#line 14141 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 41561 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 14145 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 41567 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 14146 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 41573 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 14150 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
#line 41579 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 14151 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
#line 41585 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2154:
#line 14152 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
#line 41591 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 14153 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
#line 41597 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 14162 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = {}; }
#line 41603 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 14163 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str); }
#line 41609 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 14167 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 41615 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 14168 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 41621 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 14172 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = {}; }
#line 41627 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 14173 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { (yyvsp[0].lexer.lex_str), {} }; }
#line 41633 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 14174 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { {}, (yyvsp[0].item) }; }
#line 41639 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 14180 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[-1].table), (yyvsp[0].lexer.lex_str));
          }
#line 41647 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 14187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyvsp[-1].explain_format_type), (yyvsp[0].top_level_node));
          }
#line 41655 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 14199 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain_for_connection(static_cast<my_thread_id>((yyvsp[0].ulong_num)));
          }
#line 41663 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 14211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::DEFAULT;
          }
#line 41671 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2176:
#line 14215 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "JSON"))
              (yyval.explain_format_type)= Explain_format_type::JSON;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TRADITIONAL"))
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TREE"))
              (yyval.explain_format_type)= Explain_format_type::TREE;
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 41689 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 14231 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].explain_format_type))
            {
              case Explain_format_type::DEFAULT:
              case Explain_format_type::TREE:
                (yyval.explain_format_type)= Explain_format_type::TREE_WITH_EXECUTE;
                break;
              case Explain_format_type::JSON:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                         "FORMAT=JSON with EXPLAIN ANALYZE");
                MYSQL_YYABORT;
              default:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                         "FORMAT=TRADITIONAL with EXPLAIN ANALYZE");
                MYSQL_YYABORT;
            }
          }
#line 41711 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2178:
#line 14249 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].explain_format_type) == Explain_format_type::DEFAULT)
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else
              (yyval.explain_format_type)= (yyvsp[0].explain_format_type);
          }
#line 41722 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2179:
#line 14258 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= LEX_STRING{ nullptr, 0 }; }
#line 41728 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 14260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].string) != nullptr)
              (yyval.lexer.lex_str)= (yyvsp[0].string)->lex_string();
          }
#line 41737 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 14272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 41748 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 14279 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41754 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 14284 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[0].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 41771 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2185:
#line 14296 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41777 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2187:
#line 14301 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41783 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2188:
#line 14303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 41799 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2189:
#line 14315 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
#line 41811 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 14323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 41827 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2192:
#line 14339 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41833 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 14344 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 41839 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2194:
#line 14346 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 41845 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 14348 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 41851 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 14350 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 41857 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 14352 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 41863 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 14354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_RELAY_LOG;
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 41873 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 14360 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 41879 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2200:
#line 14362 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 41885 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 14364 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_LOG; }
#line 41891 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2202:
#line 14366 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 41897 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2203:
#line 14368 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_CLIENT_STATS; }
#line 41903 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2204:
#line 14370 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_STATS; }
#line 41909 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2205:
#line 14372 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_THREAD_STATS; }
#line 41915 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2206:
#line 14374 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_TABLE_STATS; }
#line 41921 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2207:
#line 14376 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_INDEX_STATS; }
#line 41927 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2208:
#line 14378 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 41933 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2209:
#line 14380 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
#line 41939 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2210:
#line 14382 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_FLUSH_PAGE_BITMAPS; }
#line 41945 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2211:
#line 14384 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= DUMP_MEMORY_PROFILE; }
#line 41951 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 14388 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= NULL; }
#line 41957 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2214:
#line 14394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 41966 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2215:
#line 14399 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41972 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 14401 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
#line 41983 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 14416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
#line 41993 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2220:
#line 14422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 42003 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2221:
#line 14431 "sql_yacc.yy" /* yacc.c:1646  */
    {
              Lex->type|= REFRESH_SLAVE;
              Lex->set_replication_deprecated_syntax_used();
              push_deprecated_warn(YYTHD, "RESET SLAVE", "RESET REPLICA");
            }
#line 42013 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2222:
#line 14437 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 42022 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2223:
#line 14442 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_REPLICA; }
#line 42028 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2224:
#line 14444 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
            MYSQL_YYABORT;  // OOM
          }
#line 42037 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2225:
#line 14449 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_MASTER;
            /*
              Reset Master should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
#line 42057 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2227:
#line 14466 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type |= REFRESH_RESET_PAGE_BITMAPS; }
#line 42063 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2228:
#line 14470 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 42069 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2229:
#line 14471 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 42075 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2230:
#line 14475 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42081 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2231:
#line 14477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) == 0 || (yyvsp[0].ulonglong_number) > MAX_ALLOWED_FN_EXT_RESET_MASTER)
            {
              my_error(ER_RESET_MASTER_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[0].ulonglong_number), MAX_ALLOWED_FN_EXT_RESET_MASTER);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[0].ulonglong_number);
          }
#line 42096 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2232:
#line 14491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 42106 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2233:
#line 14497 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42112 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 14503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->purge_value_list.clear();
            lex->purge_value_list.push_front(new Item_uint((yyvsp[0].ulonglong_number)));
            lex->type= PURGE_BITMAPS_TO_LSN;
          }
#line 42123 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 14513 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lexer.lex_str).str;
          }
#line 42131 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2237:
#line 14517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex= Lex;
            lex->purge_value_list.clear();
            lex->purge_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 42144 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2238:
#line 14531 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex=Lex;
            lex->kill_value_list.clear();
            lex->kill_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 42157 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2239:
#line 14542 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 42163 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2240:
#line 14543 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 42169 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 14544 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= ONLY_KILL_QUERY; }
#line 42175 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2242:
#line 14551 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->query_block->db= (yyvsp[0].lexer.lex_str).str;
          }
#line 42185 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2243:
#line 14579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyvsp[-16].filetype),  // data_or_xml
                                      (yyvsp[-15].lock_type),  // load_data_lock
                                      (yyvsp[-14].is_not_empty),  // opt_local
                                      (yyvsp[-12].lexer.lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[-11].on_duplicate),  // opt_duplicate
                                      (yyvsp[-8].table), // table_ident
                                      (yyvsp[-7].string_list), // opt_use_partition
                                      (yyvsp[-6].lexer.charset), // opt_load_data_charset
                                      (yyvsp[-5].string), // opt_xml_rows_identified_by
                                      (yyvsp[-4].field_separators), // opt_field_term
                                      (yyvsp[-3].line_separators), // opt_line_term
                                      (yyvsp[-2].ulong_num), // opt_ignore_lines
                                      (yyvsp[-1].item_list2), // opt_field_or_var_spec
                                      (yyvsp[0].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[0].load_set_list).set_expr_list,
                                      (yyvsp[0].load_set_list).set_expr_str_list);
          }
#line 42208 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2244:
#line 14600 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 42214 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2245:
#line 14601 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 42220 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2246:
#line 14605 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 42226 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2247:
#line 14606 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 42232 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2248:
#line 14610 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 42238 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2249:
#line 14611 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
#line 42244 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2250:
#line 14612 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 42250 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 14616 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
#line 42256 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2253:
#line 14621 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
#line 42262 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2254:
#line 14622 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
#line 42268 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2255:
#line 14626 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators).cleanup(); }
#line 42274 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2256:
#line 14627 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators)= (yyvsp[0].field_separators); }
#line 42280 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2257:
#line 14632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators)= (yyvsp[-1].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[0].field_separators));
          }
#line 42289 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2259:
#line 14641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[0].string);
          }
#line 42298 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2260:
#line 14646 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
#line 42308 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2261:
#line 14652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
          }
#line 42317 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2262:
#line 14657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[0].string);
          }
#line 42326 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2263:
#line 14664 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators).cleanup(); }
#line 42332 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2264:
#line 14665 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators)= (yyvsp[0].line_separators); }
#line 42338 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2265:
#line 14670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators)= (yyvsp[-1].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[0].line_separators));
          }
#line 42347 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2267:
#line 14679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[0].string);
          }
#line 42356 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2268:
#line 14684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[0].string);
          }
#line 42365 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2269:
#line 14691 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= nullptr; }
#line 42371 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2270:
#line 14692 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 42377 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2271:
#line 14696 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 42383 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2272:
#line 14697 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= atol((yyvsp[-1].lexer.lex_str).str); }
#line 42389 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2275:
#line 14706 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 42395 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2276:
#line 14707 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 42401 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2277:
#line 14708 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 42407 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2278:
#line 14713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 42417 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2279:
#line 14719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 42427 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2281:
#line 14729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42435 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2282:
#line 14735 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
#line 42441 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2283:
#line 14736 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= (yyvsp[0].load_set_list); }
#line 42447 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2284:
#line 14741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list)= (yyvsp[-2].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 42459 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2285:
#line 14749 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 42480 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2286:
#line 14769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            size_t length= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;

            if ((yyvsp[0].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item)->item_name.copy((yylsp[-1]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[-2].item);
            (yyval.load_set_element).set_expr= (yyvsp[0].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[-1]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 42500 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2287:
#line 14790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
          }
#line 42509 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2288:
#line 14795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
            warn_about_deprecated_national(YYTHD);
          }
#line 42519 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2289:
#line 14801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 42528 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2290:
#line 14806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].text_literal), (yyvsp[0].lexer.lex_str));
          }
#line 42537 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2291:
#line 14814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 42548 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2292:
#line 14821 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 42559 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2293:
#line 14828 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_bin_string::make_bin_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 42570 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2294:
#line 14838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[0]).raw.start - YYLIP->get_buf()));
            if (i == NULL)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
#line 42590 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2296:
#line 14857 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 42596 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2297:
#line 14859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 42607 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2300:
#line 14874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
#line 42623 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2301:
#line 14888 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].text_literal); }
#line 42629 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2302:
#line 14889 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 42635 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2304:
#line 14892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_false((yyloc));
          }
#line 42643 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2305:
#line 14896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_true((yyloc));
          }
#line 42651 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2306:
#line 14900 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42659 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2307:
#line 14904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42667 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2308:
#line 14908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 42675 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2309:
#line 14912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 42683 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2313:
#line 14925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYCSCL);
          }
#line 42691 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2314:
#line 14929 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 42699 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2315:
#line 14939 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 42705 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2316:
#line 14940 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 42711 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2317:
#line 14941 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length); }
#line 42717 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2318:
#line 14947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
#line 42725 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2319:
#line 14951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
#line 42733 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2320:
#line 14955 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
#line 42741 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2321:
#line 14961 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty) = false; }
#line 42747 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2322:
#line 14962 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty) = true; }
#line 42753 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2325:
#line 14977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), nullptr, (yyvsp[-2].lexer.lex_str).str);
          }
#line 42761 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2326:
#line 14981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            auto schema_name = YYCLIENT_NO_SCHEMA ? nullptr : (yyvsp[-4].lexer.lex_str).str;
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), schema_name, (yyvsp[-2].lexer.lex_str).str);
          }
#line 42772 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2327:
#line 14991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 42780 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2328:
#line 14998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[0].item), ORDER_NOT_RELEVANT);
          }
#line 42788 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2329:
#line 15005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 42796 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2331:
#line 15013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42804 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2333:
#line 15021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 42812 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2334:
#line 15025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 42822 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2335:
#line 15034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 42832 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2336:
#line 15040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            (yyval.table)= NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 42844 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2337:
#line 15051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 42854 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2338:
#line 15057 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[-3].lexer.lex_str)),
                                    to_lex_cstring((yyvsp[-1].lexer.lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 42866 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2339:
#line 15067 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 42872 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2340:
#line 15069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lexer.lex_str).str,
                                                     (yyvsp[0].lexer.lex_str).str+(yyvsp[0].lexer.lex_str).length,
                                                     (yyvsp[0].lexer.lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lexer.lex_str).length)
              {
                ErrConvString err((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42903 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2341:
#line 15099 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!strcont((yyvsp[0].lexer.lex_str).str, "\n"))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 42917 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2342:
#line 15112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (strcont((yyvsp[0].lexer.lex_str).str, "."))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 42931 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2343:
#line 15125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42948 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2344:
#line 15141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42965 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2345:
#line 15157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42983 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2348:
#line 15179 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= to_lex_string(Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length));
          }
#line 42991 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2349:
#line 15186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset(), true))
                MYSQL_YYABORT;
            }
          }
#line 43008 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2350:
#line 15201 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 43014 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2351:
#line 15203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lexer.lex_str).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 43026 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2353:
#line 15215 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 43037 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2354:
#line 15224 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)=to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 43043 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2355:
#line 15226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_cstr).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lex_cstr).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_cstr).length= (yyvsp[0].lexer.keyword).length;
          }
#line 43055 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2357:
#line 15238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 43066 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2358:
#line 15247 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 43072 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2359:
#line 15248 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 43078 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2360:
#line 15249 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 43084 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2364:
#line 15260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 43093 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2365:
#line 15265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 43102 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2366:
#line 15273 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[0].lex_user);
          }
#line 43110 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2367:
#line 15277 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD)))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
          }
#line 43124 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2368:
#line 15290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 43133 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2369:
#line 15295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 43142 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2370:
#line 15303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
            if (check_and_convert_db_name(&(yyval.lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
          }
#line 43152 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2871:
#line 15906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[-1]), (yyvsp[0].start_option_value_list));
          }
#line 43160 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2872:
#line 15915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[-1].option_value_no_option_type), (yylsp[-1]), (yyvsp[0].option_value_list));
          }
#line 43168 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2873:
#line 15919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[0].transaction_characteristics), (yylsp[0]));
          }
#line 43176 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2874:
#line 15923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[-1].var_type), (yyvsp[0].start_option_value_list_following_option_type));
          }
#line 43184 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2875:
#line 15927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.lex_str).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                false,
                                                                (yylsp[-1]));
          }
#line 43195 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2876:
#line 15934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.keyword).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                true,
                                                                (yylsp[-1]));
          }
#line 43207 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2877:
#line 15942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.lex_str).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    false,
                                                                    (yylsp[-1]));
          }
#line 43219 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2878:
#line 15950 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.keyword).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    true,
                                                                    (yylsp[-1]));
          }
#line 43232 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2879:
#line 15962 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyvsp[0].user_list));
          }
#line 43240 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2880:
#line 15966 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 43249 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2881:
#line 15971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 43258 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2882:
#line 15976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), (yyvsp[-2].user_list),
                                                    role_enum::ROLE_NAME);
          }
#line 43267 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2883:
#line 15981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_NONE);
          }
#line 43276 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2884:
#line 15986 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_ALL);
          }
#line 43285 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2885:
#line 15991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_ALL, (yyvsp[0].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 43294 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2886:
#line 15998 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= NULL; }
#line 43300 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2887:
#line 15999 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= (yyvsp[0].user_list); }
#line 43306 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2888:
#line 16004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[0].lexer.lex_str)), nullptr);
          }
#line 43314 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2889:
#line 16008 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].thread_id_list_type));
          }
#line 43322 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2890:
#line 16015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 43332 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2891:
#line 16021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= (yyvsp[-2].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 43342 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2892:
#line 16029 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.thread_id_list_type)= (yyvsp[0].thread_id_list_type); }
#line 43348 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2893:
#line 16035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[-1].option_value_following_option_type),
                                                                          (yylsp[-1]),
                                                                          (yyvsp[0].option_value_list));
          }
#line 43359 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2894:
#line 16042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[0].transaction_characteristics),
                                                                           (yylsp[0]));
          }
#line 43369 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2895:
#line 16051 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= NULL; }
#line 43375 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2896:
#line 16052 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= (yyvsp[0].option_value_list); }
#line 43381 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2897:
#line 16058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 43389 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2898:
#line 16062 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[-2].option_value_list), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 43397 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2899:
#line 16070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[-1].var_type), (yyvsp[0].option_value_following_option_type));
          }
#line 43405 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2900:
#line 16073 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.node)= (yyvsp[0].option_value_no_option_type); }
#line 43411 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2901:
#line 16077 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 43417 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2902:
#line 16078 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 43423 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2903:
#line 16079 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST_ONLY; }
#line 43429 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2904:
#line 16080 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43435 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2905:
#line 16081 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43441 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2906:
#line 16085 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43447 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2907:
#line 16086 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 43453 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2908:
#line 16087 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43459 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2909:
#line 16088 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43465 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2910:
#line 16092 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 43471 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2911:
#line 16093 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 43477 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2912:
#line 16094 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43483 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2913:
#line 16095 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43489 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2914:
#line 16099 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 43495 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2915:
#line 16100 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 43501 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2916:
#line 16101 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.var_type)=OPT_PERSIST_ONLY; }
#line 43507 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2917:
#line 16102 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 43513 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2918:
#line 16103 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43519 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2919:
#line 16104 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43525 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2920:
#line 16110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 43533 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2921:
#line 16120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[-2].internal_variable_name), (yyvsp[0].item), (yylsp[0]));
          }
#line 43541 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2922:
#line 16124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 43549 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2923:
#line 16129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[-3].var_type), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 43557 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2924:
#line 16133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[0].lexer.charset));
          }
#line 43565 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2925:
#line 16137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[-1]));
          }
#line 43576 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2926:
#line 16144 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 43584 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2927:
#line 16148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names(nullptr, nullptr);
          }
#line 43592 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2928:
#line 16155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 43600 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2929:
#line 16159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 43608 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2930:
#line 16163 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[0].lexer.lex_str));
          }
#line 43616 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2931:
#line 16170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].transaction_access_mode), (yyvsp[0].isolation_level));
          }
#line 43624 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2932:
#line 16174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].isolation_level), (yyvsp[0].transaction_access_mode));
          }
#line 43632 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2933:
#line 16181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[0].num));
          }
#line 43640 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2934:
#line 16187 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= NULL; }
#line 43646 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2935:
#line 16188 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= (yyvsp[0].transaction_access_mode); }
#line 43652 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2936:
#line 16193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[0].tx_isolation));
          }
#line 43660 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2937:
#line 16199 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= NULL; }
#line 43666 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2938:
#line 16200 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= (yyvsp[0].isolation_level); }
#line 43672 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2939:
#line 16204 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 43678 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2940:
#line 16205 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 43684 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2941:
#line 16209 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 43690 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2942:
#line 16210 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 43696 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2943:
#line 16211 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 43702 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2944:
#line 16212 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 43708 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2946:
#line 16217 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 43714 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2947:
#line 16219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 43722 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2948:
#line 16223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
#line 43730 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2949:
#line 16227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
#line 43738 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2950:
#line 16231 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
#line 43746 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2951:
#line 16235 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
#line 43754 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2952:
#line 16239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "FORCE", 5, system_charset_info);
          }
#line 43762 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2953:
#line 16248 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
          }
#line 43774 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2954:
#line 16259 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_TABLES_FOR_BACKUP;
          }
#line 43782 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2955:
#line 16263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 43790 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2956:
#line 16267 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43796 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2957:
#line 16269 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 43807 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2962:
#line 16289 "sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
#line 43836 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2963:
#line 16316 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 43842 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2964:
#line 16317 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 43848 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2965:
#line 16319 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
#line 43857 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2966:
#line 16323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 43863 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2967:
#line 16328 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
          }
#line 43875 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2968:
#line 16339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 43886 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2969:
#line 16346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 43894 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2970:
#line 16354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
#line 43903 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2971:
#line 16362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
#line 43911 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2972:
#line 16369 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= (yyvsp[0].alter_instance_cmd);
          }
#line 43920 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2973:
#line 16376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "INNODB"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_INNODB_MASTER_KEY, EMPTY_CSTR, 0);
            }
            else if (is_identifier((yyvsp[-2].lexer.lex_str), "BINLOG"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_BINLOG_MASTER_KEY, EMPTY_CSTR, 0);
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 43940 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2974:
#line 16392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-3].lexer.lex_str), "INNODB"))
            {
              if ((yyvsp[0].ulong_num) > UINT_MAX32 - 1)
              {
                my_error(ER_SYSTEM_KEY_ROTATION_MAX_KEY_ID_EXCEEDED, MYF(0));
                MYSQL_YYABORT;
              }
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_INNODB_SYSTEM_KEY, EMPTY_CSTR, (yyvsp[0].ulong_num));
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-3]));
              MYSQL_YYABORT;
            }
          }
#line 43961 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2975:
#line 16409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "REDO"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_REDO_SYSTEM_KEY, EMPTY_CSTR, 0);
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 43977 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2976:
#line 16421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring("mysql_main"), 0);
          }
#line 43985 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2977:
#line 16425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring("mysql_main"), 0);
          }
#line 43993 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2978:
#line 16428 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring((yyvsp[0].lexer.lex_str)), 0);
          }
#line 44001 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2979:
#line 16431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring((yyvsp[-4].lexer.lex_str)), 0);
          }
#line 44009 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2980:
#line 16435 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_ENABLE_INNODB_REDO, EMPTY_CSTR, 0);
          }
#line 44028 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2981:
#line 16450 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_DISABLE_INNODB_REDO, EMPTY_CSTR, 0);
          }
#line 44047 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2982:
#line 16464 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(RELOAD_KEYRING, EMPTY_CSTR, 0);
          }
#line 44055 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2983:
#line 16475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[-2].table), (yyvsp[0].lex_cstr));
          }
#line 44063 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2984:
#line 16479 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
          }
#line 44071 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2985:
#line 16488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 44079 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2986:
#line 16498 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[-5].lexer.lex_str)),
                                              to_lex_cstring((yyvsp[-3].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 44088 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2987:
#line 16510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[-8].lexer.lex_str)),
                                                    to_lex_cstring((yyvsp[-6].lexer.lex_str)),
                                                    (yyvsp[-5].ha_rkey_mode), (yyvsp[-3].item_list2), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 44098 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2988:
#line 16518 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 44104 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2989:
#line 16519 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 44110 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2990:
#line 16523 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 44116 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2991:
#line 16524 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 44122 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2992:
#line 16525 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
#line 44128 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2993:
#line 16526 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
#line 44134 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2994:
#line 16530 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 44140 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2995:
#line 16531 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 44146 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2996:
#line 16532 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 44152 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2997:
#line 16533 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 44158 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2998:
#line 16534 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 44164 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2999:
#line 16541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_revoke_roles((yyvsp[-2].role_or_privilege_list), (yyvsp[0].user_list));
            MAKE_CMD(tmp);
          }
#line 44173 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3000:
#line 16546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (apply_privileges(YYTHD, *(yyvsp[-5].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 44192 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3001:
#line 16561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 44201 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3002:
#line 16566 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 44219 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3003:
#line 16580 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[0].user_list);
          }
#line 44228 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3004:
#line 16585 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[0].user_list);
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 44240 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3005:
#line 16596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_grant_roles((yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list), (yyvsp[0].is_not_empty));
            MAKE_CMD(tmp);
          }
#line 44249 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3006:
#line 16602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[-7].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 44268 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3007:
#line 16617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 44277 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3008:
#line 16622 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 44293 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3009:
#line 16634 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[0].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 44307 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3010:
#line 16646 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 44313 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3011:
#line 16647 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 44319 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3012:
#line 16648 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::FUNCTION; }
#line 44325 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3013:
#line 16649 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::PROCEDURE; }
#line 44331 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3016:
#line 16659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == NULL || (yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 44341 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3017:
#line 16665 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= (yyvsp[-2].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 44351 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3018:
#line 16674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_cstring_list) == NULL)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
          }
#line 44362 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3019:
#line 16681 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yylsp[-2]), (yyvsp[-2].lexer.lex_str), (yyvsp[0].lexer.lex_str)); }
#line 44368 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3020:
#line 16683 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SELECT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 44374 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3021:
#line 16685 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), INSERT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 44380 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3022:
#line 16687 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), UPDATE_ACL, (yyvsp[0].lex_cstring_list)); }
#line 44386 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3023:
#line 16689 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REFERENCES_ACL, (yyvsp[0].lex_cstring_list)); }
#line 44392 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3024:
#line 16691 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DELETE_ACL); }
#line 44398 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3025:
#line 16693 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), 0); }
#line 44404 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3026:
#line 16695 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), INDEX_ACL); }
#line 44410 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3027:
#line 16697 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), ALTER_ACL); }
#line 44416 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3028:
#line 16699 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), CREATE_ACL); }
#line 44422 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3029:
#line 16701 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DROP_ACL); }
#line 44428 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3030:
#line 16703 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EXECUTE_ACL); }
#line 44434 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3031:
#line 16705 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), RELOAD_ACL); }
#line 44440 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3032:
#line 16707 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SHUTDOWN_ACL); }
#line 44446 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3033:
#line 16709 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), PROCESS_ACL); }
#line 44452 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3034:
#line 16711 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), FILE_ACL); }
#line 44458 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3035:
#line 16713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
#line 44467 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3036:
#line 16718 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_DB_ACL); }
#line 44473 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3037:
#line 16720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
#line 44491 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3038:
#line 16734 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-2]), CREATE_TMP_ACL); }
#line 44497 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3039:
#line 16736 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), LOCK_TABLES_ACL); }
#line 44503 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3040:
#line 16738 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_SLAVE_ACL); }
#line 44509 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3041:
#line 16740 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_CLIENT_ACL); }
#line 44515 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3042:
#line 16742 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_VIEW_ACL); }
#line 44521 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3043:
#line 16744 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_VIEW_ACL); }
#line 44527 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3044:
#line 16746 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_PROC_ACL); }
#line 44533 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3045:
#line 16748 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), ALTER_PROC_ACL); }
#line 44539 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3046:
#line 16750 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_USER_ACL); }
#line 44545 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3047:
#line 16752 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EVENT_ACL); }
#line 44551 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3048:
#line 16754 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), TRIGGER_ACL); }
#line 44557 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3049:
#line 16756 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_TABLESPACE_ACL); }
#line 44563 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3050:
#line 16758 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_ROLE_ACL); }
#line 44569 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3051:
#line 16760 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), DROP_ROLE_ACL); }
#line 44575 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3052:
#line 16764 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44581 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3053:
#line 16765 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44587 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3058:
#line 16780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lexer.lex_str).str;
          }
#line 44601 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3059:
#line 16790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lexer.lex_str).str;
          }
#line 44615 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3060:
#line 16800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lexer.lex_str).str;
          }
#line 44629 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3061:
#line 16813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_query_block()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 44647 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3062:
#line 16827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_query_block()->db = (yyvsp[-2].lexer.lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 44663 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3063:
#line 16839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_query_block()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 44679 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3064:
#line 16851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_query_block()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 44695 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3065:
#line 16863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            auto tmp = NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_query_block()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 44713 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3066:
#line 16880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44723 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3067:
#line 16886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44733 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3068:
#line 16895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44743 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3069:
#line 16901 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44753 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3070:
#line 16909 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44759 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3071:
#line 16910 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44765 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3072:
#line 16914 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44771 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3073:
#line 16915 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44777 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3074:
#line 16920 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-2].ulong_num);
            m->init_registration= true;
            m->requires_registration= true;
            (yyval.lex_mfa) = m;
          }
#line 44791 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3075:
#line 16930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-1].ulong_num);
            m->unregister= true;
            (yyval.lex_mfa) = m;
          }
#line 44804 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3076:
#line 16939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-6].ulong_num);
            m->finish_registration= true;
            m->requires_registration= true;
            m->challenge_response= to_lex_cstring((yyvsp[0].lexer.lex_str));
            (yyval.lex_mfa) = m;
          }
#line 44819 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3077:
#line 16953 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyval.lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            if ((yyval.lex_user)->add_mfa_identifications((yyvsp[0].lex_mfas).mfa2, (yyvsp[0].lex_mfas).mfa3))
              MYSQL_YYABORT;  // OOM
          }
#line 44830 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3078:
#line 16960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-2].lex_user);
            /* set $3 as first factor auth method */
            (yyvsp[0].lex_mfa)->nth_factor = 1;
            (yyvsp[0].lex_mfa)->passwordless = false;
            (yyval.lex_user)->first_factor_auth_info = *(yyvsp[0].lex_mfa);
            /* set $2 as second factor auth method */
            (yyvsp[-1].lex_mfa)->nth_factor = 2;
            (yyvsp[-1].lex_mfa)->passwordless = true;
            if ((yyval.lex_user)->mfa_list.push_back((yyvsp[-1].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user)->with_initial_auth = true;
          }
#line 44848 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3079:
#line 16974 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            if ((yyval.lex_user)->add_mfa_identifications((yyvsp[0].lex_mfas).mfa2, (yyvsp[0].lex_mfas).mfa3))
              MYSQL_YYABORT;  // OOM
          }
#line 44858 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3080:
#line 16982 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_mfas) = {}; }
#line 44864 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3081:
#line 16984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_mfa)->nth_factor = 2;
            (yyval.lex_mfas) = {(yyvsp[0].lex_mfa), nullptr};
          }
#line 44873 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3082:
#line 16989 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].lex_mfa)->nth_factor = 2;
            (yyvsp[0].lex_mfa)->nth_factor = 3;
            (yyval.lex_mfas) = {(yyvsp[-2].lex_mfa), (yyvsp[0].lex_mfa)};
          }
#line 44883 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3089:
#line 17007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_identified_by_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 44897 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3090:
#line 17020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->auth = EMPTY_CSTR;
            m->has_password_generator = true;
            m->uses_identified_by_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password = true;
          }
#line 44912 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3091:
#line 17034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->auth = EMPTY_CSTR;
            m->uses_identified_by_clause = false;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
          }
#line 44927 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3092:
#line 17048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-2].lexer.lex_str));
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_authentication_string_clause = true;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
          }
#line 44942 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3093:
#line 17062 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-2].lexer.lex_str));
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_identified_by_clause = true;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 44958 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3094:
#line 17077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-3].lexer.lex_str));
            m->uses_identified_by_clause = true;
            m->uses_identified_with_clause = true;
            m->has_password_generator = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 44974 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3095:
#line 17092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 44984 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3096:
#line 17098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 44994 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3097:
#line 17104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 45004 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3098:
#line 17115 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 45017 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3099:
#line 17126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 45030 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3100:
#line 17135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 45041 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3101:
#line 17142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 45052 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3102:
#line 17151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
          }
#line 45065 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3103:
#line 17160 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->first_factor_auth_info = *(yyvsp[0].lex_mfa);
            (yyvsp[-1].lex_user)->discard_old_password = false;
            (yyvsp[-1].lex_user)->retain_current_password = false;
          }
#line 45076 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3104:
#line 17167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 45087 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3105:
#line 17174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 45098 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3106:
#line 17182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password= false;
            (yyvsp[-2].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 45109 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3107:
#line 17189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->discard_old_password = (yyvsp[0].is_not_empty);
            (yyvsp[-1].lex_user)->retain_current_password = false;
          }
#line 45119 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3108:
#line 17195 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->add_factor = true;
            if ((yyvsp[-3].lex_user)->add_mfa_identifications((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-3].lex_user);
           }
#line 45131 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3109:
#line 17203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-4].ulong_num) == (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            } else if ((yyvsp[-4].ulong_num) > (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_INVALID_ORDER, MYF(0), (yyvsp[-1].ulong_num), (yyvsp[-4].ulong_num));
              MYSQL_YYABORT;
            }
            (yyvsp[-3].lex_mfa)->nth_factor = (yyvsp[-4].ulong_num);
            (yyvsp[-3].lex_mfa)->add_factor = true;
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->add_factor = true;
            if ((yyvsp[-6].lex_user)->add_mfa_identifications((yyvsp[-3].lex_mfa), (yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-6].lex_user);
          }
#line 45152 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3110:
#line 17220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->modify_factor = true;
            if ((yyvsp[-3].lex_user)->add_mfa_identifications((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-3].lex_user);
           }
#line 45164 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3111:
#line 17228 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-4].ulong_num) == (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            }
            (yyvsp[-3].lex_mfa)->nth_factor = (yyvsp[-4].ulong_num);
            (yyvsp[-3].lex_mfa)->modify_factor = true;
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->modify_factor = true;
            if ((yyvsp[-6].lex_user)->add_mfa_identifications((yyvsp[-3].lex_mfa), (yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-6].lex_user);
          }
#line 45182 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3112:
#line 17242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor = (yyvsp[0].ulong_num);
            m->drop_factor = true;
            if ((yyvsp[-2].lex_user)->add_mfa_identifications(m))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-2].lex_user);
           }
#line 45197 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3113:
#line 17253 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].ulong_num) == (yyvsp[0].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            }
            LEX_MFA *m1 = NEW_PTN LEX_MFA;
            if (m1 == nullptr)
              MYSQL_YYABORT;  // OOM
            m1->nth_factor = (yyvsp[-2].ulong_num);
            m1->drop_factor = true;
            LEX_MFA *m2 = NEW_PTN LEX_MFA;
            if (m2 == nullptr)
              MYSQL_YYABORT;  // OOM
            m2->nth_factor = (yyvsp[0].ulong_num);
            m2->drop_factor = true;
            if ((yyvsp[-4].lex_user)->add_mfa_identifications(m1, m2))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-4].lex_user);
           }
#line 45221 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3114:
#line 17276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (my_strcasecmp(system_charset_info, (yyvsp[-1].lexer.lex_str).str, "2") == 0) {
              (yyval.ulong_num) = 2;
            } else if (my_strcasecmp(system_charset_info, (yyvsp[-1].lexer.lex_str).str, "3") == 0) {
              (yyval.ulong_num) = 3;
            } else {
               my_error(ER_WRONG_VALUE, MYF(0), "nth factor", (yyvsp[-1].lexer.lex_str).str);
               MYSQL_YYABORT;
            }
          }
#line 45236 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3115:
#line 17290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 45245 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3116:
#line 17295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 45254 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3117:
#line 17303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
         }
#line 45263 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3118:
#line 17308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 45272 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3119:
#line 17315 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= NULL; }
#line 45278 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3120:
#line 17316 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= (yyvsp[-1].lex_cstring_list); }
#line 45284 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3121:
#line 17321 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == NULL || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 45294 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3122:
#line 17327 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= (yyvsp[-2].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 45304 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3124:
#line 17337 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 45312 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3125:
#line 17341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 45320 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3126:
#line 17345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 45328 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3127:
#line 17349 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 45336 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3128:
#line 17355 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45342 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3129:
#line 17357 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 45348 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3130:
#line 17361 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 45354 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3131:
#line 17362 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 45360 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3132:
#line 17366 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 45366 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3133:
#line 17368 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NAME;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 45374 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3134:
#line 17372 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.role_type = role_enum::ROLE_ALL;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 45383 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3135:
#line 17377 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 45389 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3136:
#line 17379 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_DEFAULT; }
#line 45395 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3137:
#line 17383 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.grant_as_used = false; }
#line 45401 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3138:
#line 17385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.grant_as_used = true;
            Lex->grant_as.user = (yyvsp[-1].lex_user);
          }
#line 45410 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3139:
#line 17392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 45420 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3140:
#line 17397 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45426 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3141:
#line 17401 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45432 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3142:
#line 17402 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45438 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3143:
#line 17407 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 45444 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3144:
#line 17408 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 45450 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3145:
#line 17409 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 45456 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3146:
#line 17414 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 45462 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3147:
#line 17415 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 45468 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3148:
#line 17416 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 45474 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3149:
#line 17420 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45480 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3150:
#line 17421 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45486 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3151:
#line 17426 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 45499 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3152:
#line 17438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 45512 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3153:
#line 17448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 45522 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3154:
#line 17457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 45532 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3155:
#line 17466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 45542 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3156:
#line 17479 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 45548 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3157:
#line 17480 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 45554 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3158:
#line 17481 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 45560 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3161:
#line 17494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[0].query_primary));
          }
#line 45568 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3162:
#line 17500 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
#line 45574 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3163:
#line 17501 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
#line 45580 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3164:
#line 17502 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
#line 45586 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3165:
#line 17503 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
#line 45592 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3166:
#line 17504 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
#line 45598 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3167:
#line 17505 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
#line 45604 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3168:
#line 17506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS));
            (yyval.ulonglong_number)= OPTION_FOUND_ROWS;
          }
#line 45615 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3169:
#line 17512 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_ALL; }
#line 45621 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3170:
#line 17523 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 45632 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3171:
#line 17533 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45638 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3172:
#line 17535 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45644 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3173:
#line 17537 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45650 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3187:
#line 17570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
#line 45665 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3188:
#line 17584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 45673 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3189:
#line 17597 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45679 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3190:
#line 17599 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45685 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3191:
#line 17601 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45691 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3192:
#line 17606 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
#line 45697 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3193:
#line 17611 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 45703 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3194:
#line 17613 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 45709 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3195:
#line 17615 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
#line 45715 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3196:
#line 17620 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 45721 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3197:
#line 17622 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 45727 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3198:
#line 17624 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 45733 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3199:
#line 17629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->query_block->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[0].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[0].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
#line 45773 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3201:
#line 17669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              table_list finally.

              @todo: Don't save the CREATE destination table in
                     Query_block::table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<TABLE_LIST> save_list;
            Query_block * const save_query_block= Select;
            save_query_block->table_list.save_and_clear(&save_list);

            CONTEXTUALIZE((yyvsp[-1].query_primary));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_query_block->table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[0].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;
            lex->create_view_query_block.str=
              static_cast<char *>(thd->memdup((yylsp[-1]).cpp.start, len));
            lex->create_view_query_block.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_query_block);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
#line 45825 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3202:
#line 17719 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 45831 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3203:
#line 17720 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 45837 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3204:
#line 17721 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 45843 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3205:
#line 17722 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 45849 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3206:
#line 17733 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 45855 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3207:
#line 17735 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 45861 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3208:
#line 17740 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
#line 45870 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3209:
#line 17746 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length };
            }
#line 45879 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3210:
#line 17763 "sql_yacc.yy" /* yacc.c:1646  */
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[-8].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[-7].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[-6].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[0].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[0].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[-9]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[-4]).cpp.start);
            lex->ident.length= (yylsp[-2]).cpp.start - (yylsp[-4]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[-8].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 45915 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3211:
#line 17795 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->query_block->add_table_to_list(thd, (yyvsp[-6].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
#line 45946 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3212:
#line 17832 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 45967 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3213:
#line 17850 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 45988 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3214:
#line 17872 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 46015 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3215:
#line 17896 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
          }
#line 46023 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3216:
#line 17902 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[-1].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                            (yyvsp[-1].type)->get_type_flags(), NULL, NULL, &NULL_CSTR, 0,
                                            (yyvsp[-1].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                            nullptr, nullptr, {},
                                            dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 46068 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3217:
#line 17943 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 46080 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3218:
#line 17951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 46139 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3219:
#line 18010 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[0]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
#line 46163 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3220:
#line 18030 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 46171 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3221:
#line 18035 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 46183 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3222:
#line 18043 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 46195 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3223:
#line 18051 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 46208 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3224:
#line 18065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 46217 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3225:
#line 18070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 46226 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3226:
#line 18075 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[0].xid));
          }
#line 46235 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3227:
#line 18080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 46244 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3228:
#line 18085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[0].xid));
          }
#line 46253 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3229:
#line 18090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[0].is_not_empty));
          }
#line 46262 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3230:
#line 18097 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 46268 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3231:
#line 18098 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 46274 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3232:
#line 18102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
#line 46287 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3233:
#line 18111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
            (yyval.xid)= xid;
          }
#line 46301 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3234:
#line 18121 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // check for overwflow of xid format id
            bool format_id_overflow_detected= ((yyvsp[0].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
            (yyval.xid)= xid;
          }
#line 46320 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3235:
#line 18138 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46326 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3236:
#line 18139 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 46332 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3237:
#line 18143 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 46338 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3238:
#line 18144 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_JOIN;        }
#line 46344 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3239:
#line 18145 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_RESUME;      }
#line 46350 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3240:
#line 18149 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 46356 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3241:
#line 18150 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
#line 46362 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3242:
#line 18155 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 46368 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3243:
#line 18157 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_SUSPEND;     }
#line 46374 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3244:
#line 18159 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
#line 46380 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3245:
#line 18164 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_plugin(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str));
          }
#line 46390 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3246:
#line 18170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_component((yyvsp[0].lex_str_list));
          }
#line 46400 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3247:
#line 18179 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_plugin(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 46410 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3248:
#line 18185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_component((yyvsp[0].lex_str_list));
          }
#line 46420 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3249:
#line 18194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 46430 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3250:
#line 18200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list)= (yyvsp[-2].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 46440 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3251:
#line 18209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[0].lex_str_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
#line 46453 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3252:
#line 18227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 46464 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3253:
#line 18237 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            /* Reject space characters around ':' */
            if ((yylsp[-4]).raw.start - (yylsp[-6]).raw.end != 1) {
              YYTHD->syntax_error_at((yylsp[-5]));
              MYSQL_YYABORT;
            }
            (yyvsp[-6].lex_user)->first_factor_auth_info.auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-6].lex_user)->first_factor_auth_info.uses_identified_by_clause = true;
            Lex->contains_plaintext_password= true;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone((yyvsp[-6].lex_user), (yyvsp[-4].ulong_num), to_lex_cstring((yyvsp[0].lexer.lex_str)));

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 46485 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3254:
#line 18257 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= null_lex_str;
          }
#line 46493 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3255:
#line 18261 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[-1].lexer.lex_str);
          }
#line 46501 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3256:
#line 18268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          }
#line 46509 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3257:
#line 18272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 46517 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3258:
#line 18276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NONE;
          }
#line 46525 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3259:
#line 18282 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
#line 46531 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3260:
#line 18283 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
#line 46537 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3261:
#line 18288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
#line 46548 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3262:
#line 18294 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_vcpu_list_type)= (yyvsp[0].resource_group_vcpu_list_type); }
#line 46554 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3263:
#line 18299 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 46565 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3264:
#line 18306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[-2].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 46576 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3265:
#line 18316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto cpu_id= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            assert((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
#line 46587 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3266:
#line 18323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto start= my_strtoull((yyvsp[-2].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            assert((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            assert((yyval.vcpu_range_type).end == end); // truncation check
          }
#line 46601 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3267:
#line 18335 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 46607 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3268:
#line 18336 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 46613 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3269:
#line 18340 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_priority_type).is_default= true; }
#line 46619 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3270:
#line 18342 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[0].num);
          }
#line 46628 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3271:
#line 18349 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_state_type).is_default= true; }
#line 46634 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3272:
#line 18351 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
#line 46643 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3273:
#line 18356 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
#line 46652 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3274:
#line 18363 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= false; }
#line 46658 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3275:
#line 18364 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= true; }
#line 46664 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3276:
#line 18370 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lexer.lex_str).str[0] != '\0') {
              size_t eoff = 0;
              std::string emsg;
              if (!is_valid_json_syntax((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &eoff, &emsg)) {
                my_error(ER_INVALID_JSON_ATTRIBUTE, MYF(0),
                         emsg.c_str(), eoff, (yyvsp[0].lexer.lex_str).str+eoff);
                MYSQL_YYABORT;
              }
            }
            (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 46681 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 46685 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, parse_tree, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD, parse_tree);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
